{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 73ab5a20d392a76b017b","webpack:///./~/riot/riot.js","webpack:///./src/scripts/lib/d3.js","webpack:///./src/scripts/data.js","webpack:///./src/components/districts-map/get_color.js","webpack:///./src/components/districts-map/unhilight_path.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-color/build/d3-color.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./src/components/districts-map/districts-map-legend.tag","webpack:///./src/components/districts-map/districts-map.tag","webpack:///./src/components/districts-nrwbb-map.tag","webpack:///./src/components/map-infobox/map-infobox.tag","webpack:///./src/components/map-searchbox/items-selector.tag","webpack:///./src/components/map-searchbox/map-searchbox-container.tag","webpack:///./src/components/map-searchbox/map-searchbox.tag","webpack:///./src/components/districts-map/hilight_path.js","webpack:///./src/components/districts-map/render_map.js","webpack:///./src/scripts/index.js","webpack:///./src/scripts/mixins/class_name.js","webpack:///./src/scripts/mixins/number_format.js","webpack:///./src/scripts/riot_event_bus.js","webpack:///./~/d3-collection/build/d3-collection.js","webpack:///./~/d3-dsv/build/d3-dsv.js","webpack:///./~/d3-geo/build/d3-geo.js","webpack:///./~/d3-interpolate/build/d3-interpolate.js","webpack:///./~/d3-scale/build/d3-scale.js","webpack:///./~/d3-selection/build/d3-selection.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./src/config.json","webpack:///./src/data/nrw-bb.topo.json","webpack:///./src/data/nrw_bb.csv","webpack:///./~/topojson/dist/topojson.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","riot","global","factory","this","isBoolAttr","value","RE_BOOL_ATTRS","test","isFunction","T_FUNCTION","isObject","T_OBJECT","isUndefined","T_UNDEF","isString","T_STRING","isBlank","isArray","Array","isWritable","obj","key","descriptor","Object","getOwnPropertyDescriptor","writable","isReservedName","RE_RESERVED_NAMES","$$","selector","ctx","prototype","slice","document","querySelectorAll","$","querySelector","createFrag","createDocumentFragment","createDOMPlaceholder","createTextNode","isSvg","el","ownerSVGElement","mkEl","name","createElementNS","SVG_NS","createElement","setInnerHTML","container","html","innerHTML","doc","DOMParser","parseFromString","node","ownerDocument","importNode","documentElement","appendChild","toggleVisibility","dom","show","style","display","remAttr","removeAttribute","styleObjectToString","keys","reduce","acc","prop","getAttr","getAttribute","setAttr","val","xlink","XLINK_REGEX","exec","setAttributeNS","XLINK_NS","setAttribute","safeInsert","root","curr","next","insertBefore","parentNode","walkAttrs","fn","RE_HTML_ATTRS","toLowerCase","walkNodes","context","res","firstChild","nextSibling","each","list","len","length","i","contains","array","item","indexOf","toCamel","str","replace","_","toUpperCase","startsWith","defineProperty","options","extend","enumerable","configurable","src","args","arguments","handleEvent","handler","e","ptag","__","parent","currentTarget","target","srcElement","which","charCode","keyCode","settings$1","autoUpdate","preventUpdate","getImmediateCustomParentTag","isMounted","update","setEventHandler","tag","eventName","cb","bind","RE_EVENTS_PREFIX","listeners","push","RIOT_EVENTS_KEY","removeEventListener","addEventListener","updateDataIs","expr","tagName","conf","isVirtual","head","ref","unmount","impl","__TAG_IMPL","hasImpl","initChildTag","attrs","a","mount","makeReplaceVirtual","onUnmount","delName","opts","dataIs","tags","_tags","arrayishRemove","normalizeAttrName","attrName","ATTRS_PREFIX","CASE_SENSITIVE_ATTRIBUTES","updateExpression","hasValue","isObj","attr","isToggle","SHOW_DIRECTIVE","HIDE_DIRECTIVE","isStyleAttr","isClassAttr","_riot_id","tmpl","create","JSON","stringify","isAttrRemoved","bool","isRtag","wasParsedOnce","hidden","IE_VERSION","nodeValue","updateAllExpressions","expressions","mkitem","base","pos","unmountRedundant","items","j","remove","apply","splice","moveNestedTags","this$1","moveChildTag","move","nextTag","moveVirtual","insert","makeVirtual","append","_each","LOOP_DIRECTIVE","hasKeys","mustReorder","LOOP_NO_REORDER_DIRECTIVE","getTagName","placeholder","child","getTag","ifExpr","CONDITIONAL_DIRECTIVE","oldItems","isLoop","isAnonymous","loopKeys","removeChild","frag","isObject$$1","map","filter","doReorder","oldPos","isNew","mustAppend","mustCreate","Tag$1","cloneNode","index","arrayishAdd","t","parseExpressions","mustIncludeRoot","tree","children","tagImpl","type","nodeType","hasExpr","IfExpr","init","IS_DIRECTIVE","attributes","parentElement","outerHTML","parseAttributes","REF_DIRECTIVES","RefExpr","specialTags","select","trim","selectedIndex","tname","rootEls","childElementCount","replaceYield","reHasYield","reYieldSrc","text","reYieldDest","def","reYieldAll","mkdom","isSvg$$1","match","SVG","GENERIC","tblTags","Tag$2","css","onCreate","tag$1","class","constructor","mountTo","styleManager","inject","add","tag2$1","mount$1","pushTagsTo","riotTag","elem","allTags","selectTags","split","nodeList","_el","mixin$1","mix","g","mixins_id","store","globals","mixins","Error","update$1","__TAGS_CACHE","unregister$1","updateOpts","instAttrs","skipAnonymous","skipAnonymousTags","cleanUpData","implAttrs","isInline","propsInSyncWithParent","observable$1","_tag","virts","tail","__uid","data","nextOpts","canTrigger","shouldUpdate","inheritFrom","trigger","instance","props","propsBlacklist","proto","getPrototypeOf","concat","getOwnPropertyNames","hasGetterSetter","get","set","hasOwnProperty","isPrototypeOf","k","v","globalMixin","GLOBAL_MIXIN","mixin","one","mustKeepRoot","tagIndex","forEach","unmountAll","off","mustSync","newPos","skipDataIs","namedTag","o","ensureArray","dest","isArr","hasIndex","oldIndex","implClass","_innerHTML","replaceChild","sib","styleNode","cssTextProp","WIN","window","undefined","RE_SPECIAL_TAGS","RE_SPECIAL_TAGS_NO_OPTION","viewbox","documentMode","check","freeze","byName","remainder","needsInject","newNode","userNode","getElementsByTagName","styleSheet","join","cssText","skipRegex","prev","code","_skipRegex","start","re","lastIndex","RE_REGEX","beforeReChars","RE_VN_CHAR","wordsLastChar","end","beforeReWords","s","w","brackets","UNDEF","_loopback","_rewrite","bp","_cache","RegExp","source","REGLOB","_create","pair","DEFAULT","_pairs","arr","UNSUPPORTED","NEED_ESCAPE","S_QBLOCK2","_brackets","reOrIdx","_regex","_reset","cachedBrackets","_setSettings","b","_settings","R_MLCOMMS","R_STRINGS","S_QBLOCKS","FINDBRACES","(","[","{","_bp","unescapeStr","prevStr","isexpr","parts","pushQBlock","_pos","_lastIndex","slash","mark","qblocks","ch","rech","ix","settings","_tmpl","_logErr","err","riotData","errorHandler","console","error","message","log","_getTmpl","Function","RE_DQUOTE","qstr","_parseExpr","RE_QBMARK","asText","skipBraces","mm","lv","ir","RE_BREND","cnt","RE_CSNAME","jsb","rightContext","_wrapExpr","tb","JS_VARNAME","mvar","JS_CONTEXT","JS_NOPROPS","clearCache","version","callbacks","defineProperties","on","event","fns","arguments$1","arglen","misc","stub","pristine","current","attrValue","rawValue","hasExp","old","customParent","tagOrDom","__ref","refs","tr","th","td","col","version$1","core","Tag","tag2","unregister","util","vdom","Tag$$1","tag$$1","tag2$$1","mount$$1","mixin$$1","update$$1","unregister$$1","version$$1","observable","riot$1","_d3Scale","scaleQuantile","_d3Selection","_d3Dsv","csvParse","_d3Geo","geoPath","geoMercator","_d3Format","formatLocale","_interopRequireWildcard","__esModule","newObj","default","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","TypeError","_topojson","topojson","_d2","d3","geoSrc","geoData","feature","objects","states","05","12","d","_states$d$state","state","stateShort","search","features","f","properties","AGS","_data","find","ags","f_sum","t_sum","fRatio","Math","round","colors","domain","range","hilighted","classed","ascendingComparator","x","ascending","tickIncrement","stop","count","step","max","power","floor","LN10","pow","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pairs","n","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","sqrt","extent","min","constant","identity","ceil","ticks","reverse","isFinite","sturges","LN2","histogram","xz","x0","x1","tz","threshold","shift","pop","bin","bins","thresholds","quantile","value1","freedmanDiaconis","sort","scott","median","numbers","merge","arrays","merged","permute","indexes","permutes","scan","xi","xj","shuffle","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","definition","Color","color","format","reHex3","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","rgbConvert","rgb","opacity","h","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","y","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","PI","Kn","A","B","cosh","sinh","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","formatTypes","defaultLocale","locale","formatPrefix","prefixExponent","formatDecimal","toExponential","coefficient","exponent","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","%","toFixed","X","prefixes","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","charCodeAt","decimal","group","Infinity","padding","currency","percent","precisionFixed","precisionPrefix","precisionRound","formatDefaultLocale","newInterval","floori","offseti","field","interval","date","Date","d0","d1","offset","setTime","every","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","getUTCSeconds","seconds","minute","getMinutes","minutes","hour","getHours","hours","day","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","years","utcMinute","setUTCSeconds","getUTCMinutes","utcMinutes","utcHour","setUTCMinutes","getUTCHours","utcHours","utcDay","utcDays","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","utcYear","setUTCFullYear","utcYears","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","_interopRequireDefault","_get_color","_get_color2","quantiles","q","_render_map","_render_map2","_hilight_path","_hilight_path2","_unhilight_path","_unhilight_path2","_this","titles","selection","element","gender","getClass","control","EVT","hilight","unhilight","visible","updateInfobox","hideInfobox","close","jumpTo","showSelector","showSearchbox","toggleSelector","getToggleText","results","doSearch","clearResults","handleClick","path","_ref","colorCol","projection","fitSize","selectAll","enter","_class_name","_class_name2","_number_format","_number_format2","config","cssNamespace","modifier","part","_class","loc","_f","Map","object","createObject","setObject","createMap","setMap","map$$1","Set","has","property","clear","entries","size","empty","nest","depth","createResult","setResult","rollup","sortValues","keyValue","valuesByKey","result","sortKey","sortKeys","order","objectConverter","columns","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","parse","convert","parseRows","token","I","N","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","dsvFormat","d3Array","Adder","reset","adder","bv","av","acos","pi","asin","halfPi","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","point","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon","rangeCompare","rangeContains","range$$1","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","y0","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","radius","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link","clipExtent","y1","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","b0","b1","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","dy","graticuleY","dx","graticule","lines","DX","DY","Y","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","clip","scale","translate","geoStream","boundsStream$1","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","rotate","center","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","temp","valueOf","epsilon2","exp","streamObjectType","Feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","deltaMax","centroid","circle","line","ax","ay","bx","by","pointEqual","subject","p1","isSubject","point0","sinPhi1","point1","absDelta","arc","intersection","phiArc","containsObjectType","cy1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","v0","v00","point2","smallRadius","intersect","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","polar","meridian","q1","transform","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$1","sx","sy","reflectX","reflectY","orthographic","stereographic","transverseMercator","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","d3Color","basis","v1","v2","v3","linear","exponential","hue","gamma","nogamma","rgbSpline","spline","color$$1","parseCss","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","skewX","translateX","translateY","scaleX","scaleY","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","basis$1","basisClosed","rgb$1","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","nb","na","reA","reB","string","am","bm","bs","bi","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","zoom","S","ux0","uy0","w0","ux1","uy1","w1","r1","coshr0","duration","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","interpolator","samples","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","d3Collection","d3Interpolate","d3Format","d3Time","d3TimeFormat","ordinal","unknown","implicit","copy","band","rescale","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","pointish","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","polymap","clamp","continuous","piecewise","output","input","interpolate$$1","unit","map$1","linearish","tickFormat","nice","pow10","powp","logp","log10","log2","reflect","logs","pows","raise","quantile$1","invertExtent","number$1","calendar","week","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","tickIntervals","durationYear","durationMonth","ramp","sequential","time","timeFormat","utcTime","utcFormat","UTC","category10","category20b","category20c","category20","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","creatorInherit","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames","typenames","onRemove","typename","__on","capture","onAdd","wrap","filterEvents","customEvent","that","sourceEvent","none","EnterNode","datum","_next","_parent","bindIndex","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","attrRemove","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","names","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","lower","previousSibling","constantNull","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","namespaces","svg","xml","xmlns","namespace","creator","matcher","matches","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","selection_select","subgroups","subnode","subgroup","selectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","selection_data","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","callback","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","getAttributeNS","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","before","selection_remove","selection_datum","selection_dispatch","dispatch","touch","touches","identifier","localDate","H","M","L","utcDate","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","locale_months","formatPeriod","locale_periods","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","dateTime","periods","shortDays","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","requoteRe","numberRe","percentRe","getMilliseconds","getSeconds","getUTCMilliseconds","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","breakpoints","small","medium","large","arcs","nrw-bb","GEN","crs","feature$1","topology","bbox","transformPoint","meshArcs","object$$1","extractArcs","stitch","extract0","geomsByArc","geom","extract1","extract2","extract3","geoms","planarRingArea","mergeArcs","extract","polygonsByArc","polygons","neighbors","ki","rotateArray","reverse$1","geomifyObject","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","hashArc","equalArc","arcA","arcB","ia","ja","ib","jb","filterTrue","filterIdentity","filterNotNull","planarTriangleArea","triangle","planarRingArea$1","halfArea","sphericalRingArea","interior","sphericalTriangleArea","bboxPoint","bboxGeometry","ends","dp","flush","fragmentByEnd","fragmentByStart","stitchedArcs","fragments","emptyIndex","fg","unshift","gf","mesh","indexesByArc","geometryType","ij","ik","untransform","quantizePoint","quantizeGeometry","quantizeArc","box","inputs","outputs","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","hashset","hash","equal","mask","collisions","hashmap","keyType","keyEmpty","valueType","matchKey","keystore","valstore","maybeSet","missingValue","equalPoint","pointA","pointB","buffer","ArrayBuffer","floats","Float64Array","uints","Uint32Array","hashPoint","sequence","previousIndex","currentIndex","nextIndex","visitedByIndex","leftIndex","leftByIndex","rightIndex","rightByIndex","junctionCount","junctionByIndex","indexByPoint","hashIndex","equalIndex","Int32Array","rings","Int8Array","junctionByPoint","cut","junctions","lineMid","1","ringMid","ringFixed","dedup","dedupLine","startPoint","endPoint","startArcs","startArc","endArcs","endArc","arcsByEnd","equalLine","reverseEqualLine","dedupRing","equalRing","reverseEqualRing","findMinimumOffset","ka","kb","minimum","minimumPoint","arcCount","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","prequantize","quantizePoints","px","py","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","quantization","indexGeometry","geometry$$1","indexGeometryType","indexArcs","indexByArc","indexMultiArcs","prune","pruneGeometry","pruneArcs","pruneMultiArcs","pruneArc","newIndex","oldReverse","newIndexByOldIndex","newArcIndex","newArcs","oldArcs","oldObjects","newObjects","filterGeometry","filterRings","filterExteriorRing","filterInteriorRing","filterAttached","testGeometry","testArcs","ringIndex","uniqueRing","uniqueRingByArc","filterWeight","minWeight","weight","Number","MIN_VALUE","filterAttachedWeight","newHeap","up","down","heap","removed","presimplify","triangles","maxWeight","simplify"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAAUI,EAAQD,EAASH,GAEhCI,EAAOD,QAAUH,EAAoB,KAKhC,SAAUI,EAAQD,EAASH,IEnDjC,SAAAW;CACA,SAAAC,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAoC7B,SAAAY,GAAAC,GACA,MAAAC,IAAAC,KAAAF,GAQA,QAAAG,GAAAH,GACA,aAAAA,KAAAI,GASA,QAAAC,GAAAL,GACA,MAAAA,eAAAM,GAQA,QAAAC,GAAAP,GACA,aAAAA,KAAAQ,GAQA,QAAAC,GAAAT,GACA,aAAAA,KAAAU,GAQA,QAAAC,GAAAX,GACA,MAAAO,GAAAP,IAAA,OAAAA,GAAA,KAAAA,EAQA,QAAAY,GAAAZ,GACA,MAAAa,OAAAD,QAAAZ,gBAAAa,OASA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAC,OAAAC,yBAAAJ,EAAAC,EACA,OAAAT,GAAAQ,EAAAC,KAAAC,KAAAG,SAQA,QAAAC,GAAArB,GACA,MAAAsB,IAAApB,KAAAF,GAqBA,QAAAuB,GAAAC,EAAAC,GACA,MAAAZ,OAAAa,UAAAC,MAAApC,MAAAkC,GAAAG,UAAAC,iBAAAL,IASA,QAAAM,GAAAN,EAAAC,GACA,OAAAA,GAAAG,UAAAG,cAAAP,GAOA,QAAAQ,KACA,MAAAJ,UAAAK,yBAOA,QAAAC,KACA,MAAAN,UAAAO,eAAA,IAQA,QAAAC,GAAAC,GACA,QAAAA,EAAAC,gBASA,QAAAC,GAAAC,GACA,cAAAA,EAAAZ,SAAAa,gBAAAC,GAAAF,GAAAZ,SAAAe,cAAAH,GASA,QAAAI,GAAAC,EAAAC,GACA,GAAAvC,EAAAsC,EAAAE,WAGA,CACA,GAAAC,IAAA,GAAAC,YAAAC,gBAAAJ,EAAA,mBACAK,EAAAN,EAAAO,cAAAC,WAAAL,EAAAM,iBAAA,EACAT,GAAAU,YAAAJ,OALKN,GAAAE,UAAAD,EAeL,QAAAU,GAAAC,EAAAC,GACAD,EAAAE,MAAAC,QAAAF,EAAA,UACAD,EAAA,QAAAC,EAQA,QAAAG,GAAAJ,EAAAjB,GACAiB,EAAAK,gBAAAtB,GAUA,QAAAuB,GAAAJ,GACA,MAAAzC,QAAA8C,KAAAL,GAAAM,OAAA,SAAAC,EAAAC,GACA,MAAAD,GAAA,IAAAC,EAAA,KAAAR,EAAAQ,GAAA,KACG,IASH,QAAAC,GAAAX,EAAAjB,GACA,MAAAiB,GAAAY,aAAA7B,GASA,QAAA8B,GAAAb,EAAAjB,EAAA+B,GACA,GAAAC,GAAAC,GAAAC,KAAAlC,EACAgC,MAAA,GACKf,EAAAkB,eAAAC,GAAAJ,EAAA,GAAAD,GAEAd,EAAAoB,aAAArC,EAAA+B,GASL,QAAAO,GAAAC,EAAAC,EAAAC,GACAF,EAAAG,aAAAF,EAAAC,EAAAE,YAAAF,GAQA,QAAAG,GAAAtC,EAAAuC,GACA,GAAAvC,EAGA,IADA,GAAAtD,GACAA,EAAA8F,GAAAZ,KAAA5B,IACKuC,EAAA7F,EAAA,GAAA+F,cAAA/F,EAAA,IAAAA,EAAA,IAAAA,EAAA,IASL,QAAAgG,GAAA/B,EAAA4B,EAAAI,GACA,GAAAhC,EAAA,CACA,GACAwB,GADAS,EAAAL,EAAA5B,EAAAgC,EAGA,IAAAC,KAAA,EAAwB,MAIxB,KAFAjC,IAAAkC,WAEAlC,GACAwB,EAAAxB,EAAAmC,YACAJ,EAAA/B,EAAA4B,EAAAK,GACAjC,EAAAwB,GA+uBA,QAAAY,GAAAC,EAAAT,GAGA,IAFA,GAAAU,GAAAD,IAAAE,OAAA,EACAC,EAAA,EACQA,EAAAF,IAASE,EACjBZ,EAAAS,EAAAG,KAEA,OAAAH,GASA,QAAAI,GAAAC,EAAAC,GACA,MAAAD,GAAAE,QAAAD,MAAA,EAQA,QAAAE,GAAAC,GACA,MAAAA,GAAAC,QAAA,kBAAAC,EAAAhH,GAAgD,MAAAA,GAAAiH,gBAShD,QAAAC,GAAAJ,EAAAvG,GACA,MAAAuG,GAAA5E,MAAA,EAAA3B,EAAAgG,UAAAhG,EAWA,QAAA4G,GAAAvE,EAAArB,EAAAhB,EAAA6G,GAOA,MANA3F,QAAA0F,eAAAvE,EAAArB,EAAA8F,GACA9G,QACA+G,YAAA,EACA3F,UAAA,EACA4F,cAAA,GACGH,IACHxE,EAaA,QAAAyE,GAAAG,GAEA,OADAlG,GAAAmG,EAAAC,UACAlB,EAAA,EAAiBA,EAAAiB,EAAAlB,SAAiBC,EAClC,GAAAlF,EAAAmG,EAAAjB,GACA,OAAAjF,KAAAD,GAEAD,EAAAmG,EAAAjG,KACWiG,EAAAjG,GAAAD,EAAAC,GAIX,OAAAiG,GAwBA,QAAAG,GAAA3D,EAAA4D,EAAAC,GACA,GAAAC,GAAAzH,KAAA0H,GAAAC,OACArB,EAAAtG,KAAA0H,GAAApB,IAEA,KAAAA,EACK,KAAAmB,IAAAnB,GACLA,EAAAmB,EAAAC,GAAApB,KACAmB,IAAAC,GAAAC,MAgBA,IAXA3G,EAAAwG,EAAA,mBAAuCA,EAAAI,cAAAjE,GAEvC3C,EAAAwG,EAAA,YAAgCA,EAAAK,OAAAL,EAAAM,YAEhC9G,EAAAwG,EAAA,WAA+BA,EAAAO,MAAAP,EAAAQ,UAAAR,EAAAS,SAE/BT,EAAAlB,OAEAiB,EAAA9H,KAAAO,KAAAwH,GAGAU,GAAAC,aAEAX,EAAAY,cAAA,CACA,GAAAxI,GAAAyI,GAAArI,KAEAJ,GAAA0I,WAAsB1I,EAAA2I,UAWtB,QAAAC,GAAA9F,EAAA6E,EAAA5D,EAAA8E,GACA,GAAAC,GACAC,EAAArB,EAAAsB,KAAAH,EAAA9E,EAAA4D,EAIA5D,GAAAjB,GAAA,KAGAgG,EAAAhG,EAAAgE,QAAAmC,GAAA,IAGAzC,EAAAqC,EAAAf,GAAAoB,UAAAnF,IAAyC8E,EAAAf,GAAAoB,UAAAC,KAAApF,GACzCA,EAAAqF,MAA8BrF,EAAAqF,QAC9BrF,EAAAqF,IAAAtG,IAAmCiB,EAAAsF,oBAAAP,EAAA/E,EAAAqF,IAAAtG,IAEnCiB,EAAAqF,IAAAtG,GAAAiG,EACAhF,EAAAuF,iBAAAR,EAAAC,GAAA,GASA,QAAAQ,GAAAC,EAAAzB,EAAA0B,GACA,GAAAC,GAAAC,EAAAC,EAAAC,CAEA,OAAAL,GAAAX,KAAAW,EAAAC,gBACAD,GAAAX,IAAAF,UAIAgB,EAAA,YAAAH,EAAAzF,IAAA0F,QAEAD,EAAAX,MAEAc,IACAC,EAAAJ,EAAAX,IAAAf,GAAA8B,KACAC,EAAArH,IACAoH,EAAAnE,WAAAD,aAAAqE,EAAAD,IAGAJ,EAAAX,IAAAiB,SAAA,SAGA/I,EAAA0I,KAEAD,EAAAO,KAAAC,GAAAP,GACAC,GAAUrE,KAAAmE,EAAAzF,IAAAgE,SAAAkC,SAAA,EAAAR,WACVD,EAAAX,IAAAqB,GAAAV,EAAAO,KAAAL,EAAAF,EAAAzF,IAAAV,UAAA0E,GACA5B,EAAAqD,EAAAW,MAAA,SAAAC,GAAiC,MAAAxF,GAAA4E,EAAAX,IAAAxD,KAAA+E,EAAAtH,KAAAsH,EAAA9J,SACjCkJ,EAAAC,UACAD,EAAAX,IAAAwB,QACAV,GACKW,GAAAd,EAAAX,IAAAgB,GAAAL,EAAAX,IAAAxD,MAGL0C,EAAAD,GAAAyC,UAAA,WACA,GAAAC,GAAAhB,EAAAX,IAAA4B,KAAAC,OACAC,EAAAnB,EAAAX,IAAAd,OAAA4C,KACAC,EAAApB,EAAAX,IAAAf,GAAAC,OAAA4C,IACAE,IAAAF,EAAAH,EAAAhB,EAAAX,KACAgC,GAAAD,EAAAJ,EAAAhB,EAAAX,KACAW,EAAAX,IAAAiB,cASA,QAAAgB,GAAAC,GACA,MAAAA,IACAA,IAAAjE,QAAAkE,GAAA,IACAC,GAAAF,KAA4CA,EAAAE,GAAAF,IAC5CA,GAHkB,KAYlB,QAAAG,GAAA1B,GACA,IAAApJ,KAAAiF,OAAAX,EAAAtE,KAAAiF,KAAA,gBAEA,GASA8F,GACAC,EACA9K,EAXAyD,EAAAyF,EAAAzF,IAEAgH,EAAAD,EAAAtB,EAAA6B,MACAC,EAAA9E,GAAA+E,GAAAC,IAAAT,GACApB,EAAAH,EAAAnE,MAAA,YAAAmE,EAAAnE,KAAAoE,QACA1B,EAAAhE,IAAAyF,EAAAzB,QAAAhE,EAAA0B,YAEAgG,EAAA,UAAAV,EACAW,EAAA,UAAAX,CAMA,IAAAvB,EAAAmC,SAUA,YATAnC,EAAAd,UACAc,EAAAb,UAGAa,EAAAa,QACAV,GACAW,GAAAd,IAAAnE,OAMA,IAAAmE,EAAAb,OAAoB,MAAAa,GAAAb,QA0BpB,IAvBArI,EAAAsL,GAAApC,OAAA8B,EAAAlE,KAA8C5F,OAAAqK,OAAAzL,KAAA2H,QAAA3H,YAC9C+K,GAAAlK,EAAAX,GACA8K,EAAAzK,EAAAL,GAGA8K,IACAA,GAAAM,IAAAD,EACAC,EACApL,EAAAsL,GAAAE,KAAAC,UAAAzL,GAAAF,MACKqL,IACLnL,EAAA+D,EAAA/D,MAKAkJ,EAAA6B,MAAA7B,EAAAwC,eAAAb,GAAA7K,KAAA,IACA6D,EAAAJ,EAAAyF,EAAA6B,MACA7B,EAAAwC,eAAA,GAKAxC,EAAAyC,OAAkB3L,OAAAyK,GAClBvB,EAAA0C,OAAoB,MAAA3C,GAAAC,EAAApJ,KAAAE,EACpB,MAAAkJ,EAAA2C,eAAA3C,EAAAlJ,aAGAkJ,EAAAlJ,QACAkJ,EAAA2C,eAAA,GAGAf,GAAAE,GAKA,MAHArK,GAAAX,KAAuBA,EAAA,IAGvByK,OAoBAtK,EAAAH,GACAsI,EAAAmC,EAAAzK,EAAAyD,EAAA3D,MAEGkL,EACHxH,EAAAC,EAAAgH,IAAAS,IAAAlL,MAGAkJ,EAAAyC,OACAlI,EAAAgH,GAAAzK,GAGA,UAAAyK,GAAAhH,EAAAzD,YACAyD,EAAAzD,SAGA6K,GAAA7K,KAAA,GACAsE,EAAAb,EAAAgH,EAAAzK,GAKAmL,GAAA1H,EAAAqI,QAAoCtI,EAAAC,GAAA,MAtCpCzD,GAAA,QAEAyH,IAGAyB,EAAAzB,SACA,aAAAA,EAAA0B,SACA1B,EAAAzH,QACA+L,KAA0BtI,EAAAuI,UAAAhM,IAEdyD,EAAAuI,UAAAhM,MAqCZ,QAAAiM,GAAAC,GACArG,EAAAqG,EAAAtB,EAAAlC,KAAA5I,OAyGA,QAAAqM,GAAAjD,EAAAlI,EAAAuD,EAAA6H,GACA,GAAAhG,GAAAgG,EAAAlL,OAAAqK,OAAAa,KAGA,OAFAhG,GAAA8C,EAAAlI,OACAkI,EAAAmD,MAAiBjG,EAAA8C,EAAAmD,KAAA9H,GACjB6B,EAQA,QAAAkG,GAAAC,EAAAlC,GAIA,IAHA,GAAApE,GAAAoE,EAAArE,OACAwG,EAAAD,EAAAvG,OAEAC,EAAAuG,GACAvG,IACAwG,EAAAC,MAAArC,EAAApE,IAAAoE,EAAApE,IAWA,QAAAwG,GAAApC,EAAApE,GACAoE,EAAAsC,OAAA1G,EAAA,GACAnG,KAAA0J,UACAe,GAAAzK,KAAA2H,OAAA3H,UAAA0H,GAAA2B,SAAA,GAQA,QAAAyD,GAAA3G,GACA,GAAA4G,GAAA/M,IAEA+F,GAAA3E,OAAA8C,KAAAlE,KAAAuK,MAAA,SAAAlB,GACA2D,GAAAJ,MAAAG,EAAAxC,KAAAlB,MAAAlD,MAWA,QAAA8G,GAAAhI,EAAAiI,EAAA3D,GACAA,EACK4D,GAAAP,MAAA5M,MAAAiF,EAAAiI,IAEAlI,EAAAC,EAAAjF,KAAAiF,KAAAiI,EAAAjI,MAUL,QAAAmI,GAAAnI,EAAAiI,EAAA3D,GACAA,EACK8D,GAAAT,MAAA5M,MAAAiF,EAAAiI,IAEAlI,EAAAC,EAAAjF,KAAAiF,KAAAiI,EAAAjI,MASL,QAAAqI,GAAArI,EAAAsE,GACAA,EACK8D,GAAA5N,KAAAO,KAAAiF,GAEAA,EAAAxB,YAAAzD,KAAAiF,MAUL,QAAAsI,GAAA5J,EAAAgE,EAAAyB,GAGArF,EAAAJ,EAAA6J,GAEA,IASAC,GATAC,QAAApJ,GAAAX,EAAAgK,MAAA/M,IAAAmD,EAAAJ,EAAAgK,IACAtE,EAAAuE,GAAAjK,GACAgG,EAAAC,GAAAP,GACAhE,EAAA1B,EAAA0B,WACAwI,EAAAzL,IACA0L,EAAAC,GAAApK,GACAqK,EAAA1J,EAAAX,EAAAsK,IACA1D,KACA2D,KAEAC,GAAA,EACAC,GAAAxE,GAAAP,GACAE,EAAA,YAAA5F,EAAA0F,OA4HA,OAzHAD,GAAAoC,GAAA6C,SAAAjF,GACAA,EAAA+E,QAAA,EAEAH,GAAejK,EAAAJ,EAAAsK,IAGf5I,EAAAD,aAAAyI,EAAAlK,GACA0B,EAAAiJ,YAAA3K,GAEAyF,EAAAb,OAAA,WAEAa,EAAAlJ,MAAAsL,GAAApC,EAAA3E,IAAAkD,EAEA,IAAA4G,GAAArM,IACAuK,EAAArD,EAAAlJ,MACAsO,GAAA1N,EAAA2L,KAAA9L,EAAA8L,GACAxH,EAAA4I,EAAAxI,UAIAJ,KAGAuJ,GACAf,EAAAhB,IAAA,EACAA,EAAAgB,EACArM,OAAA8C,KAAAuI,GAAAgC,IAAA,SAAAvN,GACA,MAAAmL,GAAAjD,EAAAqD,EAAAvL,YAGAuM,GAAA,EAGAO,IACAvB,IAAAiC,OAAA,SAAApI,EAAAH,GACA,MAAAiD,GAAAlI,MAAAsN,IACWhD,GAAAwC,EAAA3B,EAAAjD,EAAA9C,EAAAH,EAAAwB,MAEX6D,GAAAwC,EAAAhH,EAAA5F,OAAAqK,OAAA9D,GAAArB,OAKAP,EAAA0G,EAAA,SAAAnG,EAAAH,GAEA,GACAwI,GAAAjB,SAAApH,KAAA9F,KAAAiN,EACAmB,EAAAV,EAAA3H,QAAAD,GACAuI,EAAAD,KAAA,EACArC,GAAAsC,GAAAF,EAAAC,EAAAzI,EAEAsC,EAAA8B,EAAAgC,GACAuC,EAAA3I,GAAA+H,EAAAhI,OACA6I,EAAAJ,GAAAE,IAAAF,IAAAlG,CAEAnC,IAAAmH,GAAArE,EAAAlI,IAAAmL,EAAAjD,EAAA9C,EAAAH,GAAAG,EAGAyI,GACAtG,EAAA,GAAAuG,IAAArF,GACAhC,SACAwG,SACAC,cACA/E,UACApE,KAAAtB,EAAAsL,UAAAb,GACA9H,OACA4I,MAAA/I,GACSxC,EAAAV,WAGTwF,EAAAwB,QAEA6E,EACWxB,EAAAV,MAAAnE,GAAA8F,GAAAtJ,EAAAsE,IAEA6D,EAAAR,MAAAnE,GAAAxD,EAAAsF,EAAApE,GAAAoD,IAEXuF,GAA0BZ,EAAArB,OAAA1G,EAAA,EAAAG,GAC1BiE,EAAAsC,OAAA1G,EAAA,EAAAsC,GACAqF,GAAoBqB,GAAAxH,EAAA4C,KAAAlB,EAAAZ,GAAA,IACb8D,IAAApG,GAAAwI,IAEPvI,EAAAqG,EAAAyB,EAAA3B,MACAU,EAAAL,MAAAnE,GAAAxD,EAAAsF,EAAApE,GAAAoD,IAEAgB,EAAAsC,OAAA1G,EAAA,EAAAoE,EAAAsC,OAAAN,EAAA,OAEA2B,EAAArB,OAAA1G,EAAA,EAAA+H,EAAArB,OAAAN,EAAA,QAIAnD,EAAAmD,MAAuB9D,EAAAW,EAAAmD,KAAApG,IAIvB2H,GAAArF,EAAA8B,MAAiCuC,EAAArN,KAAAgJ,EAAAtC,IAKjCsC,EAAAf,GAAApB,OACAmC,EAAAf,GAAAwH,MAAA/I,EACAsC,EAAAf,GAAAC,SAEAoH,GAAwBtG,EAAAF,OAAAjC,KAIxBkG,EAAAC,EAAAlC,GAGA2D,EAAAzB,EAAA5K,QAGAoD,EAAAG,aAAAmJ,EAAAV,KAGAzE,EAAAM,QAAA,WACA3D,EAAAwE,EAAA,SAAA6E,GAA4BA,EAAA1F,aAG5BN,EAWA,QAAAiG,GAAApK,EAAAmH,EAAAkD,GACA,GAAAvC,GAAA/M,KAEAuP,GAAc5H,QAAS6H,SAAApD,GAEvB1G,GAAAT,EAAA,SAAAtB,EAAAhC,GACA,GAAAsJ,GAAA7B,EAAAqG,EAAAC,EAAA/L,EAAAgM,SAAAhI,EAAAhG,EAAAgG,MACA,KAAA2H,GAAA3L,IAAAsB,EAA2C,OAAS0C,SAMpD,IAHA,IAAA+H,GAAA,UAAA/L,EAAA0B,WAAAgE,SAAAmC,GAAAoE,QAAAjM,EAAAuI,YACOvE,EAAA6H,SAAAzG,MAAuBpF,MAAAyF,KAAAzF,EAAAuI,YAE9B,IAAAwD,EAAqB,MAAA/N,EAErB,IAAA4H,GAAA,YAAA5F,EAAA0F,OAGA,IAAA4B,EAAA3G,EAAAX,EAAA6J,IAGA,MAFAjE,IAAqB/E,EAAAb,EAAA,kBACrBgE,EAAA6H,SAAAzG,KAAAwE,EAAA5J,EAAAoJ,EAAA9B,KACA,CAKA,IAAAA,EAAA3G,EAAAX,EAAAsK,IAEA,MADAtG,GAAA6H,SAAAzG,KAAA3H,OAAAqK,OAAAoE,IAAAC,KAAAnM,EAAAoJ,EAAA9B,KACA,CAGA,KAAA7B,EAAA9E,EAAAX,EAAAoM,MACAvE,GAAAoE,QAAAxG,GAEA,MADAzB,GAAA6H,SAAAzG,MAA8B+C,QAAA,EAAA1C,OAAAzF,MAAAoG,SAAAlI,MAAApC,KAAAkE,EAAAqM,eAC9B,CAaA,IAPAP,EAAA1B,GAAApK,GACA4F,IACAjF,EAAAX,EAAA,gBAAuCA,EAAAsM,cAAA3B,YAAA3K,GACvC8L,GAAAnL,EAAAX,EAAA,gBAAAW,EAAAX,EAAA,iBACS8L,GAAYjE,KAAA7H,EAAAuM,aAGrBT,IAAA9L,IAAAsB,GAAAqK,GAAA,CACA,IAAA/F,GAAAjF,EAAAX,EAAAoM,IASO,CACP,GAAAzG,IAAoBrE,KAAAtB,EAAAgE,OAAAoF,EAAAlD,SAAA,EAEpB,OADAlC,GAAA6H,SAAAzG,KAAAe,GAAA2F,EAAAnG,EAAA3F,EAAAV,UAAA8J,KACA,EATAvI,EAAAb,EAAA,iBAEA,IAAA8E,GAAA,GAAAuG,KAA6BxD,KAAA7H,EAAAuM,YAClBjL,KAAAtB,EAAAgE,OAAAoF,GACXpJ,EAAAV,UACA0E,GAAA6H,SAAAzG,KAAAN,GAgBA,MAPA0H,GAAAvD,MAAAG,GAAApJ,IAAAqM,WAAA,SAAA/E,EAAA7B,GACAA,GACAzB,EAAA6H,SAAAzG,KAAAK,OAKYzB,WACT4H,GAWH,QAAAY,GAAAxM,EAAAoG,EAAAxE,GACA,GAAAwH,GAAA/M,IAEA+F,GAAAgE,EAAA,SAAAkB,GACA,IAAAA,EAAgB,QAEhB,IAAA7B,GAAA1G,EAAAuI,EAAAvI,KAAAmJ,EAAA5L,EAAAyC,EAEA0D,GAAAgK,GAAA1N,GACA0G,EAAAhI,OAAAqK,OAAA4E,IAAAP,KAAAnM,EAAAoJ,EAAArK,EAAAuI,EAAA/K,OACKsL,GAAAoE,QAAA3E,EAAA/K,SACLkJ,GAAczF,MAAAyF,KAAA6B,EAAA/K,MAAA+K,KAAAvI,EAAAmJ,SAGdtG,EAAA0F,EAAA7B,KAwBA,QAAAkH,GAAA/N,EAAAiJ,EAAAnC,GAEA,GACAkH,GAAA,MAAAlH,EAAA,GACA1B,EAAA4I,EAAA,kBAUA,IANAhO,EAAAU,UAAA,IAAA0E,EAAA6D,EAAAgF,OAAA,KAAA7I,EACAA,EAAApF,EAAAsD,WAKA0K,EACA5I,EAAA8I,eAAA,MACG,CAEH,GAAAC,GAAAC,GAAAtH,EACAqH,IAAA,IAAA/I,EAAAiJ,oBAAkDjJ,EAAA3F,EAAA0O,EAAA/I,IAElD,MAAAA,GAOA,QAAAkJ,GAAArF,EAAAxI,GAEA,IAAA8N,GAAA1Q,KAAAoL,GAA+B,MAAAA,EAG/B,IAAArE,KAOA,OALAnE,QAAA0D,QAAAqK,GAAA,SAAApK,EAAA8C,EAAAuH,GAEA,MADA7J,GAAAsC,GAAAtC,EAAAsC,IAAAuH,EACA,KACGR,OAEHhF,EACA9E,QAAAuK,GAAA,SAAAtK,EAAA8C,EAAAyH,GACA,MAAA/J,GAAAsC,IAAAyH,GAAA,KAEAxK,QAAAyK,GAAA,SAAAxK,EAAAuK,GACA,MAAAlO,IAAAkO,GAAA,KAcA,QAAAE,GAAA5F,EAAAxI,EAAAqO,GACA,GAAAC,GAAA9F,KAAA8F,MAAA,iBACAjI,EAAAiI,KAAA,GAAA7L,cACAlD,EAAAE,EAAA4O,EAAAE,GAAAC,GAWA,OARAhG,GAAAqF,EAAArF,EAAAxI,GAGAyO,GAAArR,KAAAiJ,GACK9G,EAAA+N,EAAA/N,EAAAiJ,EAAAnC,GAEAvG,EAAAP,EAAAiJ,GAELjJ,EASA,QAAAmP,GAAAnP,EAAA8H,GAEA,GAAAZ,GAAAzJ,KACA0C,EAAA+G,EAAA/G,KACA8I,EAAA/B,EAAA+B,KACAmG,EAAAlI,EAAAkI,IACA5H,EAAAN,EAAAM,MACA6H,EAAAnI,EAAAmI,QAaA,OAXAhI,IAAAlH,KACAmP,EAAAnP,EAAA8I,EAAAmG,EAAA5H,EAAA6H,GAEAhI,GAAAlH,GAAAoP,MAAA9R,KAAA+R,aAIAC,GAAAzP,EAAAG,EAAA2H,EAAArK,MAEA2R,GAAYM,GAAAC,SAEZlS,KAYA,QAAA6R,GAAAnP,EAAA8I,EAAAmG,EAAA5H,EAAAxE,GAqBA,MApBAlF,GAAA0J,KACAxE,EAAAwE,EAEA,eAAA3J,KAAAuR,IACA5H,EAAA4H,EACAA,EAAA,IAEO5H,EAAA,IAGP4H,IACAtR,EAAAsR,GACOpM,EAAAoM,EAEAM,GAAAE,IAAAR,IAGPjP,IAAA+C,cACAmE,GAAAlH,IAAsBA,OAAA8I,OAAAzB,QAAAxE,MAEtB7C,EAYA,QAAA0P,GAAA1P,EAAA8I,EAAAmG,EAAA5H,EAAAxE,GAKA,MAJAoM,IAAYM,GAAAE,IAAAR,EAAAjP,GAEZkH,GAAAlH,IAAsBA,OAAA8I,OAAAzB,QAAAxE,MAEtB7C,EAUA,QAAA2P,IAAA3Q,EAAA2H,EAAAgB,GAIA,QAAAiI,GAAArN,GACA,GAAAA,EAAAoE,QAAA,CACA,GAAAZ,GAAA8J,EAAAjO,EAAAW,EAAA8K,GAGA1G,IAAAkJ,IAAAlJ,IACAkJ,EAAAlJ,EACA7E,EAAAS,EAAA8K,GAAA1G,IAGAZ,EAAAuJ,GAAA/M,EAAAsN,GAAAtN,EAAAoE,QAAA5D,cAAA4E,GAEA5B,GACS8B,EAAAxB,KAAAN,OACJxD,GAAAiB,QACEH,EAAAd,EAAAqN,GAlBP,GACAE,GAAAC,EADAlI,IA+CA,IAzBA0H,GAAAC,SAEA3R,EAAA8I,KACAgB,EAAAhB,EACAA,EAAA,GAIA1I,EAAAe,IACAA,EAAA,MAAAA,EAGA+Q,EAAAC,KAEAhR,EAAAgR,GAAAhR,EAAAiR,MAAA,QAIAH,EAAA9Q,EAAAD,EAAAC,OAIK8Q,EAAA9Q,EAGL,MAAA2H,EAAA,CAIA,GAFAA,EAAAoJ,GAAAC,KAEAF,EAAAnJ,QACOmJ,EAAA/Q,EAAA4H,EAAAmJ,OACP,CAEA,GAAAI,KAEA7M,GAAAyM,EAAA,SAAAK,GAAiC,MAAAD,GAAA7J,KAAAtH,EAAA4H,EAAAwJ,MAEjCL,EAAAI,EAGAvJ,EAAA,EAKA,MAFAiJ,GAAAE,GAEAjI,EAeA,QAAAuI,IAAApQ,EAAAqQ,EAAAC,GAEA,GAAAzS,EAAAmC,GAEA,WADAoQ,IAAA,KAAAG,MAAA,KAAAvQ,GAAA,EAIA,IAAAwQ,GAAAF,EAAAG,GAAAC,EAGA,KAAAL,EAAA,CACA,GAAAtS,EAAAyS,EAAAxQ,IACO,SAAA2Q,OAAA,uBAAA3Q,EAEP,OAAAwQ,GAAAxQ,GAIAwQ,EAAAxQ,GAAArC,EAAA0S,GACA/L,EAAA+L,EAAAnR,UAAAsR,EAAAxQ,SAA2CqQ,EAC3C/L,EAAAkM,EAAAxQ,OAA4BqQ,GAO5B,QAAAO,MACA,MAAAvN,GAAAwN,GAAA,SAAA9K,GAA4C,MAAAA,GAAAF,WAG5C,QAAAiL,IAAA9Q,GACAkH,GAAAlH,GAAA,KA8BA,QAAA+Q,IAAAtF,EAAAxG,EAAAyG,EAAA/D,EAAAqJ,GAIA,IAAAvF,IAAAC,EAAA,CAEA,GAAAzM,IAAAyM,GAAAD,EAAAnO,KAAA2H,GAAA3H,IACA+F,GAAA2N,EAAA,SAAAzI,GACAA,EAAA7B,MAAoB+C,EAAA1M,KAAAkC,GAAAsJ,EAAA7B,OAEpBiB,EAAA7D,EAAAyE,EAAAvI,MAAAgE,QAAAkE,GAAA,KAAAK,EAAA7B,KAAA6B,EAAA7B,KAAAlJ,MAAA+K,EAAA/K,SAYA,QAAA8O,IAAArF,EAAAL,EAAArG,GACA,SAAA0G,UACA,SAAAL,SAEA,IAeA3F,GAfA0G,EAAArD,KAAsBsC,EAAAe,MACtB1C,EAAA2B,EAAA3B,OACAwG,EAAA7E,EAAA6E,OACAC,IAAA9E,EAAA8E,YACAuF,EAAAzL,GAAA0L,mBAAAxF,EACA9H,EAAAuN,GAAAvK,EAAAhD,MACA4I,EAAA5F,EAAA4F,MACAwE,KACAI,KACA1H,KACAnH,EAAAqE,EAAArE,KACAoE,EAAAC,EAAAD,SAAAuE,GAAA3I,GACAsE,EAAA,YAAAF,EACA0K,GAAAxK,IAAAI,EAAA6B,KACAwI,IAIAL,IAAuBM,GAAAjU,MAEvB2J,EAAAjH,MAAAuC,EAAAiP,MAA+BjP,EAAAiP,KAAAxK,SAAA,GAG/B1J,KAAAsI,WAAA,EAEAxB,EAAA9G,KAAA,MACAoO,cACAsF,YACAzQ,YACAoG,UACA6F,QACAf,SACA4F,WAGAjL,aAEAqL,SACAC,KAAA,KACA5K,KAAA,KACA7B,OAAA,KACArB,KAAA,OAKAQ,EAAA9G,KAAA,aAAAqU,IACAvN,EAAA9G,KAAA,OAAAiF,GACA+B,EAAAhH,MAAgBqK,QAAa/D,GAE7BQ,EAAA9G,KAAA,SAAA2H,GAAA,MACAb,EAAA9G,KAAA,WACA8G,EAAA9G,KAAA,WAEA+T,GAAA5F,GAAAC,EACAzK,EAAAsB,GAEAsE,IAAqBtE,EAAAhC,UAAA,IACrBU,EAAAyN,EAAAzH,EAAA6B,KAAAvI,EAAAX,EAAA2C,KAQA6B,EAAA9G,KAAA,kBAAAsU,GACA,GAAAC,MACAC,EAAAxU,KAAAsI,YAAAqL,CAQA,OAJAW,GAAAT,GAAAS,GACAtN,EAAAhH,KAAAsU,GACAb,GAAA7G,MAAA5M,MAAAmO,EAAAxG,EAAAyG,EAAAmG,EAAAb,IAEAc,GAAAxU,KAAAsI,WAAAjI,EAAAL,KAAAyU,gBAAAzU,KAAAyU,aAAAH,EAAAC,GACAvU,MAIAmO,GAAAC,GAAgCsG,GAAA9H,MAAA5M,WAAA2H,OAAAqM,IAChChN,EAAAqD,EAAAkK,GACAC,GAAqBxU,KAAA2U,QAAA,SAAAL,GACrBnI,EAAA1M,KAAAO,KAAAoM,GACAoI,GAAqBxU,KAAA2U,QAAA,WAErB3U,OAEG4I,KAAA5I,OAMH8G,EAAA9G,KAAA,mBACA,GAAA+M,GAAA/M,IA+CA,OA7CA+F,GAAAsB,UAAA,SAAA0L,GACA,GAAA6B,GAAA3T,EACA4T,KAGAC,GAAA,mBAEA/B,GAAApS,EAAAoS,GAAAD,GAAAC,KAKA6B,EAFAvU,EAAA0S,GAEA,GAAAA,GACcA,CAEd,IAAAgC,GAAA3T,OAAA4T,eAAAJ,EAGA,GAAUC,KAAAI,OAAA7T,OAAA8T,oBAAAjU,GAAA2T,UACV3T,EAAAG,OAAA4T,eAAA/T,GAAA2T,GAGA7O,GAAA8O,EAAA,SAAA3T,GAGA,IAAAkF,EAAA0O,EAAA5T,GAAA,CAEA,GAAAC,GAAAC,OAAAC,yBAAAuT,EAAA1T,IAAAE,OAAAC,yBAAA0T,EAAA7T,GACAiU,EAAAhU,MAAAiU,KAAAjU,EAAAkU,MAGAtI,EAAAuI,eAAApU,IAAAiU,EACA/T,OAAA0F,eAAAiG,EAAA7L,EAAAC,GAEA4L,EAAA7L,GAAAb,EAAAuU,EAAA1T,IACA0T,EAAA1T,GAAA0H,KAAAmE,GACA6H,EAAA1T,MAMA0T,EAAA9E,MACS8E,EAAA9E,KAAAlH,KAAAmE,OAET/M,MACG4I,KAAA5I,OAMH8G,EAAA9G,KAAA,mBACA,GAAA+M,GAAA/M,IAEAiF,GAAAiP,KAAAlU,KAGAmQ,EAAAvD,MAAAjF,GAAA1C,IAAA+K,WAAA,SAAA/E,EAAA7B,IACAgF,GAAAiC,GAAAkF,cAAAnM,KAAwDA,EAAAX,IAAAsE,GACxD9B,EAAA7B,OACAsK,EAAA3K,KAAAkC,MAIA6I,KACAxO,EAAAqE,EAAAI,MAAA,SAAAyL,EAAAC,GAA2C3B,EAAA/K,MAAiBrG,KAAA8S,EAAAtV,MAAAuV,MAC5DtF,EAAAvD,MAAA5M,MAAAiF,EAAA6O,EAAA,SAAA7I,EAAA7B,GACAA,EAAiBgD,EAAArD,KAAAK,GACL5E,EAAAS,EAAAgG,EAAAvI,KAAAuI,EAAA/K,UAIZuT,GAAA7G,MAAA5M,MAAAmO,EAAAxG,EAAAyG,EAAA/D,EAAAqJ,GAGA,IAAAgC,GAAA5C,GAAA6C,GAEA,IAAAD,IAAA/B,EACA,OAAAxN,KAAAuP,GACAA,EAAAJ,eAAAnP,IACA4G,EAAA6I,MAAAF,EAAAvP,GAcA,IATAwD,EAAApE,IAAkBoE,EAAApE,GAAA9F,KAAAO,KAAAqK,GAElBsJ,GAAyB3T,KAAA2U,QAAA,gBAGzBtF,EAAAzC,MAAA5M,MAAA2D,EAAAyI,EAAAgC,IAEApO,KAAAuI,OAAAjC,IAEA8H,IAAA2F,EACA,KAAApQ,EAAAkC,YAA8BZ,EAAAxB,YAAAE,EAAAkC,WAM9B,IAHAiB,EAAA9G,KAAA,OAAAiF,GACA6B,EAAA9G,KAAA,iBAEA2T,EAAA,CAGA,GAAA3T,KAAA2H,OAIA,CACA,GAAA/H,GAAAyI,GAAArI,KAAA2H,OACA/H,GAAAiW,IAAAjW,EAAA0I,UAAA,6BACAyE,EAAA4H,QAAA,eANA3U,MAAA2U,QAAA,QAUA,OAAA3U,QAEG4I,KAAA5I,OAOH8G,EAAA9G,KAAA,mBAAA8V,GACA,GAIArO,GAJAsF,EAAA/M,KAEAuC,EAAAvC,KAAAiF,KACArF,EAAA2C,EAAA8C,WAEA0Q,EAAAxC,GAAAhN,QAAAvG,KAoEA,OAlEA2T,IAAyB3T,KAAA2U,QAAA,kBAGzBrP,EAAAqE,EAAAI,MAAA,SAAArH,GACAmE,EAAAnE,EAAAkI,MACSlI,IAAAb,MAAA+I,GAAA1E,SAETnC,EAAAkB,EAAAvC,KAIA1C,KAAA0H,GAAAoB,UAAAkN,QAAA,SAAArS,GACAvC,OAAA8C,KAAAP,EAAAqF,KAAAgN,QAAA,SAAAtN,GACA/E,EAAAsF,oBAAAP,EAAA/E,EAAAqF,IAAAN,QAKAqN,KAAA,GACOxC,GAAA1G,OAAAkJ,EAAA,IAEPnW,GAAA2J,KACA5B,GACAF,EAAAY,GAAAV,GAEA4B,EACAnI,OAAA8C,KAAAlE,KAAAuK,MAAAyL,QAAA,SAAA3M,GACAoB,GAAAhD,EAAA8C,KAAAlB,EAAA0D,EAAAxC,KAAAlB,OAGAoB,GAAAhD,EAAA8C,KAAAlB,EAAArJ,MAEA2H,IAAAF,GACAgD,GAAA9C,EAAA4C,KAAAlB,EAAArJ,QAKA8C,EAAAP,EAAA,IAGA3C,IAAAkW,GAA+BlW,EAAA0O,YAAA/L,IAG/BvC,KAAA0H,GAAAyM,OACApO,EAAA/F,KAAA0H,GAAAyM,MAAA,SAAAsB,GACAA,EAAApQ,YAA2BoQ,EAAApQ,WAAAiJ,YAAAmH,KAK3BQ,GAAA7J,GACArG,EAAA2N,EAAA,SAAA1J,GAAkC,MAAAA,GAAAZ,MAAAY,EAAAZ,KAAAM,SAAAM,EAAAZ,KAAAM,YAGlC1J,KAAA0H,GAAAyC,WAA4BnK,KAAA0H,GAAAyC,YAE5BwJ,IACA3T,KAAA2U,QAAA,WACA3U,KAAAkW,IAAA,MAGApP,EAAA9G,KAAA,sBAEAA,MAAAiF,KAAAiP,KAEAlU,MAEG4I,KAAA5I,OAQH,QAAA+N,IAAApK,GACA,MAAAA,GAAA0F,SAAAO,GAAAtF,EAAAX,EAAAoM,KACAzL,EAAAX,EAAAoM,KAAApM,EAAA0F,QAAA5D,eASA,QAAAiP,IAAA7M,EAAAmM,GACA,GAAAjH,GAAA/M,IAEA+F,GAAA3E,OAAA8C,KAAA2D,GAAA,SAAA2N,GAEA,GAAAW,IAAA5U,EAAAiU,IAAApP,EAAA4N,EAAAwB,IAEA/U,EAAAsM,EAAAyI,KAAAW,KAGAA,GAAsBnC,EAAAjL,KAAAyM,GACtBzI,EAAAyI,GAAA3N,EAAA2N,MAWA,QAAAxI,IAAA3D,EAAA+M,GACA,GACA7L,GADA5C,EAAA3H,KAAA2H,MAGAA,KAEA4C,EAAA5C,EAAA4C,KAAAlB,GAEAvI,EAAAyJ,GACKA,EAAAsC,OAAAuJ,EAAA,EAAA7L,EAAAsC,OAAAtC,EAAAhE,QAAAvG,MAAA,OACGmP,GAAAxH,EAAA4C,KAAAlB,EAAArJ,OAWR,QAAA8J,IAAAgE,EAAAzD,EAAApH,EAAA0E,GACA,GAAAc,GAAA,GAAAuG,IAAAlB,EAAAzD,EAAApH,GACAoG,EAAAgB,EAAAhB,SAAAuE,GAAAvD,EAAApF,MAAA,GACAwC,EAAAY,GAAAV,EAeA,OAbAb,GAAA2B,EAAA,SAAAhB,GAIAgB,EAAAf,GAAAC,SAGAwH,GAAA1H,EAAA8C,KAAAlB,EAAAZ,GAGAhB,IAAAE,GACKwH,GAAAxH,EAAA4C,KAAAlB,EAAAZ,GAELA,EAQA,QAAAJ,IAAAI,GAEA,IADA,GAAAhB,GAAAgB,EACAhB,EAAAC,GAAA0G,aACA3G,EAAAE,QACAF,IAAAE,MAEA,OAAAF,GAOA,QAAAwO,IAAA7J,GACArG,EAAAqG,EAAA,SAAAhD,GACAA,YAAA4F,IAAgC5F,EAAAM,SAAA,GAChCN,EAAAC,QAA4BD,EAAAX,IAAAiB,SAAA,GAC5BN,EAAAM,SAA4BN,EAAAM,YAU5B,QAAAkE,IAAAjK,EAAA0S,GACA,GAAAvI,GAAAC,GAAApK,GACA2S,GAAAD,GAAA/R,EAAAX,EAAAoM,GACA,OAAAuG,KAAA9K,GAAAoE,QAAA0G,GACAA,EACAxI,IAAApL,KAAAiB,EAAA0F,QAAA5D,cAQA,QAAAoO,IAAAS,GACA,KAAAA,YAAAtF,KAAAsF,GAAAjU,EAAAiU,EAAAK,UACK,MAAAL,EAEL,IAAAiC,KACA,QAAArV,KAAAoT,GACA9S,GAAApB,KAAAc,KAAuCqV,EAAArV,GAAAoT,EAAApT,GAEvC,OAAAqV,GAYA,QAAApH,IAAAlO,EAAAC,EAAAhB,EAAAsW,EAAAtH,GACA,GAAAuH,GAAAxV,EAAAC,GACAwV,EAAA5V,EAAA2V,GACAE,GAAAlW,EAAAyO,EAEA,KAAAuH,OAAAvW,EAGA,IAAAuW,GAAAD,EAA6BvV,EAAAC,IAAAhB,OAC7B,IAAAuW,EAGA,GAAAC,EAAA,CACA,GAAAE,GAAAH,EAAAlQ,QAAArG,EAEA,IAAA0W,IAAA1H,EAA+B,MAE/B0H,MAAA,GAA4BH,EAAA5J,OAAA+J,EAAA,GAE5BD,EACAF,EAAA5J,OAAAqC,EAAA,EAAAhP,GAEAuW,EAAA1N,KAAA7I,OAEYe,GAAAC,IAAAuV,EAAAvW,OAfOe,GAAAC,GAAAhB,EA2BnB,QAAAuK,IAAAxJ,EAAAC,EAAAhB,EAAAsW,GACA,GAAA1V,EAAAG,EAAAC,IAAA,CACA,GAAAgO,GAAAjO,EAAAC,GAAAqF,QAAArG,EACAgP,MAAA,GAAuBjO,EAAAC,GAAA2L,OAAAqC,EAAA,GACvBjO,EAAAC,GAAAgF,OACA,IAAAjF,EAAAC,GAAAgF,QAAAsQ,IAAqDvV,EAAAC,GAAAD,EAAAC,GAAA,UAD1BD,GAAAC,cAGtBD,GAAAC,GAWL,QAAA8Q,IAAA/M,EAAAoE,EAAAgB,EAAA1I,GACA,GAAAgI,GAAAC,GAAAP,GACAwN,EAAAjN,GAAAP,GAAAyI,MACArJ,EAAA9G,IAAAkV,EAAAzV,OAAAqK,OAAAoL,EAAAjV,eAEAqB,EAAAgC,EAAA6R,WAAA7R,EAAA6R,YAAA7R,EAAAhC,UAEAqG,EAAAtC,GAAqB/B,OAAAoF,SAA4B1C,OAAA0C,IAAA1C,OAAA,MAUjD,OARAgC,IAAA1E,GAAqB+J,GAAApC,MAAAnE,GAAAkB,EAAAL,EAAArG,IAErBwF,KAAAwB,QACAxB,EAAAwB,OAAA,GAEA7D,EAAAmN,GAAA9K,IAAuC8K,GAAAxK,KAAAN,IAGvCA,EASA,QAAAyB,IAAAzB,EAAAgB,GACA,GAAA8E,GAAArM,GACAmL,IAAA5N,KAAAgJ,EAAA8F,GACA9E,EAAApE,WAAA0R,aAAAxI,EAAA9E,GASA,QAAA4D,IAAAlG,EAAAU,GACA,GAKAmP,GAAAzU,EALAwK,EAAA/M,KAEAwJ,EAAApH,IACAgS,EAAAhS,IACAmM,EAAArM,GASA,KANAlC,KAAAiF,KAAAG,aAAAoE,EAAAxJ,KAAAiF,KAAAY,YACA7F,KAAAiF,KAAAxB,YAAA2Q,GAEApU,KAAA0H,GAAA8B,KAAAjH,EAAAiH,EACAxJ,KAAA0H,GAAA0M,OAEA7R,GACAyU,EAAAzU,EAAAuD,YACAyI,EAAA9K,YAAAlB,GACAwK,EAAArF,GAAAyM,MAAApL,KAAAxG,GACAA,EAAAyU,CAGAnP,GACKV,EAAA/B,aAAAmJ,EAAA1G,EAAAH,GAAA8B,MAEArC,EAAA1D,YAAA8K,GASL,QAAApB,IAAAhG,EAAAU,GAOA,IANA,GAIAmP,GAJAjK,EAAA/M,KAEAuC,EAAAvC,KAAA0H,GAAA8B,KACA+E,EAAArM,IAGAK,GAIA,GAHAyU,EAAAzU,EAAAuD,YACAyI,EAAA9K,YAAAlB,GACAA,EAAAyU,EACAzU,IAAAwK,EAAArF,GAAA0M,KAAA,CACA7F,EAAA9K,YAAAlB,GACA4E,EAAA/B,aAAAmJ,EAAA1G,EAAAH,GAAA8B,KACA,QAUA,QAAAkJ,IAAAnI,GAEA,IAAAA,EAAA,CACA,GAAArG,GAAA9C,OAAA8C,KAAA0F,GACA,OAAA1F,GAAAwO,GAAAxO,GAGA,MAAAqG,GACAmE,OAAA,SAAAU,GAA0B,gBAAAhP,KAAAgP,KAC1BjL,OAAA,SAAA6B,EAAAoJ,GACA,GAAA1M,GAAA0M,EAAAoB,OAAA/K,aACA,OAAAO,GAAA,KAAA+J,GAAA,KAAArN,EAAA,MACK,IAzvFL,GA8TAuU,IACAC,GA/TA3D,MACA3J,MACA+L,GAAA,iBACA/K,GAAA,QACAwF,IAAA,kBACAL,GAAA,UACA9B,GAAA,KACAT,GAAA,OACAG,GAAA,aACAxC,GAAA,OACAC,GAAA,OACApC,GAAA,kBACApI,GAAA,SACAJ,GAAA,SACAE,GAAA,YACAJ,GAAA,WACAwE,GAAA,+BACAlC,GAAA,6BACA+B,GAAA,eACAwS,SAAAC,UAAA1W,GAAA2W,OAAAD,OACAE,GAAA,yEACAC,GAAA,wDACA1O,GAAA,MACArH,GAAA,yHACAgE,GAAA,gDACAqF,IAAiC2M,QAAA,WACjCrX,GAAA,oQACA8L,GAA2C,GAA3CkL,OAAArV,cAA2C2V,aAsF3CC,GAAAtW,OAAAuW,QACA1X,aACAI,aACAE,WACAE,cACAE,WACAE,UACAC,UACAE,aACAO,mBAkLAoC,GAAAvC,OAAAuW,QACAlW,KACAO,IACAE,aACAE,uBACAE,QACAG,OACAK,eACAY,mBACAK,UACAE,sBACAK,UACAE,UACAQ,aACAM,YACAI,cAKAkS,MACAC,MACAC,IAAA,CAGAX,MACAF,GAAA,WAEA,GAAAc,GAAAtV,EAAA,QACA+B,GAAAuT,EAAA,kBAGA,IAAAC,GAAAhW,EAAA,mBAQA,OANAgW,IACAA,EAAAzY,KAAwBwY,EAAAxY,GAAAyY,EAAAzY,IACxByY,EAAA3S,WAAA0R,aAAAgB,EAAAC,IAEUlW,SAAAmW,qBAAA,WAAAxU,YAAAsU,GAEVA,KAEAb,GAAAD,GAAAiB,WAMA,IAAAjG,KACAgF,aAMA9E,IAAA,SAAAR,EAAAjP,GACAA,EAAekV,GAAAlV,GAAAiP,EACLkG,GAAA9O,KAAA4I,GACVmG,IAAA,GAMA5F,OAAA,WACA,GAAAiF,IAAAW,GAAA,CACAA,IAAA,CACA,IAAAjU,GAAAzC,OAAA8C,KAAA0T,IACAnJ,IAAA,SAAA+G,GAAwB,MAAAoC,IAAApC,KACxBP,OAAA4C,IAAAM,KAAA,KAEAjB,IAAsBA,GAAAkB,QAAAvU,EACZoT,GAAAhU,UAAAY,KASVwU,GAAA,WAyBA,QAAAC,GAAAC,EAAAhM,GACA,OAAAA,GAAA,QAAAnM,KAAAmY,EAAAhM,MACA,MAAAA,GAGA,QAAAiM,GAAAD,EAAAE,GAEA,GAAAC,GAAA,MACAnM,EAAAmM,EAAAC,UAAAF,IACAnH,EAAAoH,EAAA9T,KAAA2T,GAAA,GAAAjH,MAAAsH,EAEA,IAAAtH,EAAA,CACA,GAAAnM,GAAAoH,EAAA+E,EAAA,GAAApL,MAEAqG,GAAA+L,EAAAC,EAAAhM,EACA,IAAA5M,GAAA4Y,EAAAhM,EAEA,IAAAA,EAAA,IAAAsM,EAAAtS,QAAA5G,GACA,MAAAwF,EAGA,UAAAxF,EAEA,MAAA4Y,EAAAhM,EAAA,KACAkM,EAAAtT,OAGO,UAAAxF,GAAA,MAAAA,GAEP4Y,IAAAhM,KAAA5M,IACA4M,EAAA+L,EAAAC,EAAAhM,IAAA,IACAuM,EAAA1Y,KAAAmY,EAAAhM,OACAkM,EAAAtT,OAGO,KAAA4T,EAAAxS,QAAA5G,GAAA,CAIP,IAFA,GAAAqZ,GAAAzM,EAAA,IAEAA,GAAA,GAAAuM,EAAA1Y,KAAAmY,EAAAhM,OACA0M,EAAA1S,QAAAgS,EAAA1W,MAAA0K,EAAA,EAAAyM,MACAP,EAAAtT,IAKA,MAAAsT,GArEA,GAAAI,GAAA,oBAEAI,GACA,OACA,UACA,KACA,OACA,KACA,aACA,SACA,SACA,SACA,OACA,SAGAF,EAAAE,EAAA9U,OAAA,SAAA+U,EAAAC,GACA,MAAAD,GAAAC,EAAAtX,OAAA,IACG,IAEH+W,EAAA,gFACAE,EAAA,OAmDA,OAAAN,MAgBAY,GAAA,SAAAC,GA6CA,QAAAC,GAAAZ,GAA2B,MAAAA,GAE3B,QAAAa,GAAAb,EAAAc,GAEA,MADAA,KAAcA,EAAAC,GACd,GAAAC,QACAhB,EAAAiB,OAAAjT,QAAA,KAA0B8S,EAAA,IAAA9S,QAAA,KAAqB8S,EAAA,IAAAd,EAAA5Y,OAAA8Z,EAAA,IAI/C,QAAAC,GAAAC,GACA,GAAAA,IAAAC,EAA2B,MAAAC,EAE3B,IAAAC,GAAAH,EAAAnH,MAAA,IAEA,QAAAsH,EAAA/T,QAAAgU,EAAA9Z,KAAA0Z,GACA,SAAAzG,OAAA,yBAAAyG,EAAA,IASA,OAPAG,KAAAhF,OAAA6E,EAAApT,QAAAyT,EAAA,MAAAxH,MAAA,MAEAsH,EAAA,GAAAV,EAAAU,EAAA,GAAA/T,OAAA,eAAqD8T,EAAA,GAAAC,GACrDA,EAAA,GAAAV,EAAAO,EAAA5T,OAAA,aAA+C8T,EAAA,GAAAC,GAC/CA,EAAA,GAAAV,EAAAS,EAAA,GAAAC,GACAA,EAAA,GAAAP,OAAA,QAAAO,EAAA,iBAA+CA,EAAA,QAAAG,EAAAR,GAC/CK,EAAA,GAAAH,EACAG,EAGA,QAAAI,GAAAC,GACA,MAAAA,aAAAZ,QAAAa,EAAAD,GAAAb,EAAAa,GAgHA,QAAAE,GAAAV,IACAA,MAAAC,MAAAN,EAAA,KACAA,EAAAI,EAAAC,GACAS,EAAAT,IAAAC,EAAAT,EAAAC,EACAE,EAAA,GAAAc,EAAAP,EAAA,KAEAS,EAAAX,EAGA,QAAAY,GAAAnE,GACA,GAAAoE,EAEApE,SACAoE,EAAApE,EAAA6C,SACAhY,OAAA0F,eAAAyP,EAAA,YACAlB,IAAAmF,EACApF,IAAA,WAAwB,MAAAqF,IACxBxT,YAAA,IAEA2T,EAAArE,EACAiE,EAAAG,GA3MA,GAuCAJ,GAEAK,EAxCAhB,EAAA,IAEAiB,EAAA,qCAEAC,EAAA,6FAEAC,EAAAD,EAAAnB,OAAA,IACA,wDAAAA,OAAA,IACA,kFAAAA,OAEAO,EAAAR,OAAA,qCAEAS,EAAA,sBAEAC,EAAAU,EAAAnB,OAAA,oBAAAA,OAEAqB,GACAC,IAAAvB,OAAA,UAAAU,EAAAR,GACAsB,IAAAxB,OAAA,YAAAU,EAAAR,GACAuB,IAAQzB,OAAA,UAAeU,EAAAR,IAGvBG,EAAA,MAEAC,GACA,IAAM,IACN,IAAM,IACN,UACA,YACA,WACAN,OAAA,uBAA8BU,EAAAR,GAC9BG,EACA,yDACA,wBAIAU,EAAApB,EAEAI,IAqLA,OAnJAY,GAAA1H,MAAA,SAAAlM,EAAA+E,EAAA4P,GAkEA,QAAAC,GAAAnC,GACAoC,IACApC,EAAAoC,EAAApC,EACAoC,EAAA,IAEA9P,GAAA+P,EACAC,EAAAzS,KAAAmQ,KAAAxS,QAAA0U,EAAA,UAEAI,EAAAzS,KAAAmQ,GAIA,QAAAuC,GAAAC,EAAAC,EAAAC,GAWA,MAVAA,KACAD,EAAAtD,GAAA5R,EAAAiV,IAGAlQ,GAAAmQ,EAAAD,EAAA,IACAG,EAAA,IAAAC,EAAA5V,OAAA,IACA4V,EAAA/S,KAAAtC,EAAA5E,MAAA6Z,EAAAC,IACAL,GAAA7U,EAAA5E,MAAA4W,EAAAiD,GAAAG,EACApD,EAAAkD,GAEAA,EAvFAP,IAAeA,EAAA3B,EAEf,IAEAnI,GACAiK,EACA9C,EACAlM,EAKAsP,EAAAlD,EATA6C,KAKA9C,EAAA0C,EAAA,GAEAU,KACAR,EAAA,EAKA,KAFAC,EAAA9C,EAAAC,EAAAC,UAAA,EAEArH,EAAAoH,EAAA9T,KAAA6B,IAAA,CAKA,GAHAkS,EAAAD,EAAAC,UACApM,EAAA+E,EAAApC,MAEAqM,EAAA,CAEA,GAAAjK,EAAA,IAEA,GAAAyK,GAAAzK,EAAA,GACA0K,EAAAhB,EAAAe,GACAE,EAAA,CAGA,KADAD,EAAArD,YACArH,EAAA0K,EAAApX,KAAA6B,IACA,GAAA6K,EAAA,IACA,GAAAA,EAAA,KAAAyK,IAAoCE,MACpC,OAAAA,EAA+B,UAE/BD,GAAArD,UAAA8C,EAAAnK,EAAApC,MAAA8M,EAAArD,UAAArH,EAAA,GAGAoH,GAAAC,UAAAsD,EAAAxV,EAAAP,OAAA8V,EAAArD,SACA,UAGA,IAAArH,EAAA,IACAoH,EAAAC,UAAA8C,EAAAlP,EAAAoM,EAAArH,EAAA,GACA,WAIAA,EAAA,KACA+J,EAAA5U,EAAA5E,MAAA4W,EAAAlM,IACAkM,EAAAC,EAAAC,UACAD,EAAA0C,EAAA,GAAAG,GAAA,IACA7C,EAAAC,UAAAF,GAUA,MANAhS,IAAAgS,EAAAhS,EAAAP,QACAmV,EAAA5U,EAAA5E,MAAA4W,IAGA+C,EAAAM,UAEAN,GA6BAnB,EAAAzK,QAAA,SAAAnJ,GACA,MAAAgT,GAAA,GAAArZ,KAAAqG,IAGA4T,EAAAhM,SAAA,SAAAjF,GACA,GAAA1J,GAAA0J,EAAAkI,MAAAmI,EAAA,GAEA,OAAA/Z,IACSwB,IAAAxB,EAAA,GAAA6M,IAAA7M,EAAA,GAAA+E,IAAAgV,EAAA,GAAA/Z,EAAA,GAAA8Q,OAAAiJ,EAAA,KACAhV,IAAA2E,EAAAoH,SAGT6J,EAAAhU,MAAA,SAAAyT,GACA,MAAAA,GAAAD,EAAAC,GAAAL,GA0BArY,OAAA0F,eAAAuT,EAAA,YACAhF,IAAAqF,EACAtF,IAAA,WAAsB,MAAAwF,MAItBP,EAAA6B,SAAA,mBAAArc,MAAAqc,aACA7B,EAAAhF,IAAAmF,EACAH,EAAAhC,aAEAgC,EAAAS,YACAT,EAAAQ,YACAR,EAAAU,YACAV,EAAAD,YAEAC,KAaA7O,GAAA,WAIA,QAAA2Q,GAAA1V,EAAA6N,GACA,MAAA7N,IAEAgT,EAAAhT,KAAAgT,EAAAhT,GAAAoT,EAAApT,KAAAhH,KACA6U,EAAA8H,EAAAxT,MACA0L,OACA9I,KAAA/E,KALeA,EAmBf,QAAA2V,GAAAC,EAAA1a,GAEA0a,EAAAC,UACAjT,QAAA1H,KAAA+F,IAAA/F,EAAA+F,GAAA2B,QACAkC,SAAA5J,KAAA4J,UAGA4Q,EAAAI,aAA6BJ,EAAAI,aAAAF,GAE7B,mBAAAG,UACA,kBAAAA,SAAAC,QAEAD,QAAAC,MAAAJ,EAAAK,SACAF,QAAAG,IAAA,UAAAN,EAAAC,SAAAjT,SAAA,cAAArJ,KAAAwL,MACAgR,QAAAG,IAAA3c,KAAAsU,OAIA,QAAAuF,GAAApT,GACA,GAAA2C,GAAAwT,EAAAnW,EAIA,OAFA,gBAAA2C,EAAAvH,MAAA,QAA8CuH,EAAA,UAAAA,GAE9C,GAAAyT,UAAA,IAAAzT,EAAA,KAMA,QAAAwT,GAAAnW,GACA,GAEA2C,GAFAoS,EAAApC,GAAAzG,MAAAlM,EAAAC,QAAAoW,EAAA,QACAC,EAAAvB,EAAAM,OAGA,IAAAN,EAAAtV,OAAA,GAAAsV,EAAA,IACA,GAAArV,GAAAuG,EAAA1G,IAEA,KAAAG,EAAAuG,EAAA,EAAqBvG,EAAAqV,EAAAtV,SAAkBC,EAEvCiD,EAAAoS,EAAArV,GAEAiD,MAAA,EAAAjD,EAEA6W,EAAA5T,EAAA,EAAA2T,GAEA,IAAA3T,EACA1C,QAAA,cACAA,QAAA,mBACAA,QAAA,YACA,OAEcV,EAAA0G,KAAAtD,EAIdA,GAAAsD,EAAA,EAAA1G,EAAA,GACA,IAAAA,EAAAmS,KAAA,sBAIA/O,GAAA4T,EAAAxB,EAAA,KAAAuB,EAUA,OAPAA,GAAA7W,SACAkD,IAAA1C,QAAAuW,EAAA,SAAAtW,EAAA4F,GACA,MAAAwQ,GAAAxQ,GACA7F,QAAA,aACAA,QAAA,gBAGA0C,EAWA,QAAA4T,GAAA5T,EAAA8T,EAAAH,GAqCA,QAAAI,GAAApB,EAAArD,GACA,GACA0E,GACAC,EAAA,EACAC,EAAAC,EAAAxB,EAGA,KADAuB,EAAA3E,UAAAD,EAAAC,UACAyE,EAAAE,EAAA1Y,KAAAwE,IACA,GAAAgU,EAAA,KAAArB,IAA2BsB,MAC3B,OAAAA,EAAyB,KAEzB3E,GAAAC,UAAA0E,EAAAjU,EAAAlD,OAAAoX,EAAA3E,UA1CA,GAJAvP,IACA1C,QAAA,YAAA8J,OACA9J,QAAA,wBAA0B,MAE1B,CAMA,IALA,GAGA4K,GAFAtL,KACAwX,EAAA,EAGApU,IACAkI,EAAAlI,EAAAkI,MAAAmM,MACAnM,EAAApC,OACA,CACA,GACAhO,GACAwc,EACAhF,EAAA,cAKA,KAHAtP,EAAAsQ,OAAAiE,aACAzc,EAAAoQ,EAAA,GAAAyL,EAAAzL,EAAA,IAAAzP,MAAA,MAAA2O,OAAA9J,QAAA,YAAA4K,EAAA,GAEAoM,GAAApM,EAAAoH,EAAA9T,KAAAwE,IAAA,IAAkD+T,EAAAO,EAAAhF,EAElDgF,GAAAtU,EAAAvH,MAAA,EAAAyP,EAAApC,OACA9F,EAAAsQ,OAAAiE,aAEA3X,EAAAwX,KAAAI,EAAAF,EAAA,EAAAxc,GAGAkI,EAAAoU,EACAA,EAAA,MAAAxX,EAAAmS,KAAA,0BAAAnS,EAAA,GADA4X,EAAAxU,EAAA8T,GAGA,MAAA9T,GAuBA,QAAAwU,GAAAxU,EAAA8T,EAAAhc,GACA,GAAA2c,EAiCA,OA/BAzU,KAAA1C,QAAAoX,EAAA,SAAAxM,EAAA1R,EAAAme,EAAAxR,EAAA2M,GAWA,MAVA6E,KACAxR,EAAAsR,EAAA,EAAAtR,EAAA+E,EAAApL,OAEA,SAAA6X,GAAA,WAAAA,GAAA,WAAAA,GACAzM,EAAA1R,EAAA,KAAAme,EAAAC,EAAAD,EACAxR,IAAoBsR,EAAA,OAAA3E,IAAA3M,KAAA,MAAA2M,GAAA,MAAAA,IACX3M,IACTsR,GAAAI,EAAA7d,KAAA8Y,EAAArX,MAAA0K,MAGA+E,IAGAuM,IACAzU,EAAA,cAAkBA,EAAA,wBAGlBlI,EAEAkI,GAAAyU,EACA,cAAwBzU,EAAA,eAAa,IAAAA,EAAA,KACrC,KAAAlI,EAAA,OAEKgc,IAEL9T,EAAA,gBAA0ByU,EAC1BzU,EAAA1C,QAAA,sBAAA0C,EAAA,KACA,qCAGAA,EAnMA,GAAAqQ,KAaA0C,GAAAvM,QAAAwJ,GAAAxJ,QAEAuM,EAAA9N,SAAA+K,GAAA/K,SAGA8N,EAAA+B,WAAA,WAAkCzE,MAElC0C,EAAAI,aAAA,IA4BA,IAAAO,GAAA,UACAG,EAAA,gBA8CAQ,EAAA,2DAEAF,GACAtC,IAAA,QACAC,IAAA,SACAC,IAAQ,SAyDR6C,EAAA,kCAAA5G,QAAA,wBACA0G,EAAA,oKACAG,EAAA,+BAyCA,OAFA9B,GAAAgC,QAAA/E,GAAA+E,QAAA,SAEAhC,KAKAlI,GAAA,SAAA1R,GAOAA,OAKA,IAAA6b,MACAvc,EAAAd,MAAAa,UAAAC,KA6GA,OAtGAT,QAAAid,iBAAA9b,GAQA+b,IACApe,MAAA,SAAAqe,EAAAhZ,GAGA,MAFA,kBAAAA,KACW6Y,EAAAG,GAAAH,EAAAG,QAAAxV,KAAAxD,GACXhD,GAEA0E,YAAA,EACA3F,UAAA,EACA4F,cAAA,GASAgP,KACAhW,MAAA,SAAAqe,EAAAhZ,GACA,QAAAgZ,GAAAhZ,EAEA,GAAAA,EAEA,OAAAoD,GADAsR,EAAAmE,EAAAG,GACApY,EAAA,EAA+BwC,EAAAsR,KAAA9T,KAAoBA,EACnDwC,GAAApD,GAA6B0U,EAAApN,OAAA1G,IAAA,cAEXiY,GAAAG,OAPgBH,KASlC,OAAA7b,IAEA0E,YAAA,EACA3F,UAAA,EACA4F,cAAA,GAUA2O,KACA3V,MAAA,SAAAqe,EAAAhZ,GACA,QAAA+Y,KACA/b,EAAA2T,IAAAqI,EAAAD,GACA/Y,EAAAqH,MAAArK,EAAA8E,WAEA,MAAA9E,GAAA+b,GAAAC,EAAAD,IAEArX,YAAA,EACA3F,UAAA,EACA4F,cAAA,GASAyN,SACAzU,MAAA,SAAAqe,GACA,GAMAC,GACAjZ,EACAY,EARAsY,EAAApX,UAIAqX,EAAArX,UAAAnB,OAAA,EACAkB,EAAA,GAAArG,OAAA2d,EAKA,KAAAvY,EAAA,EAAmBA,EAAAuY,EAAYvY,IAC/BiB,EAAAjB,GAAAsY,EAAAtY,EAAA,EAKA,KAFAqY,EAAA3c,EAAApC,KAAA2e,EAAAG,OAAA,GAEApY,EAAA,EAAmBZ,EAAAiZ,EAAArY,KAAaA,EAChCZ,EAAAqH,MAAArK,EAAA6E,EAMA,OAHAgX,GAAA,WAAAG,GACWhc,EAAAoS,QAAA/H,MAAArK,GAAA,IAAAgc,GAAAtJ,OAAA7N,IAEX7E,GAEA0E,YAAA,EACA3F,UAAA,EACA4F,cAAA,KAIA3E,GA0FAoc,GAAAvd,OAAAuW,QACA5R,OACAK,WACAI,UACAK,aACAC,iBACAE,WAGAkB,GAAAlB,EAAA5F,OAAAqK,OAAA2N,GAAA8C,WACAtI,mBAAA,EAEAzL,YAAA,IAkQA0H,IACAC,KAAA,SAAAnM,EAAA8E,EAAAW,GACArF,EAAAJ,EAAAsK,IACAjO,KAAAyI,MACAzI,KAAAoJ,OACApJ,KAAA4e,KAAAxc,IACApC,KAAA6e,SAAAlb,CAEA,IAAA/D,GAAA+D,EAAA0B,UAIA,OAHAzF,GAAAwF,aAAApF,KAAA4e,KAAAjb,GACA/D,EAAA0O,YAAA3K,GAEA3D,MAEAuI,OAAA,WACAvI,KAAAE,MAAAsL,GAAAxL,KAAAoJ,KAAApJ,KAAAyI,KAEAzI,KAAAE,QAAAF,KAAA8e,SACA9e,KAAA8e,QAAA9e,KAAA6e,SAAA5P,WAAA,GACAjP,KAAA4e,KAAAvZ,WAAAD,aAAApF,KAAA8e,QAAA9e,KAAA4e,MACA5e,KAAAoM,eACAiD,EAAAzC,MAAA5M,KAAAyI,KAAAzI,KAAA8e,QAAA9e,KAAAoM,aAAA,MACKpM,KAAAE,OAAAF,KAAA8e,UACL7I,GAAAjW,KAAAoM,aACApM,KAAA8e,QAAA5K,KACAlU,KAAA8e,QAAA5K,KAAAxK,UACO1J,KAAA8e,QAAAzZ,YACPrF,KAAA8e,QAAAzZ,WAAAiJ,YAAAtO,KAAA8e,SAEA9e,KAAA8e,QAAA,KACA9e,KAAAoM,gBAGApM,KAAAE,OAAqBiM,EAAA1M,KAAAO,KAAAyI,IAAAzI,KAAAoM,cAErB1C,QAAA,WACAuM,GAAAjW,KAAAoM,mBAIAiE,IACAP,KAAA,SAAAnM,EAAAgE,EAAAgD,EAAAoU,GAMA,MALA/e,MAAA2D,MACA3D,KAAAiL,KAAAN,EACA3K,KAAAgf,SAAAD,EACA/e,KAAA2H,SACA3H,KAAAif,OAAAzT,GAAAoE,QAAAmP,GACA/e,MAEAuI,OAAA,WACA,GAAA2W,GAAAlf,KAAAE,MACAif,EAAAnf,KAAA2H,QAAAU,GAAArI,KAAA2H,QAEAyX,EAAApf,KAAA2D,IAAA0b,OAAArf,KAAAyI,KAAAzI,KAAA2D,GAEA3D,MAAAE,MAAAF,KAAAif,OAAAzT,GAAAxL,KAAAgf,SAAAhf,KAAA2H,QAAA3H,KAAAgf,UAGAne,EAAAqe,IAAAC,GAAwC1U,GAAA0U,EAAAG,KAAAJ,EAAAE,IACxCve,EAAAb,KAAAE,QAAAS,EAAAX,KAAAE,QAEAif,GAAyBhQ,GACzBgQ,EAAAG,KACAtf,KAAAE,MACAkf,EAEA,KACApf,KAAA2H,OAAAD,GAAAwH,OAGAlP,KAAAE,QAAAgf,GACA1a,EAAAxE,KAAA2D,IAAA3D,KAAAiL,KAAAjL,KAAAE,QAGA6D,EAAA/D,KAAA2D,IAAA3D,KAAAiL,MAKAjL,KAAA2D,IAAA0b,QAA0Brf,KAAA2D,IAAA0b,MAAAD,IAE1B1V,QAAA,WACA,GAAA0V,GAAApf,KAAAyI,KAAAzI,KAAA2D,IACAwb,EAAAnf,KAAA2H,QAAAU,GAAArI,KAAA2H,SACA9G,EAAAb,KAAAE,QAAAif,GACO1U,GAAA0U,EAAAG,KAAAtf,KAAAE,MAAAkf,KAqXPtO,GAAA,YACAK,GAAA,+CACAJ,GAAA,4DACAE,GAAA,uEACAN,IAAe4O,GAAA,QAAAC,GAAA,KAAAC,GAAA,KAAAC,IAAA,YACfjO,GAAAxF,OAAA,GAAAqL,GAAAC,GACA/F,GAAA,MACAD,GAAA,MAiPA6B,MACAD,GAAAC,GAAAuC,OACA1C,GAAA,EA4CA0M,GAAA,SAGAC,GAAAxe,OAAAuW,QACAkI,IAAAnO,EACAjJ,IAAAoJ,EACAiO,KAAA1N,EACAnI,MAAAoI,GACAuD,MAAA9C,GACAvK,OAAA+K,GACAyM,WAAAvM,GACA2K,QAAAwB,KAIAtL,GAAA,EA0oBA9J,GAAAnJ,OAAAuW,QACA5J,UACA2G,eACA1H,gBACAlD,gBACAzB,+BACA4N,cACArI,cACAiG,eACA1E,eACA1E,kBACAuH,WACA9H,sBACAmD,eACAF,eACAuF,gBAMAwJ,GAAAhU,GACA8X,IACAxU,QACA4N,YACAnH,gBACAgO,KAAA1M,GACA0D,UAAAhF,GAAAgF,UAEAtT,OACA+T,SACAiH,QACApU,SAIA2V,GAAAxO,EACAyO,GAAAtO,EACAuO,GAAAhO,EACAiO,GAAAhO,GACAiO,GAAAxN,GACAyN,GAAAjN,GACAkN,GAAAhN,GACAiN,GAAAd,GACAe,GAAAzM,GAEA0M,GAAA3Z,KAAsB4Y,IACtBc,WAAAzM,GACAiI,YACA8D,SAGA3gB,GAAA6c,YACA7c,EAAA2gB,QACA3gB,EAAAwgB,IAAAK,GACA7gB,EAAAoJ,IAAA0X,GACA9gB,EAAAygB,KAAAM,GACA/gB,EAAA4K,MAAAoW,GACAhhB,EAAAuW,MAAA0K,GACAjhB,EAAAkJ,OAAAgY,GACAlhB,EAAA0gB,WAAAS,GACAnhB,EAAA8e,QAAAsC,GACAphB,EAAAqhB,cACArhB,EAAA,QAAAshB,GAEAvf,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,QFyDhBT,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,GAEhC,YAEAkC,QAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,GAGT,IAAI0gB,GAAW1hB,EAAoB,GAEnCkC,QAAO0F,eAAezH,EAAS,iBAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAOwL,GG94FVC,gBHk5FD,IAAIC,GAAe5hB,EAAoB,GAEvCkC,QAAO0F,eAAezH,EAAS,UAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAO0L,GGn5FVvQ,SHu5FD,IAAIwQ,GAAS7hB,EAAoB,GAEjCkC,QAAO0F,eAAezH,EAAS,YAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAO2L,GGx5FVC,WH45FD,IAAIC,GAAS/hB,EAAoB,GAEjCkC,QAAO0F,eAAezH,EAAS,WAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAO6L,GG75FVC,WHg6FD9f,OAAO0F,eAAezH,EAAS,eAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAO6L,GGl6FVE,cHs6FD,IAAIC,GAAYliB,EAAoB,EAEpCkC,QAAO0F,eAAezH,EAAS,gBAC7B4H,YAAY,EACZmO,IAAK,WACH,MAAOgM,GGv6FVC,iBH66FI,SAAU/hB,EAAQD,EAASH,GAEhC,YAYA,SAASoiB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EAVlQ,GAAIE,GAAiB,WAAc,QAASC,GAAc1H,EAAK9T,GAAK,GAAIyb,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK1K,MAAW,KAAM,IAAK,GAAiC2K,GAA7BC,EAAKhI,EAAIiI,OAAOC,cAAmBN,GAAMG,EAAKC,EAAG9c,QAAQid,QAAoBR,EAAK7Y,KAAKiZ,EAAG9hB,QAAYiG,GAAKyb,EAAK1b,SAAWC,GAA3D0b,GAAK,IAAoE,MAAOxF,GAAOyF,GAAK,EAAMC,EAAK1F,EAAO,QAAU,KAAWwF,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAU3H,EAAK9T,GAAK,GAAIpF,MAAMD,QAAQmZ,GAAQ,MAAOA,EAAY,IAAIiI,OAAOC,WAAY/gB,QAAO6Y,GAAQ,MAAO0H,GAAc1H,EAAK9T,EAAa,MAAM,IAAIkc,WAAU,4DIn8FvlBC,EAAApjB,EAAA,IAAYqjB,EJu8FIjB,EAAwBgB,GIt8FxCE,EAAAtjB,EAAA,GAAYujB,EJ08FFnB,EAAwBkB,GIx8F5BE,EAASxjB,EAAQ,IACjByjB,EAAUJ,EAASK,QAAQF,EAAQA,EAAOG,QAAQ,WAElDC,GACJC,MAAO,sBAAuB,OAC9BC,IAAO,cAAe,OAElB1O,EAAOmO,EAAGzB,SAAS9hB,EAAQ,KAA2BuP,IAAI,SAAAwU,GAAK,GAAAC,GAAAxB,EACvCoB,EAAOG,EAAEE,OAD8B,GAC5DA,EAD4DD,EAAA,GACrDE,EADqDF,EAAA,EAInE,OAFAD,GAAEE,MAAQA,EACVF,EAAEG,WAAaA,EACRH,IAEHI,EAAS,SAAA5c,GAAA,MAAO6N,GAAK5F,OAAO,SAAAuU,GAAA,MAAKA,GAAEvgB,KAAK+C,cAAcc,QAAQE,IAAO,IAE3Ekc,GAAQW,SAAS7U,IAAI,SAAA8U,GACnBA,EAAEhkB,GAAKgkB,EAAEC,WAAWC,GACpB,IAAMC,GAAQpP,EAAKqP,KAAK,SAAAV,GAAA,MAAKA,GAAEW,MAAQL,EAAEhkB,KAClCskB,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KACdJ,GAAMK,OAASC,KAAKC,MAAMJ,EAAQC,EAAQ,KAAQ,GAClDP,EAAEC,WAAaE,IAGjBpkB,EAAOD,SACLsjB,UACArO,OACA+O,WJ49FI,SAAU/jB,EAAQD,EAASH,GAEhC,YAUA,SAASoiB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EARlQpgB,OAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,GK9/FV,IAAA4hB,GAAA5iB,EAAA,GAAYujB,ELmgGFnB,EAAwBQ,GKhgG5BoC,GAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,ULsgGvG7kB,GAAQoiB,QKrgGMgB,EAAG5B,gBAAgBsD,QAAQ,IAAK,OAAOC,MAAMF,ILygGtD,SAAU5kB,EAAQD,GAEvB,YAEA+B,QAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,IAGTb,EAAQoiB,QMrhGM,SAAA4C,GACbA,GAAaA,EAAUC,QAAQ,YAAY,KN0hGvC,SAAUhlB,EAAQD,EAASH,IO1hGjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAgC7B,SAAAklB,GAAAhB,GACA,gBAAAN,EAAAuB,GACA,MAAAC,GAAAlB,EAAAN,GAAAuB,IAeA,QAAA1K,GAAA9P,EAAA2Q,GACA,OAAA3Q,EAAA2Q,GAuKA,QAAA+J,GAAAjM,EAAAkM,EAAAC,GACA,GAAAC,IAAAF,EAAAlM,GAAAuL,KAAAc,IAAA,EAAAF,GACAG,EAAAf,KAAAgB,MAAAhB,KAAArH,IAAAkI,GAAAb,KAAAiB,MACAxI,EAAAoI,EAAAb,KAAAkB,IAAA,GAAAH,EACA,OAAAA,IAAA,GACAtI,GAAA0I,EAAA,GAAA1I,GAAA2I,EAAA,EAAA3I,GAAA4I,EAAA,KAAArB,KAAAkB,IAAA,GAAAH,IACAf,KAAAkB,IAAA,IAAAH,IAAAtI,GAAA0I,EAAA,GAAA1I,GAAA2I,EAAA,EAAA3I,GAAA4I,EAAA,KAGA,QAAAC,GAAA7M,EAAAkM,EAAAC,GACA,GAAAW,GAAAvB,KAAAwB,IAAAb,EAAAlM,GAAAuL,KAAAc,IAAA,EAAAF,GACAa,EAAAzB,KAAAkB,IAAA,GAAAlB,KAAAgB,MAAAhB,KAAArH,IAAA4I,GAAAvB,KAAAiB,OACAxI,EAAA8I,EAAAE,CAIA,OAHAhJ,IAAA0I,EAAAM,GAAA,GACAhJ,GAAA2I,EAAAK,GAAA,EACAhJ,GAAA4I,IAAAI,GAAA,GACAd,EAAAlM,GAAAgN,IAoTA,QAAAvf,GAAA+c,GACA,MAAAA,GAAA/c,OA5hBA,GAAAue,GAAA,SAAAza,EAAA2Q,GACA,MAAA3Q,GAAA2Q,GAAA,EAAA3Q,EAAA2Q,EAAA,EAAA3Q,GAAA2Q,EAAA,EAAA+K,KAGAC,EAAA,SAAAC,GAEA,MADA,KAAAA,EAAA1f,SAAA0f,EAAArB,EAAAqB,KAEAC,KAAA,SAAA7b,EAAAwa,EAAAsB,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAA/b,EAAA9D,QACA4f,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAH,GAAA5b,EAAAgc,GAAAxB,GAAA,EAAAsB,EAAAE,EAAA,EACAD,EAAAC,EAEA,MAAAF,IAEAG,MAAA,SAAAjc,EAAAwa,EAAAsB,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAA/b,EAAA9D,QACA4f,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAH,GAAA5b,EAAAgc,GAAAxB,GAAA,EAAAuB,EAAAC,EACAF,EAAAE,EAAA,EAEA,MAAAF,MAWAI,EAAAP,EAAAlB,GACA0B,EAAAD,EAAAD,MACAG,EAAAF,EAAAL,KAEAQ,EAAA,SAAAhgB,EAAAkd,GACA,MAAAA,MAAAzJ,EAEA,KADA,GAAA3T,GAAA,EAAAmgB,EAAAjgB,EAAAH,OAAA,EAAAtG,EAAAyG,EAAA,GAAAggB,EAAA,GAAAtlB,OAAAulB,EAAA,IAAAA,GACAngB,EAAAmgB,GAAAD,EAAAlgB,GAAAod,EAAA3jB,IAAAyG,IAAAF,GACA,OAAAkgB,IAOAE,EAAA,SAAAC,EAAAC,EAAAtiB,GACA,GAGAuiB,GACAC,EACAxgB,EACAygB,EANAC,EAAAL,EAAAtgB,OACA4gB,EAAAL,EAAAvgB,OACA6gB,EAAA,GAAAhmB,OAAA8lB,EAAAC,EAQA,KAFA,MAAA3iB,MAAA2V,GAEA4M,EAAAvgB,EAAA,EAAkBugB,EAAAG,IAASH,EAC3B,IAAAE,EAAAJ,EAAAE,GAAAC,EAAA,EAAsCA,EAAAG,IAASH,IAAAxgB,EAC/C4gB,EAAA5gB,GAAAhC,EAAAyiB,EAAAH,EAAAE,GAIA,OAAAI,IAGAC,EAAA,SAAAhd,EAAA2Q,GACA,MAAAA,GAAA3Q,GAAA,EAAA2Q,EAAA3Q,EAAA,EAAA2Q,GAAA3Q,EAAA,EAAA0b,KAGAuB,EAAA,SAAAzC,GACA,cAAAA,EAAAkB,KAAAlB,GAGA0C,EAAA,SAAAH,EAAAI,GACA,GAIAjnB,GACAknB,EALAd,EAAAS,EAAA7gB,OACAxG,EAAA,EACAyG,GAAA,EACAkhB,EAAA,EAGAC,EAAA,CAEA,UAAAH,EACA,OAAAhhB,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAF,EAAA5gB,OACAihB,EAAAlnB,EAAAmnB,EACAA,GAAAD,IAAA1nB,EACA4nB,GAAAF,GAAAlnB,EAAAmnB,QAMA,QAAAlhB,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAE,EAAAJ,EAAA5gB,KAAA4gB,OACAK,EAAAlnB,EAAAmnB,EACAA,GAAAD,IAAA1nB,EACA4nB,GAAAF,GAAAlnB,EAAAmnB,GAKA,IAAA3nB,EAAA,QAAA4nB,IAAA5nB,EAAA,IAGA8nB,EAAA,SAAAnhB,EAAAkd,GACA,GAAA9N,GAAAyR,EAAA7gB,EAAAkd,EACA,OAAA9N,GAAAuO,KAAAyD,KAAAhS,MAGAiS,EAAA,SAAAX,EAAAI,GACA,GAEAjnB,GACAynB,EACA7C,EAJAwB,EAAAS,EAAA7gB,OACAC,GAAA,CAKA,UAAAghB,GACA,OAAAhhB,EAAAmgB,GACA,UAAApmB,EAAA6mB,EAAA5gB,KAAAjG,KAEA,IADAynB,EAAA7C,EAAA5kB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAA6mB,EAAA5gB,MACAwhB,EAAAznB,IAAAynB,EAAAznB,GACA4kB,EAAA5kB,IAAA4kB,EAAA5kB,QAQA,QAAAiG,EAAAmgB,GACA,UAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,KAAA7mB,KAEA,IADAynB,EAAA7C,EAAA5kB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,MACAY,EAAAznB,IAAAynB,EAAAznB,GACA4kB,EAAA5kB,IAAA4kB,EAAA5kB,GAOA,QAAAynB,EAAA7C,IAGAze,EAAAtF,MAAAa,UAEAC,EAAAwE,EAAAxE,MACA4M,EAAApI,EAAAoI,IAEAmZ,EAAA,SAAApD,GACA,kBACA,MAAAA,KAIAqD,EAAA,SAAArD,GACA,MAAAA,IAGAJ,EAAA,SAAA3L,EAAAkM,EAAAE,GACApM,KAAAkM,KAAAE,GAAAyB,EAAAjf,UAAAnB,QAAA,GAAAye,EAAAlM,IAAA,KAAA6N,EAAA,KAAAzB,CAMA,KAJA,GAAA1e,IAAA,EACAmgB,EAAA,EAAAtC,KAAAc,IAAA,EAAAd,KAAA8D,MAAAnD,EAAAlM,GAAAoM,IACAT,EAAA,GAAArjB,OAAAulB,KAEAngB,EAAAmgB,GACAlC,EAAAje,GAAAsS,EAAAtS,EAAA0e,CAGA,OAAAT,IAGAe,EAAAnB,KAAAyD,KAAA,IACArC,EAAApB,KAAAyD,KAAA,IACApC,EAAArB,KAAAyD,KAAA,GAEAM,EAAA,SAAAtP,EAAAkM,EAAAC,GACA,GAEA0B,GACAyB,EACAlD,EAJAmD,EAAArD,EAAAlM,EACAtS,GAAA,CAOA,IAFA6hB,IAAA1B,EAAA7N,IAAAkM,IAAA2B,GAEA,KAAAzB,EAAAH,EAAAjM,EAAAkM,EAAAC,MAAAqD,SAAApD,GAAA,QAEA,IAAAA,EAAA,EAIA,IAHApM,EAAAuL,KAAA8D,KAAArP,EAAAoM,GACAF,EAAAX,KAAAgB,MAAAL,EAAAE,GACAkD,EAAA,GAAAhnB,OAAAulB,EAAAtC,KAAA8D,KAAAnD,EAAAlM,EAAA,MACAtS,EAAAmgB,GAAAyB,EAAA5hB,IAAAsS,EAAAtS,GAAA0e,MAKA,KAHApM,EAAAuL,KAAAgB,MAAAvM,EAAAoM,GACAF,EAAAX,KAAA8D,KAAAnD,EAAAE,GACAkD,EAAA,GAAAhnB,OAAAulB,EAAAtC,KAAA8D,KAAArP,EAAAkM,EAAA,MACAxe,EAAAmgB,GAAAyB,EAAA5hB,IAAAsS,EAAAtS,GAAA0e,CAKA,OAFAmD,IAAAD,EAAAC,UAEAD,GAsBAG,EAAA,SAAAnB,GACA,MAAA/C,MAAA8D,KAAA9D,KAAArH,IAAAoK,EAAA7gB,QAAA8d,KAAAmE,KAAA,GAGAC,EAAA,WAKA,QAAAA,GAAA9T,GACA,GAAAnO,GAEAqe,EADA8B,EAAAhS,EAAApO,OAEA6gB,EAAA,GAAAhmB,OAAAulB,EAEA,KAAAngB,EAAA,EAAeA,EAAAmgB,IAAOngB,EACtB4gB,EAAA5gB,GAAAjG,EAAAoU,EAAAnO,KAAAmO,EAGA,IAAA+T,GAAAlE,EAAA4C,GACAuB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAC,EAAA1B,EAAAuB,EAAAC,EAGAxnB,OAAAD,QAAA0nB,KACAA,EAAAlD,EAAAgD,EAAAC,EAAAC,GACAA,EAAApE,EAAAJ,KAAA8D,KAAAQ,EAAAE,KAAAxE,KAAAgB,MAAAuD,EAAAC,QAKA,KADA,GAAA9oB,GAAA8oB,EAAAtiB,OACAsiB,EAAA,IAAAF,GAAAE,EAAAE,UAAAhpB,CACA,MAAA8oB,EAAA9oB,EAAA,GAAA6oB,GAAAC,EAAAG,QAAAjpB,CAEA,IACAkpB,GADAC,EAAA,GAAA9nB,OAAArB,EAAA,EAIA,KAAAyG,EAAA,EAAeA,GAAAzG,IAAQyG,EACvByiB,EAAAC,EAAA1iB,MACAyiB,EAAAN,GAAAniB,EAAA,EAAAqiB,EAAAriB,EAAA,GAAAmiB,EACAM,EAAAL,GAAApiB,EAAAzG,EAAA8oB,EAAAriB,GAAAoiB,CAIA,KAAApiB,EAAA,EAAeA,EAAAmgB,IAAOngB,EACtBqe,EAAAuC,EAAA5gB,GACAmiB,GAAA9D,MAAA+D,GACAM,EAAA1C,EAAAqC,EAAAhE,EAAA,EAAA9kB,IAAAqJ,KAAAuL,EAAAnO,GAIA,OAAA0iB,GAhDA,GAAA3oB,GAAA2nB,EACA1D,EAAAuD,EACAe,EAAAP,CA6DA,OAZAE,GAAAloB,MAAA,SAAAyG,GACA,MAAAU,WAAAnB,QAAAhG,EAAA,kBAAAyG,KAAAihB,EAAAjhB,GAAAyhB,GAAAloB,GAGAkoB,EAAAjE,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAie,EAAA,kBAAAxd,KAAAihB,GAAAjhB,EAAA,GAAAA,EAAA,KAAAyhB,GAAAjE,GAGAiE,EAAAU,WAAA,SAAAniB,GACA,MAAAU,WAAAnB,QAAAuiB,EAAA,kBAAA9hB,KAAAihB,EAAA7mB,MAAAD,QAAA6F,GAAA9E,EAAApC,KAAAkH,MAAAyhB,GAAAK,GAGAL,GAGAW,EAAA,SAAAhC,EAAAnnB,EAAAunB,GAEA,GADA,MAAAA,MAAAF,GACAX,EAAAS,EAAA7gB,OAAA,CACA,IAAAtG,OAAA,GAAA0mB,EAAA,SAAAa,EAAAJ,EAAA,KAAAA,EACA,IAAAnnB,GAAA,SAAAunB,EAAAJ,EAAAT,EAAA,GAAAA,EAAA,EAAAS,EACA,IAAAT,GACAngB,GAAAmgB,EAAA,GAAA1mB,EACA8mB,EAAA1C,KAAAgB,MAAA7e,GACAygB,GAAAO,EAAAJ,EAAAL,KAAAK,GACAiC,GAAA7B,EAAAJ,EAAAL,EAAA,GAAAA,EAAA,EAAAK,EACA,OAAAH,IAAAoC,EAAApC,IAAAzgB,EAAAugB,KAGAuC,EAAA,SAAAlC,EAAAY,EAAA7C,GAEA,MADAiC,GAAAtY,EAAAhP,KAAAsnB,EAAAE,GAAAiC,KAAAzE,GACAT,KAAA8D,MAAAhD,EAAA6C,IAAA,GAAAoB,EAAAhC,EAAA,KAAAgC,EAAAhC,EAAA,MAAA/C,KAAAkB,IAAA6B,EAAA7gB,QAAA,QAGAijB,EAAA,SAAApC,EAAAY,EAAA7C,GACA,MAAAd,MAAA8D,MAAAhD,EAAA6C,IAAA,IAAAH,EAAAT,GAAA/C,KAAAkB,IAAA6B,EAAA7gB,QAAA,QAGA4e,EAAA,SAAAiC,EAAAI,GACA,GAEAjnB,GACA4kB,EAHAwB,EAAAS,EAAA7gB,OACAC,GAAA,CAIA,UAAAghB,GACA,OAAAhhB,EAAAmgB,GACA,UAAApmB,EAAA6mB,EAAA5gB,KAAAjG,KAEA,IADA4kB,EAAA5kB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAA6mB,EAAA5gB,KAAAjG,EAAA4kB,IACAA,EAAA5kB,OAQA,QAAAiG,EAAAmgB,GACA,UAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,KAAA7mB,KAEA,IADA4kB,EAAA5kB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,KAAA7mB,EAAA4kB,IACAA,EAAA5kB,EAOA,OAAA4kB,IAGAuC,EAAA,SAAAN,EAAAI,GACA,GAGAjnB,GAHAomB,EAAAS,EAAA7gB,OACAxG,EAAA4mB,EACAngB,GAAA,EAEAmhB,EAAA,CAEA,UAAAH,EACA,OAAAhhB,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAF,EAAA5gB,OACAzG,EADA4nB,GAAApnB,MAMA,QAAAiG,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAE,EAAAJ,EAAA5gB,KAAA4gB,OACArnB,EADA4nB,GAAApnB,CAKA,IAAAR,EAAA,MAAA4nB,GAAA5nB,GAGA0pB,EAAA,SAAArC,EAAAI,GACA,GAEAjnB,GAFAomB,EAAAS,EAAA7gB,OACAC,GAAA,EAEAkjB,IAEA,UAAAlC,EACA,OAAAhhB,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAF,EAAA5gB,MACAkjB,EAAAtgB,KAAA7I,OAMA,QAAAiG,EAAAmgB,GACAiB,MAAArnB,EAAA+mB,EAAAE,EAAAJ,EAAA5gB,KAAA4gB,MACAsC,EAAAtgB,KAAA7I,EAKA,OAAA6oB,GAAAM,EAAAH,KAAAzE,GAAA,KAGA6E,EAAA,SAAAC,GAQA,IAPA,GACA7pB,GAGA8pB,EACAnjB,EALAigB,EAAAiD,EAAArjB,OAEAC,GAAA,EACAuG,EAAA,IAIAvG,EAAAmgB,GAAA5Z,GAAA6c,EAAApjB,GAAAD,MAGA,KAFAsjB,EAAA,GAAAzoB,OAAA2L,KAEA4Z,GAAA,GAGA,IAFAjgB,EAAAkjB,EAAAjD,GACA5mB,EAAA2G,EAAAH,SACAxG,GAAA,GACA8pB,IAAA9c,GAAArG,EAAA3G,EAIA,OAAA8pB,IAGA7B,EAAA,SAAAZ,EAAAI,GACA,GAEAjnB,GACAynB,EAHArB,EAAAS,EAAA7gB,OACAC,GAAA,CAIA,UAAAghB,GACA,OAAAhhB,EAAAmgB,GACA,UAAApmB,EAAA6mB,EAAA5gB,KAAAjG,KAEA,IADAynB,EAAAznB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAA6mB,EAAA5gB,KAAAwhB,EAAAznB,IACAynB,EAAAznB,OAQA,QAAAiG,EAAAmgB,GACA,UAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,KAAA7mB,KAEA,IADAynB,EAAAznB,IACAiG,EAAAmgB,GACA,OAAApmB,EAAAinB,EAAAJ,EAAA5gB,KAAA4gB,KAAAY,EAAAznB,IACAynB,EAAAznB,EAOA,OAAAynB,IAGA8B,EAAA,SAAApjB,EAAAqjB,GAEA,IADA,GAAAvjB,GAAAujB,EAAAxjB,OAAAyjB,EAAA,GAAA5oB,OAAAoF,GACAA,KAAAwjB,EAAAxjB,GAAAE,EAAAqjB,EAAAvjB,GACA,OAAAwjB,IAGAC,EAAA,SAAA7C,EAAAnB,GACA,GAAAU,EAAAS,EAAA7gB,OAAA,CACA,GAAAogB,GAGAuD,EAFA1jB,EAAA,EACAuG,EAAA,EAEAod,EAAA/C,EAAAra,EAIA,KAFA,MAAAkZ,MAAAnB,KAEAte,EAAAmgB,IACAV,EAAAiE,EAAA9C,EAAA5gB,GAAA2jB,GAAA,OAAAlE,EAAAkE,QACAA,EAAAD,EAAAnd,EAAAvG,EAIA,YAAAyf,EAAAkE,KAAApd,EAAA,SAGAqd,EAAA,SAAA1jB,EAAAqgB,EAAAC,GAKA,IAJA,GACAvX,GACAjJ,EAFAzG,GAAA,MAAAinB,EAAAtgB,EAAAH,OAAAygB,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIAhnB,GACAyG,EAAA6d,KAAAgG,SAAAtqB,IAAA;AACA0P,EAAA/I,EAAA3G,EAAAgnB,GACArgB,EAAA3G,EAAAgnB,GAAArgB,EAAAF,EAAAugB,GACArgB,EAAAF,EAAAugB,GAAAtX,CAGA,OAAA/I,IAGAihB,EAAA,SAAAP,EAAAI,GACA,GAEAjnB,GAFAomB,EAAAS,EAAA7gB,OACAC,GAAA,EAEAmhB,EAAA,CAEA,UAAAH,EACA,OAAAhhB,EAAAmgB,IACApmB,GAAA6mB,EAAA5gB,MAAAmhB,GAAApnB,OAKA,QAAAiG,EAAAmgB,IACApmB,GAAAinB,EAAAJ,EAAA5gB,KAAA4gB,MAAAO,GAAApnB,EAIA,OAAAonB,IAGA2C,EAAA,SAAAC,GACA,KAAA5D,EAAA4D,EAAAhkB,QAAA,QACA,QAAAC,IAAA,EAAAzG,EAAAioB,EAAAuC,EAAAhkB,GAAA+jB,EAAA,GAAAlpB,OAAArB,KAAqEyG,EAAAzG,GACrE,OAAA4mB,GAAA5Z,GAAA,EAAAyd,EAAAF,EAAA9jB,GAAA,GAAApF,OAAAulB,KAA0D5Z,EAAA4Z,GAC1D6D,EAAAzd,GAAAwd,EAAAxd,GAAAvG,EAGA,OAAA8jB,IAOAG,EAAA,WACA,MAAAH,GAAA5iB,WAGAhI,GAAAgrB,OAAAlE,EACA9mB,EAAA8mB,cACA9mB,EAAA+mB,aACA/mB,EAAAolB,YACAplB,EAAAsmB,WACAtmB,EAAAknB,QACAlnB,EAAA2nB,aACA3nB,EAAAmoB,YACAnoB,EAAAqoB,SACAroB,EAAA+oB,YACA/oB,EAAAirB,0BAAArB,EACA5pB,EAAAkrB,eAAApB,EACA9pB,EAAAmrB,iBAAAtC,EACA7oB,EAAAylB,MACAzlB,EAAAgoB,OACAhoB,EAAA+pB,SACA/pB,EAAAiqB,QACAjqB,EAAAsoB,MACAtoB,EAAAgnB,QACAhnB,EAAAoqB,UACApqB,EAAA0pB,WACA1pB,EAAA+kB,QACA/kB,EAAAuqB,OACAvqB,EAAA0qB,UACA1qB,EAAAioB,MACAjoB,EAAA0oB,QACA1oB,EAAAqlB,gBACArlB,EAAAimB,WACAjmB,EAAA4qB,YACA5qB,EAAA6nB,WACA7nB,EAAA+qB,MAEAhpB,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,OPoiGxC,SAAUZ,EAAQD,EAASH,IQ7mHjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAO7B,SAAA2H,GAAAW,EAAA8iB,GACA,GAAA7oB,GAAAR,OAAAqK,OAAA9D,EAAA/F,UACA,QAAAV,KAAAupB,GAAA7oB,EAAAV,GAAAupB,EAAAvpB,EACA,OAAAU,GAGA,QAAA8oB,MAiLA,QAAAC,GAAAC,GACA,GAAAlrB,EAEA,OADAkrB,MAAA,IAAApa,OAAA/K,eACA/F,EAAAmrB,EAAAjmB,KAAAgmB,KAAAlrB,EAAAorB,SAAAprB,EAAA,UAAAqrB,GAAArrB,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,KACAA,EAAAsrB,EAAApmB,KAAAgmB,IAAAK,EAAAH,SAAAprB,EAAA,SACAA,EAAAwrB,EAAAtmB,KAAAgmB,IAAA,GAAAG,GAAArrB,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAyrB,EAAAvmB,KAAAgmB,IAAA,GAAAG,GAAA,IAAArrB,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAA0rB,EAAAxmB,KAAAgmB,IAAAS,EAAA3rB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA4rB,EAAA1mB,KAAAgmB,IAAAS,EAAA,IAAA3rB,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA6rB,EAAA3mB,KAAAgmB,IAAAY,EAAA9rB,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA+rB,EAAA7mB,KAAAgmB,IAAAY,EAAA9rB,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAgsB,EAAApW,eAAAsV,GAAAK,EAAAS,EAAAd,IACA,gBAAAA,EAAA,GAAAG,GAAArF,YAAA,GACA,KAGA,QAAAuF,GAAA3E,GACA,UAAAyE,GAAAzE,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,QAAA+E,GAAAM,EAAA3Y,EAAA2H,EAAA3Q,GAEA,MADAA,IAAA,IAAA2hB,EAAA3Y,EAAA2H,EAAA+K,KACA,GAAAqF,GAAAY,EAAA3Y,EAAA2H,EAAA3Q,GAGA,QAAA4hB,GAAArV,GAEA,MADAA,aAAAmU,KAAAnU,EAAAoU,EAAApU,IACAA,GACAA,IAAAsV,MACA,GAAAd,GAAAxU,EAAAoV,EAAApV,EAAAvD,EAAAuD,EAAAoE,EAAApE,EAAAuV,UAFA,GAAAf,GAKA,QAAAc,GAAAF,EAAA3Y,EAAA2H,EAAAmR,GACA,WAAAzkB,UAAAnB,OAAA0lB,EAAAD,GAAA,GAAAZ,GAAAY,EAAA3Y,EAAA2H,EAAA,MAAAmR,EAAA,EAAAA,GAGA,QAAAf,GAAAY,EAAA3Y,EAAA2H,EAAAmR,GACA9rB,KAAA2rB,KACA3rB,KAAAgT,KACAhT,KAAA2a,KACA3a,KAAA8rB,WA+BA,QAAAN,GAAAO,EAAA7S,EAAA8S,EAAAhiB,GAIA,MAHAA,IAAA,EAAA+hB,EAAA7S,EAAA8S,EAAAtG,IACAsG,GAAA,GAAAA,GAAA,EAAAD,EAAA7S,EAAAwM,IACAxM,GAAA,IAAA6S,EAAArG,KACA,GAAAuG,GAAAF,EAAA7S,EAAA8S,EAAAhiB,GAGA,QAAAkiB,GAAA3V,GACA,GAAAA,YAAA0V,GAAA,UAAAA,GAAA1V,EAAAwV,EAAAxV,EAAA2C,EAAA3C,EAAAyV,EAAAzV,EAAAuV,QAEA,IADAvV,YAAAmU,KAAAnU,EAAAoU,EAAApU,KACAA,EAAA,UAAA0V,EACA,IAAA1V,YAAA0V,GAAA,MAAA1V,EACAA,KAAAsV,KACA,IAAAF,GAAApV,EAAAoV,EAAA,IACA3Y,EAAAuD,EAAAvD,EAAA,IACA2H,EAAApE,EAAAoE,EAAA,IACAgN,EAAA3D,KAAA2D,IAAAgE,EAAA3Y,EAAA2H,GACAmK,EAAAd,KAAAc,IAAA6G,EAAA3Y,EAAA2H,GACAoR,EAAArG,IACAxM,EAAA4L,EAAA6C,EACAqE,GAAAlH,EAAA6C,GAAA,CAUA,OATAzO,IACA6S,EAAAJ,IAAA7G,GAAA9R,EAAA2H,GAAAzB,EAAA,GAAAlG,EAAA2H,GACA3H,IAAA8R,GAAAnK,EAAAgR,GAAAzS,EAAA,GACAyS,EAAA3Y,GAAAkG,EAAA,EACAA,GAAA8S,EAAA,GAAAlH,EAAA6C,EAAA,EAAA7C,EAAA6C,EACAoE,GAAA,IAEA7S,EAAA8S,EAAA,GAAAA,EAAA,IAAAD,EAEA,GAAAE,GAAAF,EAAA7S,EAAA8S,EAAAzV,EAAAuV,SAGA,QAAAK,GAAAJ,EAAA7S,EAAA8S,EAAAF,GACA,WAAAzkB,UAAAnB,OAAAgmB,EAAAH,GAAA,GAAAE,GAAAF,EAAA7S,EAAA8S,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAG,GAAAF,EAAA7S,EAAA8S,EAAAF,GACA9rB,KAAA+rB,KACA/rB,KAAAkZ,KACAlZ,KAAAgsB,KACAhsB,KAAA8rB,WAiCA,QAAAM,GAAAL,EAAAM,EAAAC,GACA,MAGA,MAHAP,EAAA,GAAAM,GAAAC,EAAAD,GAAAN,EAAA,GACAA,EAAA,IAAAO,EACAP,EAAA,IAAAM,GAAAC,EAAAD,IAAA,IAAAN,GAAA,GACAM,GAeA,QAAAE,GAAAhW,GACA,GAAAA,YAAAiW,GAAA,UAAAA,GAAAjW,EAAAyV,EAAAzV,EAAAvM,EAAAuM,EAAAoE,EAAApE,EAAAuV,QACA,IAAAvV,YAAAkW,GAAA,CACA,GAAAV,GAAAxV,EAAAwV,EAAAW,CACA,WAAAF,GAAAjW,EAAAyV,EAAAhI,KAAA2I,IAAAZ,GAAAxV,EAAA5W,EAAAqkB,KAAA4I,IAAAb,GAAAxV,EAAA5W,EAAA4W,EAAAuV,SAEAvV,YAAAwU,KAAAxU,EAAAqV,EAAArV,GACA,IAAAoE,GAAAkS,EAAAtW,EAAAoV,GACA3hB,EAAA6iB,EAAAtW,EAAAvD,GACAgZ,EAAAa,EAAAtW,EAAAoE,GACA6J,EAAAsI,GAAA,SAAAnS,EAAA,SAAA3Q,EAAA,SAAAgiB,GAAAe,GACAC,EAAAF,GAAA,SAAAnS,EAAA,SAAA3Q,EAAA,QAAAgiB,GAAAiB,GACAC,EAAAJ,GAAA,SAAAnS,EAAA,QAAA3Q,EAAA,SAAAgiB,GAAAmB,EACA,WAAAX,GAAA,IAAAQ,EAAA,QAAAxI,EAAAwI,GAAA,KAAAA,EAAAE,GAAA3W,EAAAuV,SAGA,QAAAsB,GAAApB,EAAAhiB,EAAA2Q,EAAAmR,GACA,WAAAzkB,UAAAnB,OAAAqmB,EAAAP,GAAA,GAAAQ,GAAAR,EAAAhiB,EAAA2Q,EAAA,MAAAmR,EAAA,EAAAA,GAGA,QAAAU,GAAAR,EAAAhiB,EAAA2Q,EAAAmR,GACA9rB,KAAAgsB,KACAhsB,KAAAgK,KACAhK,KAAA2a,KACA3a,KAAA8rB,WA0BA,QAAAgB,GAAA1d,GACA,MAAAA,GAAAie,EAAArJ,KAAAkB,IAAA9V,EAAA,KAAAA,EAAAke,EAAAC,EAGA,QAAAC,GAAApe,GACA,MAAAA,GAAAqe,EAAAre,MAAAke,GAAAle,EAAAme,GAGA,QAAAG,GAAAlJ,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAR,KAAAkB,IAAAV,EAAA,aAGA,QAAAqI,GAAArI,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAR,KAAAkB,KAAAV,EAAA,iBAGA,QAAAmJ,GAAApX,GACA,GAAAA,YAAAkW,GAAA,UAAAA,GAAAlW,EAAAwV,EAAAxV,EAAA5W,EAAA4W,EAAAyV,EAAAzV,EAAAuV,QACAvV,aAAAiW,KAAAjW,EAAAgW,EAAAhW,GACA,IAAAwV,GAAA/H,KAAA4J,MAAArX,EAAAoE,EAAApE,EAAAvM,GAAA6jB,CACA,WAAApB,GAAAV,EAAA,EAAAA,EAAA,IAAAA,EAAA/H,KAAAyD,KAAAlR,EAAAvM,EAAAuM,EAAAvM,EAAAuM,EAAAoE,EAAApE,EAAAoE,GAAApE,EAAAyV,EAAAzV,EAAAuV,SAGA,QAAAgC,GAAA/B,EAAApsB,EAAAqsB,EAAAF,GACA,WAAAzkB,UAAAnB,OAAAynB,EAAA5B,GAAA,GAAAU,GAAAV,EAAApsB,EAAAqsB,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAW,GAAAV,EAAApsB,EAAAqsB,EAAAF,GACA9rB,KAAA+rB,KACA/rB,KAAAL,KACAK,KAAAgsB,KACAhsB,KAAA8rB,WAwBA,QAAAiC,GAAAxX,GACA,GAAAA,YAAAyX,GAAA,UAAAA,GAAAzX,EAAAwV,EAAAxV,EAAA2C,EAAA3C,EAAAyV,EAAAzV,EAAAuV,QACAvV,aAAAwU,KAAAxU,EAAAqV,EAAArV,GACA,IAAAoV,GAAApV,EAAAoV,EAAA,IACA3Y,EAAAuD,EAAAvD,EAAA,IACA2H,EAAApE,EAAAoE,EAAA,IACAqR,GAAAiC,GAAAtT,EAAAuT,GAAAvC,EAAAwC,GAAAnb,IAAAib,GAAAC,GAAAC,IACAC,EAAAzT,EAAAqR,EACAxW,GAAA6Y,IAAArb,EAAAgZ,GAAAsC,GAAAF,GAAAG,GACArV,EAAA8K,KAAAyD,KAAAjS,IAAA4Y,MAAAC,GAAArC,GAAA,EAAAA,IACAD,EAAA7S,EAAA8K,KAAA4J,MAAApY,EAAA4Y,GAAAP,EAAA,IAAAnI,GACA,WAAAsI,GAAAjC,EAAA,EAAAA,EAAA,IAAAA,EAAA7S,EAAA8S,EAAAzV,EAAAuV,SAGA,QAAA0C,GAAAzC,EAAA7S,EAAA8S,EAAAF,GACA,WAAAzkB,UAAAnB,OAAA6nB,EAAAhC,GAAA,GAAAiC,GAAAjC,EAAA7S,EAAA8S,EAAA,MAAAF,EAAA,EAAAA,GAGA,QAAAkC,GAAAjC,EAAA7S,EAAA8S,EAAAF,GACA9rB,KAAA+rB,KACA/rB,KAAAkZ,KACAlZ,KAAAgsB,KACAhsB,KAAA8rB,WA/dA,GAAA2C,GAAA,SAAA1c,EAAAhS,EAAA6B,GACAmQ,EAAAnQ,UAAA7B,EAAA6B,YACAA,EAAAmQ,eAWA2c,EAAA,GACAC,EAAA,EAAAD,EAEAE,EAAA,sBACAC,EAAA,gDACAC,EAAA,iDACAjE,EAAA,mBACAG,EAAA,mBACAE,EAAA,GAAAxR,QAAA,WAAAkV,OAAA,QACAzD,EAAA,GAAAzR,QAAA,WAAAoV,OAAA,QACA1D,EAAA,GAAA1R,QAAA,YAAAkV,MAAAC,GAAA,QACAvD,EAAA,GAAA5R,QAAA,YAAAoV,MAAAD,GAAA,QACAtD,EAAA,GAAA7R,QAAA,WAAAmV,EAAAC,KAAA,QACArD,EAAA,GAAA/R,QAAA,YAAAmV,EAAAC,IAAAD,GAAA,QAEAnD,GACAqD,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,SAGAzJ,GAAA/D,EAAAC,GACAwN,YAAA,WACA,MAAAn4B,MAAA6rB,MAAAsM,eAEAC,SAAA,WACA,MAAAp4B,MAAA6rB,MAAA,MA+CA4C,EAAA1D,EAAAc,EAAA7kB,EAAA0jB,GACAiE,SAAA,SAAAnZ,GAEA,MADAA,GAAA,MAAAA,EAAAmZ,EAAA3K,KAAAkB,IAAAyJ,EAAAnZ,GACA,GAAAuV,GAAA/qB,KAAA2rB,EAAAnW,EAAAxV,KAAAgT,EAAAwC,EAAAxV,KAAA2a,EAAAnF,EAAAxV,KAAA8rB,UAEA4C,OAAA,SAAAlZ,GAEA,MADAA,GAAA,MAAAA,EAAAkZ,EAAA1K,KAAAkB,IAAAwJ,EAAAlZ,GACA,GAAAuV,GAAA/qB,KAAA2rB,EAAAnW,EAAAxV,KAAAgT,EAAAwC,EAAAxV,KAAA2a,EAAAnF,EAAAxV,KAAA8rB,UAEAD,IAAA,WACA,MAAA7rB,OAEAm4B,YAAA,WACA,UAAAn4B,KAAA2rB,GAAA3rB,KAAA2rB,GAAA,KACA,GAAA3rB,KAAAgT,GAAAhT,KAAAgT,GAAA,KACA,GAAAhT,KAAA2a,GAAA3a,KAAA2a,GAAA,KACA,GAAA3a,KAAA8rB,SAAA9rB,KAAA8rB,SAAA,GAEAsM,SAAA,WACA,GAAApuB,GAAAhK,KAAA8rB,OACA,OADyB9hB,GAAAud,MAAAvd,GAAA,EAAAga,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAA3d,KACzB,IAAAA,EAAA,gBACAga,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,IAAA3D,KAAAC,MAAAjkB,KAAA2rB,IAAA,SACA3H,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,IAAA3D,KAAAC,MAAAjkB,KAAAgT,IAAA,SACAgR,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,IAAA3D,KAAAC,MAAAjkB,KAAA2a,IAAA,KACA,IAAA3Q,EAAA,SAAAA,EAAA,SAgDAykB,EAAAxC,EAAAE,EAAAnlB,EAAA0jB,GACAiE,SAAA,SAAAnZ,GAEA,MADAA,GAAA,MAAAA,EAAAmZ,EAAA3K,KAAAkB,IAAAyJ,EAAAnZ,GACA,GAAAyW,GAAAjsB,KAAA+rB,EAAA/rB,KAAAkZ,EAAAlZ,KAAAgsB,EAAAxW,EAAAxV,KAAA8rB,UAEA4C,OAAA,SAAAlZ,GAEA,MADAA,GAAA,MAAAA,EAAAkZ,EAAA1K,KAAAkB,IAAAwJ,EAAAlZ,GACA,GAAAyW,GAAAjsB,KAAA+rB,EAAA/rB,KAAAkZ,EAAAlZ,KAAAgsB,EAAAxW,EAAAxV,KAAA8rB,UAEAD,IAAA,WACA,GAAAE,GAAA/rB,KAAA+rB,EAAA,SAAA/rB,KAAA+rB,EAAA,GACA7S,EAAAqO,MAAAwE,IAAAxE,MAAAvnB,KAAAkZ,GAAA,EAAAlZ,KAAAkZ,EACA8S,EAAAhsB,KAAAgsB,EACAM,EAAAN,KAAA,GAAAA,EAAA,EAAAA,GAAA9S,EACAmT,EAAA,EAAAL,EAAAM,CACA,WAAAvB,GACAqB,EAAAL,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAM,EAAAC,GACAF,EAAAL,EAAAM,EAAAC,GACAF,EAAAL,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAM,EAAAC,GACAtsB,KAAA8rB,UAGAqM,YAAA,WACA,UAAAn4B,KAAAkZ,GAAAlZ,KAAAkZ,GAAA,GAAAqO,MAAAvnB,KAAAkZ,KACA,GAAAlZ,KAAAgsB,GAAAhsB,KAAAgsB,GAAA,GACA,GAAAhsB,KAAA8rB,SAAA9rB,KAAA8rB,SAAA,KAYA,IAAAY,GAAA1I,KAAAqU,GAAA,IACAxK,EAAA,IAAA7J,KAAAqU,GAEAC,EAAA,GACAvL,EAAA,OACAE,EAAA,EACAE,EAAA,QACAI,EAAA,KACAE,EAAA,KACAH,EAAA,EAAAG,IACAJ,EAAAI,KA6BAgB,GAAAjC,EAAAY,EAAApmB,EAAA0jB,GACAiE,SAAA,SAAAnZ,GACA,UAAAgX,GAAAxsB,KAAAgsB,EAAAsM,GAAA,MAAA9iB,EAAA,EAAAA,GAAAxV,KAAAgK,EAAAhK,KAAA2a,EAAA3a,KAAA8rB,UAEA4C,OAAA,SAAAlZ,GACA,UAAAgX,GAAAxsB,KAAAgsB,EAAAsM,GAAA,MAAA9iB,EAAA,EAAAA,GAAAxV,KAAAgK,EAAAhK,KAAA2a,EAAA3a,KAAA8rB,UAEAD,IAAA,WACA,GAAAmB,IAAAhtB,KAAAgsB,EAAA,QACAxH,EAAA+C,MAAAvnB,KAAAgK,GAAAgjB,IAAAhtB,KAAAgK,EAAA,IACAkjB,EAAA3F,MAAAvnB,KAAA2a,GAAAqS,IAAAhtB,KAAA2a,EAAA,GAIA,OAHAqS,GAAAC,EAAAO,EAAAR,GACAxI,EAAAuI,EAAAS,EAAAhJ,GACA0I,EAAAC,EAAAK,EAAAN,GACA,GAAAnC,GACA2C,EAAA,UAAAlJ,EAAA,UAAAwI,EAAA,SAAAE,GACAQ,GAAA,QAAAlJ,EAAA,UAAAwI,EAAA,QAAAE,GACAQ,EAAA,SAAAlJ,EAAA,SAAAwI,EAAA,UAAAE,GACAltB,KAAA8rB,aAuCA2C,EAAAhC,EAAAqB,EAAA9mB,EAAA0jB,GACAiE,SAAA,SAAAnZ,GACA,UAAAiX,GAAAzsB,KAAA+rB,EAAA/rB,KAAAL,EAAAK,KAAAgsB,EAAAsM,GAAA,MAAA9iB,EAAA,EAAAA,GAAAxV,KAAA8rB,UAEA4C,OAAA,SAAAlZ,GACA,UAAAiX,GAAAzsB,KAAA+rB,EAAA/rB,KAAAL,EAAAK,KAAAgsB,EAAAsM,GAAA,MAAA9iB,EAAA,EAAAA,GAAAxV,KAAA8rB,UAEAD,IAAA,WACA,MAAAU,GAAAvsB,MAAA6rB,SAIA,IAAA0M,IAAA,OACAC,EAAA,QACAlK,IAAA,OACAC,IAAA,OACAF,GAAA,QACAH,GAAAG,GAAAE,GACAJ,GAAAE,GAAAmK,EACAvK,GAAAuK,EAAAlK,GAAAC,GAAAgK,CA2BA9J,GAAAT,EAAAQ,EAAAxnB,EAAA0jB,GACAiE,SAAA,SAAAnZ,GAEA,MADAA,GAAA,MAAAA,EAAAmZ,EAAA3K,KAAAkB,IAAAyJ,EAAAnZ,GACA,GAAAwY,GAAAhuB,KAAA+rB,EAAA/rB,KAAAkZ,EAAAlZ,KAAAgsB,EAAAxW,EAAAxV,KAAA8rB,UAEA4C,OAAA,SAAAlZ,GAEA,MADAA,GAAA,MAAAA,EAAAkZ,EAAA1K,KAAAkB,IAAAwJ,EAAAlZ,GACA,GAAAwY,GAAAhuB,KAAA+rB,EAAA/rB,KAAAkZ,EAAAlZ,KAAAgsB,EAAAxW,EAAAxV,KAAA8rB,UAEAD,IAAA,WACA,GAAAE,GAAAxE,MAAAvnB,KAAA+rB,GAAA,GAAA/rB,KAAA+rB,EAAA,KAAAW,EACAV,GAAAhsB,KAAAgsB,EACAhiB,EAAAud,MAAAvnB,KAAAkZ,GAAA,EAAAlZ,KAAAkZ,EAAA8S,GAAA,EAAAA,GACAyM,EAAAzU,KAAA2I,IAAAZ,GACA2M,EAAA1U,KAAA4I,IAAAb,EACA,WAAAhB,GACA,KAAAiB,EAAAhiB,GAAAuuB,EAAAE,EAAAD,EAAAE,IACA,KAAA1M,EAAAhiB,GAAAskB,GAAAmK,EAAAlK,GAAAmK,IACA,KAAA1M,EAAAhiB,GAAAqkB,GAAAoK,IACAz4B,KAAA8rB,aAKAzsB,EAAAsrB,QACAtrB,EAAAwsB,MACAxsB,EAAA8sB,MACA9sB,EAAA+tB,MACA/tB,EAAAyuB,MACAzuB,EAAAmvB,YAEAptB,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,ORunHxC,SAAUZ,EAAQD,EAASH,IS9nIjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YA4G7B,SAAAs5B,GAAAC,GACA,UAAAC,GAAAD,GAKA,QAAAC,GAAAD,GACA,KAAAtnB,EAAAoH,EAAA9T,KAAAg0B,IAAA,SAAAvlB,OAAA,mBAAAulB,EAEA,IAAAtnB,GACAwnB,EAAAxnB,EAAA,QACAynB,EAAAznB,EAAA,QACA0nB,EAAA1nB,EAAA,QACA2nB,EAAA3nB,EAAA,OACA4nB,IAAA5nB,EAAA,GACA6nB,EAAA7nB,EAAA,KAAAA,EAAA,GACA8nB,IAAA9nB,EAAA,GACA+nB,EAAA/nB,EAAA,KAAAA,EAAA,GAAAzP,MAAA,GACA6N,EAAA4B,EAAA,MAGA,OAAA5B,GAAA0pB,GAAA,EAAA1pB,EAAA,KAGA4pB,EAAA5pB,OAAA,KAGAwpB,GAAA,MAAAJ,GAAA,MAAAC,KAAAG,GAAA,EAAAJ,EAAA,IAAAC,EAAA,KAEA/4B,KAAA84B,OACA94B,KAAA+4B,QACA/4B,KAAAg5B,OACAh5B,KAAAi5B,SACAj5B,KAAAk5B,OACAl5B,KAAAm5B,QACAn5B,KAAAo5B,QACAp5B,KAAAq5B,YACAr5B,KAAA0P,OAuJA,QAAA6pB,GAAA9O,GAIA,MAHA+O,GAAAnY,EAAAoJ,GACAprB,EAAAurB,OAAA4O,EAAA5O,OACAvrB,EAAAo6B,aAAAD,EAAAC,aACAD,EAvSA,GA0DAE,GA1DAC,EAAA,SAAAnV,EAAA5kB,GACA,IAAAuG,GAAAqe,EAAA5kB,EAAA4kB,EAAAoV,cAAAh6B,EAAA,GAAA4kB,EAAAoV,iBAAArzB,QAAA,mBACA,IAAAJ,GAAA0zB,EAAArV,EAAA3iB,MAAA,EAAAsE,EAIA,QACA0zB,EAAA3zB,OAAA,EAAA2zB,EAAA,GAAAA,EAAAh4B,MAAA,GAAAg4B,GACArV,EAAA3iB,MAAAsE,EAAA,KAIA2zB,EAAA,SAAAtV,GACA,MAAAA,GAAAmV,EAAA3V,KAAAwB,IAAAhB,QAAA,GAAAkB,KAGAqU,EAAA,SAAAC,EAAAC,GACA,gBAAA/5B,EAAAi5B,GAOA,IANA,GAAAhzB,GAAAjG,EAAAgG,OACAkJ,KACA1C,EAAA,EACAsG,EAAAgnB,EAAA,GACA9zB,EAAA,EAEAC,EAAA,GAAA6M,EAAA,IACA9M,EAAA8M,EAAA,EAAAmmB,IAAAnmB,EAAAgR,KAAAc,IAAA,EAAAqU,EAAAjzB,IACAkJ,EAAArG,KAAA7I,EAAAg6B,UAAA/zB,GAAA6M,EAAA7M,EAAA6M,OACA9M,GAAA8M,EAAA,GAAAmmB,KACAnmB,EAAAgnB,EAAAttB,KAAA,GAAAstB,EAAA9zB,OAGA,OAAAkJ,GAAA4Y,UAAA7P,KAAA8hB,KAIAE,EAAA,SAAAC,GACA,gBAAAl6B,GACA,MAAAA,GAAAwG,QAAA,kBAAAP,GACA,MAAAi0B,IAAAj0B,OAKAk0B,EAAA,SAAA7V,EAAA5kB,GACA4kB,IAAA8V,YAAA16B,EAEA26B,GAAA,OAAA5T,GAAAL,EAAA9B,EAAAte,OAAAC,EAAA,EAAAugB,GAAA,EAAiDvgB,EAAAmgB,IAAOngB,EACxD,OAAAqe,EAAAre,IACA,QAAAugB,EAAAC,EAAAxgB,CAA4B,MAC5B,aAAAugB,MAAAvgB,GAAqCwgB,EAAAxgB,CAAQ,MAC7C,cAAAo0B,EACA,SAAA7T,EAAA,IAAAA,EAAA,GAIA,MAAAA,GAAA,EAAAlC,EAAA3iB,MAAA,EAAA6kB,GAAAlC,EAAA3iB,MAAA8kB,EAAA,GAAAnC,GAKAgW,EAAA,SAAAhW,EAAA5kB,GACA,GAAAqjB,GAAA0W,EAAAnV,EAAA5kB,EACA,KAAAqjB,EAAA,MAAAuB,GAAA,EACA,IAAAqV,GAAA5W,EAAA,GACA6W,EAAA7W,EAAA,GACA9c,EAAA2zB,GAAAJ,EAAA,EAAA1V,KAAAc,KAAA,EAAAd,KAAA2D,IAAA,EAAA3D,KAAAgB,MAAA8U,EAAA,QACAxT,EAAAuT,EAAA3zB,MACA,OAAAC,KAAAmgB,EAAAuT,EACA1zB,EAAAmgB,EAAAuT,EAAA,GAAA94B,OAAAoF,EAAAmgB,EAAA,GAAAnO,KAAA,KACAhS,EAAA,EAAA0zB,EAAAh4B,MAAA,EAAAsE,GAAA,IAAA0zB,EAAAh4B,MAAAsE,GACA,QAAApF,OAAA,EAAAoF,GAAAgS,KAAA,KAAAwhB,EAAAnV,EAAAR,KAAAc,IAAA,EAAAllB,EAAAuG,EAAA,QAGAs0B,EAAA,SAAAjW,EAAA5kB,GACA,GAAAqjB,GAAA0W,EAAAnV,EAAA5kB,EACA,KAAAqjB,EAAA,MAAAuB,GAAA,EACA,IAAAqV,GAAA5W,EAAA,GACA6W,EAAA7W,EAAA,EACA,OAAA6W,GAAA,UAAA/4B,QAAA+4B,GAAA3hB,KAAA,KAAA0hB,EACAA,EAAA3zB,OAAA4zB,EAAA,EAAAD,EAAAh4B,MAAA,EAAAi4B,EAAA,OAAAD,EAAAh4B,MAAAi4B,EAAA,GACAD,EAAA,GAAA94B,OAAA+4B,EAAAD,EAAA3zB,OAAA,GAAAiS,KAAA,MAGAmhB,GACAoB,GAAAL,EACAM,IAAA,SAAAnW,EAAA5kB,GAAuB,WAAA4kB,GAAAoW,QAAAh7B,IACvB+a,EAAA,SAAA6J,GAAoB,MAAAR,MAAAC,MAAAO,GAAA4T,SAAA,IACpBz4B,EAAA,SAAA6kB,GAAoB,MAAAA,GAAA,IACpBvB,EAAA,SAAAuB,GAAoB,MAAAR,MAAAC,MAAAO,GAAA4T,SAAA,KACpB5wB,EAAA,SAAAgd,EAAA5kB,GAAuB,MAAA4kB,GAAAoV,cAAAh6B,IACvB2jB,EAAA,SAAAiB,EAAA5kB,GAAuB,MAAA4kB,GAAAoW,QAAAh7B,IACvBoT,EAAA,SAAAwR,EAAA5kB,GAAuB,MAAA4kB,GAAA8V,YAAA16B,IACvB2W,EAAA,SAAAiO,GAAoB,MAAAR,MAAAC,MAAAO,GAAA4T,SAAA,IACpBx4B,EAAA,SAAA4kB,EAAA5kB,GAAuB,MAAA66B,GAAA,IAAAjW,EAAA5kB,IACvB+rB,EAAA8O,EACAvhB,EAAAshB,EACAK,EAAA,SAAArW,GAAoB,MAAAR,MAAAC,MAAAO,GAAA4T,SAAA,IAAAxxB,eACpB4d,EAAA,SAAAA,GAAoB,MAAAR,MAAAC,MAAAO,GAAA4T,SAAA,MAIpB1f,EAAA,uEAMAigB,GAAA/2B,UAAAi3B,EAAAj3B,UAoCAi3B,EAAAj3B,UAAAw2B,SAAA,WACA,MAAAp4B,MAAA84B,KACA94B,KAAA+4B,MACA/4B,KAAAg5B,KACAh5B,KAAAi5B,QACAj5B,KAAAk5B,KAAA,SACA,MAAAl5B,KAAAm5B,MAAA,GAAAnV,KAAAc,IAAA,IAAA9kB,KAAAm5B,SACAn5B,KAAAo5B,MAAA,SACA,MAAAp5B,KAAAq5B,UAAA,OAAArV,KAAAc,IAAA,IAAA9kB,KAAAq5B,YACAr5B,KAAA0P,KAGA,IA6HA8pB,GA7HA3R,EAAA,SAAArD,GACA,MAAAA,IAGAsW,GAAA,oEAEAzZ,EAAA,SAAAmY,GAOA,QAAAuB,GAAAnC,GAgCA,QAAAhO,GAAA1qB,GACA,GAEAiG,GAAAmgB,EAAA3mB,EAFAq7B,EAAAC,EACAC,EAAAC,CAGA,UAAAzrB,EACAwrB,EAAAE,EAAAl7B,GAAAg7B,EACAh7B,EAAA,OACO,CACPA,IAGA,IAAAm7B,GAAAn7B,EAAA,CAYA,IAXAA,EAAAk7B,EAAApX,KAAAwB,IAAAtlB,GAAAm5B,GAGAgC,GAAA,KAAAn7B,IAAAm7B,GAAA,GAGAL,GAAAK,EAAA,MAAArC,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAgC,EACAE,KAAA,MAAAxrB,EAAAorB,EAAA,EAAApB,EAAA,QAAA2B,GAAA,MAAArC,EAAA,QAIAsC,EAEA,IADAn1B,GAAA,EAAAmgB,EAAApmB,EAAAgG,SACAC,EAAAmgB,GACA,GAAA3mB,EAAAO,EAAAq7B,WAAAp1B,GAAA,GAAAxG,KAAA,IACAu7B,GAAA,KAAAv7B,EAAA67B,EAAAt7B,EAAA2B,MAAAsE,EAAA,GAAAjG,EAAA2B,MAAAsE,IAAA+0B,EACAh7B,IAAA2B,MAAA,EAAAsE,EACA,QAOAizB,IAAAF,IAAAh5B,EAAAu7B,EAAAv7B,EAAAw7B,KAGA,IAAAx1B,GAAA80B,EAAA90B,OAAAhG,EAAAgG,OAAAg1B,EAAAh1B,OACAy1B,EAAAz1B,EAAAizB,EAAA,GAAAp4B,OAAAo4B,EAAAjzB,EAAA,GAAAiS,KAAA2gB,GAAA,EAMA,QAHAM,GAAAF,IAAAh5B,EAAAu7B,EAAAE,EAAAz7B,EAAAy7B,EAAAz1B,OAAAizB,EAAA+B,EAAAh1B,OAAAw1B,KAAAC,EAAA,IAGA5C,GACA,QAAA74B,EAAA86B,EAAA96B,EAAAg7B,EAAAS,CAAsE,MACtE,SAAAz7B,EAAA86B,EAAAW,EAAAz7B,EAAAg7B,CAAsE,MACtE,SAAAh7B,EAAAy7B,EAAA95B,MAAA,EAAAqE,EAAAy1B,EAAAz1B,QAAA,GAAA80B,EAAA96B,EAAAg7B,EAAAS,EAAA95B,MAAAqE,EAAqI,MACrI,SAAAhG,EAAAy7B,EAAAX,EAAA96B,EAAAg7B,EAGA,MAAAd,GAAAl6B,GArFA04B,EAAAD,EAAAC,EAEA,IAAAE,GAAAF,EAAAE,KACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,KACAC,EAAAL,EAAAK,OACAC,EAAAN,EAAAM,KACAC,EAAAP,EAAAO,MACAC,EAAAR,EAAAQ,MACAC,EAAAT,EAAAS,UACA3pB,EAAAkpB,EAAAlpB,KAIAurB,EAAA,MAAAhC,EAAA2C,EAAA,SAAA3C,GAAA,SAAA74B,KAAAsP,GAAA,IAAAA,EAAAjK,cAAA,GACA01B,EAAA,MAAAlC,EAAA2C,EAAA,UAAAx7B,KAAAsP,GAAAmsB,EAAA,GAKAT,EAAA9B,EAAA5pB,GACA4rB,GAAA5rB,GAAA,aAAAtP,KAAAsP,EAuEA,OAjEA2pB,GAAA,MAAAA,EAAA3pB,EAAA,KACA,SAAAtP,KAAAsP,GAAAsU,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,GAAA0R,IACArV,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,GAAA0R,IA2DAzO,EAAAwN,SAAA,WACA,MAAAQ,GAAA,IAGAhO,EAGA,QAAA6O,GAAAb,EAAA14B,GACA,GAAAqjB,GAAAwX,GAAAnC,EAAAD,EAAAC,KAAAlpB,KAAA,IAAAkpB,IACApxB,EAAA,EAAAwc,KAAAc,KAAA,EAAAd,KAAA2D,IAAA,EAAA3D,KAAAgB,MAAA8U,EAAA55B,GAAA,KACAsV,EAAAwO,KAAAkB,IAAA,IAAA1d,GACAyzB,EAAAH,EAAA,EAAAtzB,EAAA,EACA,iBAAAtH,GACA,MAAAqjB,GAAA/N,EAAAtV,GAAA+6B,GA5GA,GAAAQ,GAAAjC,EAAAQ,UAAAR,EAAAS,UAAAF,EAAAP,EAAAQ,SAAAR,EAAAS,WAAApS,EACA+T,EAAApC,EAAAoC,SACAJ,EAAAhC,EAAAgC,QACApB,EAAAZ,EAAAY,SAAAD,EAAAX,EAAAY,UAAAvS,EACAgU,EAAArC,EAAAqC,SAAA,GA4GA,QACAjR,OAAAmQ,EACAtB,gBAQAF,IACAiC,QAAA,IACAvB,UAAA,IACAD,UAAA,GACA4B,UAAA,SAUA,IAAAE,GAAA,SAAAjX,GACA,MAAAb,MAAAc,IAAA,GAAAgV,EAAA9V,KAAAwB,IAAAX,MAGAkX,EAAA,SAAAlX,EAAA3kB,GACA,MAAA8jB,MAAAc,IAAA,IAAAd,KAAAc,KAAA,EAAAd,KAAA2D,IAAA,EAAA3D,KAAAgB,MAAA8U,EAAA55B,GAAA,KAAA45B,EAAA9V,KAAAwB,IAAAX,MAGAmX,EAAA,SAAAnX,EAAAC,GAEA,MADAD,GAAAb,KAAAwB,IAAAX,GAAAC,EAAAd,KAAAwB,IAAAV,GAAAD,EACAb,KAAAc,IAAA,EAAAgV,EAAAhV,GAAAgV,EAAAjV,IAAA,EAGAxlB,GAAA48B,oBAAA1C,EACAl6B,EAAAgiB,eACAhiB,EAAAs5B,kBACAt5B,EAAAy8B,iBACAz8B,EAAA08B,kBACA18B,EAAA28B,iBAEA56B,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,OTwoIxC,SAAUZ,EAAQD,EAASH,IU/8IjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAK7B,SAAA68B,GAAAC,EAAAC,EAAAxX,EAAAyX,GAEA,QAAAC,GAAAC,GACA,MAAAJ,GAAAI,EAAA,GAAAC,OAAAD,MAqDA,MAlDAD,GAAAtX,MAAAsX,EAEAA,EAAAxU,KAAA,SAAAyU,GACA,MAAAJ,GAAAI,EAAA,GAAAC,MAAAD,EAAA,IAAAH,EAAAG,EAAA,GAAAJ,EAAAI,MAGAD,EAAArY,MAAA,SAAAsY,GACA,GAAAE,GAAAH,EAAAC,GACAG,EAAAJ,EAAAxU,KAAAyU,EACA,OAAAA,GAAAE,EAAAC,EAAAH,EAAAE,EAAAC,GAGAJ,EAAAK,OAAA,SAAAJ,EAAA1X,GACA,MAAAuX,GAAAG,EAAA,GAAAC,OAAAD,GAAA,MAAA1X,EAAA,EAAAb,KAAAgB,MAAAH,IAAA0X,GAGAD,EAAAlY,MAAA,SAAA3L,EAAAkM,EAAAE,GACA,GAAAT,KAGA,IAFA3L,EAAA6jB,EAAAxU,KAAArP,GACAoM,EAAA,MAAAA,EAAA,EAAAb,KAAAgB,MAAAH,KACApM,EAAAkM,GAAAE,EAAA,SAAAT,EACA,GAAAA,GAAArb,KAAA,GAAAyzB,OAAA/jB,UAAoC2jB,EAAA3jB,EAAAoM,GAAAsX,EAAA1jB,KAAAkM,EACpC,OAAAP,IAGAkY,EAAA5tB,OAAA,SAAAtO,GACA,MAAA87B,GAAA,SAAAK,GACA,GAAAA,KAAA,KAAAJ,EAAAI,IAAAn8B,EAAAm8B,MAAAK,QAAAL,EAAA,IACK,SAAAA,EAAA1X,GACL,GAAA0X,KAAA,OAAA1X,GAAA,QAAAuX,EAAAG,EAAA,IAAAn8B,EAAAm8B,SAIA3X,IACA0X,EAAA1X,MAAA,SAAAnM,EAAAO,GAGA,MAFAuU,GAAAqP,SAAAnkB,GAAAgV,EAAAmP,SAAA5jB,GACAmjB,EAAA5O,GAAA4O,EAAA1O,GACAzJ,KAAAgB,MAAAJ,EAAA2I,EAAAE,KAGA6O,EAAAO,MAAA,SAAAhY,GAEA,MADAA,GAAAb,KAAAgB,MAAAH,GACAoD,SAAApD,MAAA,EACAA,EAAA,EACAyX,EAAA5tB,OAAA2tB,EACA,SAAApZ,GAA6B,MAAAoZ,GAAApZ,GAAA4B,IAAA,GAC7B,SAAA5B,GAA6B,MAAAqZ,GAAA1X,MAAA,EAAA3B,GAAA4B,IAAA,IAH7ByX,EADA,OAQAA,EAmFA,QAAAQ,GAAA32B,GACA,MAAA+1B,GAAA,SAAAK,GACAA,EAAAQ,QAAAR,EAAAS,WAAAT,EAAAU,SAAA,EAAA92B,GAAA,GACAo2B,EAAAW,SAAA,UACG,SAAAX,EAAA1X,GACH0X,EAAAQ,QAAAR,EAAAS,UAAA,EAAAnY,IACG,SAAApM,EAAAO,GACH,OAAAA,EAAAP,GAAAO,EAAAmkB,oBAAA1kB,EAAA0kB,qBAAAC,GAAAC,IA6FA,QAAAC,GAAAn3B,GACA,MAAA+1B,GAAA,SAAAK,GACAA,EAAAgB,WAAAhB,EAAAiB,cAAAjB,EAAAkB,YAAA,EAAAt3B,GAAA,GACAo2B,EAAAmB,YAAA,UACG,SAAAnB,EAAA1X,GACH0X,EAAAgB,WAAAhB,EAAAiB,aAAA,EAAA3Y,IACG,SAAApM,EAAAO,GACH,OAAAA,EAAAP,GAAA4kB,IAzPA,GAAA9P,GAAA,GAAAiP,MACA/O,EAAA,GAAA+O,MA6DAmB,EAAAzB,EAAA,aAEC,SAAAK,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,IACC,SAAApM,EAAAO,GACD,MAAAA,GAAAP,GAIAklB,GAAAd,MAAA,SAAArnB,GAEA,MADAA,GAAAwO,KAAAgB,MAAAxP,GACAyS,SAAAzS,MAAA,EACAA,EAAA,EACA0mB,EAAA,SAAAK,GACAA,EAAAK,QAAA5Y,KAAAgB,MAAAuX,EAAA/mB,OACG,SAAA+mB,EAAA1X,GACH0X,EAAAK,SAAAL,EAAA1X,EAAArP,IACG,SAAAiD,EAAAO,GACH,OAAAA,EAAAP,GAAAjD,IANAmoB,EADA,KAWA,IAAAC,GAAAD,EAAAvZ,MAEAyZ,EAAA,IACAT,EAAA,IACAU,EAAA,KACAC,EAAA,MACAV,EAAA,OAEAW,EAAA9B,EAAA,SAAAK,GACAA,EAAAK,QAAA5Y,KAAAgB,MAAAuX,EAAAsB,OACC,SAAAtB,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,EAAAgZ,IACC,SAAAplB,EAAAO,GACD,OAAAA,EAAAP,GAAAolB,GACC,SAAAtB,GACD,MAAAA,GAAA0B,kBAGAC,EAAAF,EAAA5Z,MAEA+Z,EAAAjC,EAAA,SAAAK,GACAA,EAAAK,QAAA5Y,KAAAgB,MAAAuX,EAAAa,OACC,SAAAb,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,EAAAuY,IACC,SAAA3kB,EAAAO,GACD,OAAAA,EAAAP,GAAA2kB,GACC,SAAAb,GACD,MAAAA,GAAA6B,eAGAC,EAAAF,EAAA/Z,MAEAka,EAAApC,EAAA,SAAAK,GACA,GAAAI,GAAAJ,EAAAY,oBAAAC,EAAAU,CACAnB,GAAA,IAAAA,GAAAmB,GACAvB,EAAAK,QAAA5Y,KAAAgB,QAAAuX,EAAAI,GAAAmB,KAAAnB,IACC,SAAAJ,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,EAAAiZ,IACC,SAAArlB,EAAAO,GACD,OAAAA,EAAAP,GAAAqlB,GACC,SAAAvB,GACD,MAAAA,GAAAgC,aAGAC,EAAAF,EAAAla,MAEAqa,EAAAvC,EAAA,SAAAK,GACAA,EAAAW,SAAA,UACC,SAAAX,EAAA1X,GACD0X,EAAAQ,QAAAR,EAAAS,UAAAnY,IACC,SAAApM,EAAAO,GACD,OAAAA,EAAAP,GAAAO,EAAAmkB,oBAAA1kB,EAAA0kB,qBAAAC,GAAAW,GACC,SAAAxB,GACD,MAAAA,GAAAS,UAAA,IAGA0B,EAAAD,EAAAra,MAaAua,EAAA7B,EAAA,GACA8B,EAAA9B,EAAA,GACA+B,EAAA/B,EAAA,GACAgC,EAAAhC,EAAA,GACAiC,EAAAjC,EAAA,GACAkC,EAAAlC,EAAA,GACAmC,EAAAnC,EAAA,GAEAoC,EAAAP,EAAAva,MACA+a,EAAAP,EAAAxa,MACAgb,EAAAP,EAAAza,MACAib,EAAAP,EAAA1a,MACAkb,EAAAP,EAAA3a,MACAmb,EAAAP,EAAA5a,MACAob,EAAAP,EAAA7a,MAEAqb,EAAAvD,EAAA,SAAAK,GACAA,EAAAQ,QAAA,GACAR,EAAAW,SAAA,UACC,SAAAX,EAAA1X,GACD0X,EAAAmD,SAAAnD,EAAAoD,WAAA9a,IACC,SAAApM,EAAAO,GACD,MAAAA,GAAA2mB,WAAAlnB,EAAAknB,WAAA,IAAA3mB,EAAA4mB,cAAAnnB,EAAAmnB,gBACC,SAAArD,GACD,MAAAA,GAAAoD,aAGAE,EAAAJ,EAAArb,MAEA0b,EAAA5D,EAAA,SAAAK,GACAA,EAAAmD,SAAA,KACAnD,EAAAW,SAAA,UACC,SAAAX,EAAA1X,GACD0X,EAAAwD,YAAAxD,EAAAqD,cAAA/a,IACC,SAAApM,EAAAO,GACD,MAAAA,GAAA4mB,cAAAnnB,EAAAmnB,eACC,SAAArD,GACD,MAAAA,GAAAqD,eAIAE,GAAAjD,MAAA,SAAArnB,GACA,MAAAyS,UAAAzS,EAAAwO,KAAAgB,MAAAxP,OAAA,EAAA0mB,EAAA,SAAAK,GACAA,EAAAwD,YAAA/b,KAAAgB,MAAAuX,EAAAqD,cAAApqB,MACA+mB,EAAAmD,SAAA,KACAnD,EAAAW,SAAA,UACG,SAAAX,EAAA1X,GACH0X,EAAAwD,YAAAxD,EAAAqD,cAAA/a,EAAArP,KALA,KASA,IAAAwqB,GAAAF,EAAA1b,MAEA6b,EAAA/D,EAAA,SAAAK,GACAA,EAAA2D,cAAA,MACC,SAAA3D,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,EAAAuY,IACC,SAAA3kB,EAAAO,GACD,OAAAA,EAAAP,GAAA2kB,GACC,SAAAb,GACD,MAAAA,GAAA4D,kBAGAC,EAAAH,EAAA7b,MAEAic,EAAAnE,EAAA,SAAAK,GACAA,EAAA+D,cAAA,QACC,SAAA/D,EAAA1X,GACD0X,EAAAK,SAAAL,EAAA1X,EAAAiZ,IACC,SAAArlB,EAAAO,GACD,OAAAA,EAAAP,GAAAqlB,GACC,SAAAvB,GACD,MAAAA,GAAAgE,gBAGAC,EAAAH,EAAAjc,MAEAqc,EAAAvE,EAAA,SAAAK,GACAA,EAAAmB,YAAA,UACC,SAAAnB,EAAA1X,GACD0X,EAAAgB,WAAAhB,EAAAiB,aAAA3Y,IACC,SAAApM,EAAAO,GACD,OAAAA,EAAAP,GAAAslB,GACC,SAAAxB,GACD,MAAAA,GAAAiB,aAAA,IAGAkD,EAAAD,EAAArc,MAaAuc,EAAArD,EAAA,GACAsD,EAAAtD,EAAA,GACAuD,EAAAvD,EAAA,GACAwD,EAAAxD,EAAA,GACAyD,EAAAzD,EAAA,GACA0D,EAAA1D,EAAA,GACA2D,EAAA3D,EAAA,GAEA4D,EAAAP,EAAAvc,MACA+c,EAAAP,EAAAxc,MACAgd,GAAAP,EAAAzc,MACAid,GAAAP,EAAA1c,MACAkd,GAAAP,EAAA3c,MACAmd,GAAAP,EAAA5c,MACAod,GAAAP,EAAA7c,MAEAqd,GAAAvF,EAAA,SAAAK,GACAA,EAAAgB,WAAA,GACAhB,EAAAmB,YAAA,UACC,SAAAnB,EAAA1X,GACD0X,EAAAmF,YAAAnF,EAAAoF,cAAA9c,IACC,SAAApM,EAAAO,GACD,MAAAA,GAAA2oB,cAAAlpB,EAAAkpB,cAAA,IAAA3oB,EAAA4oB,iBAAAnpB,EAAAmpB,mBACC,SAAArF,GACD,MAAAA,GAAAoF,gBAGAE,GAAAJ,GAAArd,MAEA0d,GAAA5F,EAAA,SAAAK,GACAA,EAAAmF,YAAA,KACAnF,EAAAmB,YAAA,UACC,SAAAnB,EAAA1X,GACD0X,EAAAwF,eAAAxF,EAAAqF,iBAAA/c,IACC,SAAApM,EAAAO,GACD,MAAAA,GAAA4oB,iBAAAnpB,EAAAmpB,kBACC,SAAArF,GACD,MAAAA,GAAAqF,kBAIAE,IAAAjF,MAAA,SAAArnB,GACA,MAAAyS,UAAAzS,EAAAwO,KAAAgB,MAAAxP,OAAA,EAAA0mB,EAAA,SAAAK,GACAA,EAAAwF,eAAA/d,KAAAgB,MAAAuX,EAAAqF,iBAAApsB,MACA+mB,EAAAmF,YAAA,KACAnF,EAAAmB,YAAA,UACG,SAAAnB,EAAA1X,GACH0X,EAAAwF,eAAAxF,EAAAqF,iBAAA/c,EAAArP,KALA,KASA,IAAAwsB,IAAAF,GAAA1d,KAEA/kB,GAAA4iC,aAAA/F,EACA78B,EAAA6iC,gBAAAvE,EACAt+B,EAAA8iC,iBAAAvE,EACAv+B,EAAA+iC,eAAAzE,EACAt+B,EAAAgjC,gBAAAzE,EACAv+B,EAAAijC,WAAAtE,EACA3+B,EAAAkjC,YAAArE,EACA7+B,EAAAmjC,UAAAxE,EACA3+B,EAAAojC,WAAAvE,EACA7+B,EAAAqjC,WAAAvE,EACA9+B,EAAAsjC,YAAAtE,EACAh/B,EAAAujC,SAAAtE,EACAj/B,EAAAwjC,UAAArE,EACAn/B,EAAAyjC,QAAArE,EACAp/B,EAAA0jC,SAAArE,EACAr/B,EAAA2jC,SAAArE,EACAt/B,EAAA4jC,UAAA/D,EACA7/B,EAAA6jC,WAAAvE,EACAt/B,EAAA8jC,YAAAjE,EACA7/B,EAAA+jC,WAAAxE,EACAv/B,EAAAgkC,YAAAlE,EACA9/B,EAAAikC,YAAAzE,EACAx/B,EAAAkkC,aAAAnE,EACA//B,EAAAmkC,cAAA1E,EACAz/B,EAAAokC,eAAApE,EACAhgC,EAAAqkC,aAAA3E,EACA1/B,EAAAskC,cAAArE,EACAjgC,EAAAukC,WAAA5E,EACA3/B,EAAAwkC,YAAAtE,EACAlgC,EAAAykC,aAAA7E,EACA5/B,EAAA0kC,cAAAvE,EACAngC,EAAA2kC,UAAAvE,EACApgC,EAAA4kC,WAAApE,EACAxgC,EAAA6kC,SAAApE,EACAzgC,EAAA8kC,UAAAnE,EACA3gC,EAAA4gC,YACA5gC,EAAA+gC,aACA/gC,EAAAghC,UACAhhC,EAAAmhC,WACAnhC,EAAAohC,SACAphC,EAAAqhC,UACArhC,EAAA+kC,QAAAzD,EACAthC,EAAAglC,SAAAnD,EACA7hC,EAAAshC,YACAthC,EAAA6hC,aACA7hC,EAAAuhC,YACAvhC,EAAA8hC,aACA9hC,EAAAwhC,aACAxhC,EAAA+hC,eACA/hC,EAAAyhC,eACAzhC,EAAAgiC,iBACAhiC,EAAA0hC,cACA1hC,EAAAiiC,gBACAjiC,EAAA2hC,YACA3hC,EAAAkiC,cACAliC,EAAA4hC,cACA5hC,EAAAmiC,gBACAniC,EAAAoiC,YACApiC,EAAAwiC,aACAxiC,EAAAyiC,WACAziC,EAAA2iC,YAEA5gC,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,OVy9IxC,SAAUZ,EAAQD,EAASH,IAEJ,SAASW,GAAO,YAM5C,SAASykC,GAAuBrjC,GAAO,MAAOA,IAAOA,EAAIsgB,WAAatgB,GAAQwgB,QAASxgB,GWx1JxF,GAAAsjC,GAAArlC,EAAA,GXs1JKslC,EAAcF,EAAuBC,EWp1J1C1kC,GAAKigB,KAAK,uBAAwB,wOAAyO,GAAI,uBAAwB,SAASzV,GAE9SrK,KAAK+nB,MAAQyc,EAAA/iB,QAASgjB,YAAYh2B,IAAI,SAAAi2B,GACpC,OACE/Z,OAAO,EAAA6Z,EAAA/iB,SAASijB,GAChBxkC,MAAO8jB,KAAKC,MAAMygB,UX41JMjlC,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,YAkB5C,SAASykC,GAAuBrjC,GAAO,MAAOA,IAAOA,EAAIsgB,WAAatgB,GAAQwgB,QAASxgB,GAEvF,QAASqgB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EY73JnQ,GAAAM,GAAA5iB,EAAA,GAAYujB,EZ62JFnB,EAAwBQ,GY52JlC6iB,EAAAzlC,EAAA,IZg3JK0lC,EAAeN,EAAuBK,GY/2J3CE,EAAA3lC,EAAA,IZm3JK4lC,EAAiBR,EAAuBO,GYl3J7CE,EAAA7lC,EAAA,GZs3JK8lC,EAAmBV,EAAuBS,EYp3J/CllC,GAAKigB,KAAK,gBAAiB,0aAA6a,GAAI,mDAAoD,SAASzV,GAAM,GAAA46B,GAAAjlC,IAE7gBA,MAAKklC,QACH3hB,EAAG,SACH7jB,EAAG,UAGLM,KAAKse,GAAG,QAAS,WACf2mB,EAAKE,WAAY,EAAAP,EAAAnjB,UACf2jB,QAAS3iB,EAAGlS,OAAH,eAAyB00B,EAAK56B,KAAKg7B,QAC5CA,OAAQJ,EAAK56B,KAAKg7B,OAClBC,SAAUL,EAAKK,aAInBzlC,EAAK0lC,QAAQjnB,GAAGze,EAAK2lC,IAAIC,QAAS,SAAAlmC,GAAA,MAAM0lC,GAAK5gB,WAAY,EAAAygB,EAAArjB,SAAQwjB,EAAKE,UAAW5lC,EAAI0lC,EAAK5gB,aAC1FxkB,EAAK0lC,QAAQjnB,GAAGze,EAAK2lC,IAAIE,UAAW,kBAAM,EAAAV,EAAAvjB,SAAUwjB,EAAK5gB,iBZi4J7B5kB,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,Ya55J7CX,GAAA,IACAA,EAAA,IACAA,EAAA,IACAA,EAAA,IAEAW,EAAKigB,KAAK,mBAAoB,sYAAuY,GAAI,wCAAyC,SAASzV,Qbk6J7b5K,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,Yc76J7CA,GAAKigB,KAAK,cAAe,syCAAuyC,GAAI,uDAAwD,SAASzV,GAAM,GAAA46B,GAAAjlC,IAEz4CA,MAAK2lC,SAAU,EACf3lC,KAAKsU,QAELzU,EAAK0lC,QAAQjnB,GAAGze,EAAK2lC,IAAII,cAAe,SAAAtxB,GACtC2wB,EAAK18B,QACH+L,OACAqxB,SAAS,MAIb9lC,EAAK0lC,QAAQjnB,GAAGze,EAAK2lC,IAAIK,YAAa,WACpCZ,EAAK18B,QAAQo9B,SAAS,MAGxB3lC,KAAK8lC,MAAQ,iBAAMb,GAAK18B,QAAQo9B,SAAS,Sdo7JblmC,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,Ye18J7C,IAAA6jB,GAAAxkB,EAAA,EAEAW,GAAKigB,KAAK,iBAAkB,qIAAsI,GAAI,uBAAwB,SAASzV,GAAM,GAAA46B,GAAAjlC,IAE3MA,MAAKyM,MAAQiX,EAAApP,KAAK4U,KAAK,SAAClf,EAAG2Q,GAAJ,MAAU3Q,GAAEoZ,WAAapZ,EAAEtH,KAAOiY,EAAEyI,WAAazI,EAAEjY,KAAO,GAAI,IAErF1C,KAAK+lC,OAAS,SAAAv+B,GACZ,GAAM8M,GAAO2wB,EAAKx4B,MAAMjF,EAAEK,OAAO3H,MACjC+kC,GAAKt9B,OAAOo+B,OAAOzxB,Qfk9JO7U,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,YgBh+J7CX,GAAA,IACAA,EAAA,IAEAW,EAAKigB,KAAK,0BAA2B,2OAA4O,GAAI,uBAAwB,SAASzV,GAAM,GAAA46B,GAAAjlC,IAE1TA,MAAKgmC,cAAe,EACpBhmC,KAAKimC,eAAgB,EACrBjmC,KAAKkmC,eAAiB,iBAAMjB,GAAK18B,QAC/By9B,cAAef,EAAKe,aACpBC,eAAgBhB,EAAKgB,iBAGvBjmC,KAAK+lC,OAAS,SAAAzxB,GACZzU,EAAK0lC,QAAQ5wB,QAAQ9U,EAAK2lC,IAAII,cAAetxB,GAC7CzU,EAAK0lC,QAAQ5wB,QAAQ9U,EAAK2lC,IAAIC,QAASnxB,EAAKsP,MAG9C5jB,KAAKmmC,cAAgB,iBAAMlB,GAAKgB,cAAgB,4BAA8B,yBhB0+JlDxmC,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IAEJ,SAASW,GAAO,YiBjgK7C,IAAA6jB,GAAAxkB,EAAA,EAEAW,GAAKigB,KAAK,gBAAiB,sXAAuX,GAAI,uBAAwB,SAASzV,GAAM,GAAA46B,GAAAjlC,IAE3bA,MAAKomC,WAELpmC,KAAKqmC,SAAW,SAAA7+B,GACd3H,EAAK0lC,QAAQ5wB,QAAQ9U,EAAK2lC,IAAIK,YAC9B,IAAMp/B,GAAMe,EAAEK,OAAO3H,MAAMuF,aACvBgB,GAAIP,OAAS,EAAG++B,EAAK18B,QAAQ69B,SAAS,EAAA1iB,EAAAL,QAAO5c,KAC5Cw+B,EAAKqB,gBAGZtmC,KAAKumC,YAAc,SAAA/+B,GACjBy9B,EAAKqB,eACLrB,EAAKt9B,OAAOo+B,OAAOv+B,EAAElB,OAGvBtG,KAAKsmC,aAAe,WAClBrB,EAAK18B,QAAQ69B,cAGfvmC,EAAK0lC,QAAQjnB,GAAGze,EAAK2lC,IAAIc,aAAc,WACrCrB,EAAKqB,qBjBsgKqB7mC,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,GAEhC,YAUA,SAASolC,GAAuBrjC,GAAO,MAAOA,IAAOA,EAAIsgB,WAAatgB,GAAQwgB,QAASxgB,GARvFG,OAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,GkBtiKV,IAAA6kC,GAAA7lC,EAAA,GlB2iKK8lC,EAAmBV,EAAuBS,EAI9C1lC,GAAQoiB,QkB7iKM,SAAC0jB,EAAW5lC,EAAI8kB,GAC7BA,IAAa,EAAA2gB,EAAAvjB,SAAU4C,EACvB,IAAMmiB,GAAOrB,EAAU50B,OAAO,SAAS0S,GACrC,MAAOA,GAAE1jB,KAAOA,GAAMS,MAIxB,OAFAwmC,GAAKnjC,OAAOgC,WAAW5B,YAAY+iC,EAAKnjC,QACxCmjC,EAAKliB,QAAQ,YAAY,GAClBkiB,IlBkjKH,SAAUlnC,EAAQD,EAASH,IAEJ,SAASW,GAAO,YAgB5C,SAASykC,GAAuBrjC,GAAO,MAAOA,IAAOA,EAAIsgB,WAAatgB,GAAQwgB,QAASxgB,GAEvF,QAASqgB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EAhBlQpgB,OAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,GmBhkKV,IAAA4hB,GAAA5iB,EAAA,GAAYujB,EnBqkKFnB,EAAwBQ,GmBpkKlC4B,EAAAxkB,EAAA,GACAqlC,EAAArlC,EAAA,GnBykKKslC,EAAcF,EAAuBC,EAMzCllC,GAAQoiB,QmB7kKM,SAAAglB,GAKT,GAJJrB,GAIIqB,EAJJrB,QAEAE,GAEImB,EAHJC,SAGID,EAFJnB,UACAD,EACIoB,EADJpB,OAGM/wB,YACAkyB,EAAO/jB,EAAGvB,UAAUylB,WAAWlkB,EAAGtB,cAAcylB,SAAS,IAAK,KAAMtyB,GAE1E,OAAO8wB,GAAQ93B,OAAO,OACjBrC,KAAK,QAASq6B,EAAS,QACvBr6B,KAAK,sBAAuB,iBAC5BA,KAAK,UAAW,eAClBqC,OAAO,KACPu5B,UAAU,QAAQvyB,KAAKA,EAAKgP,UAAUwjB,QAAQx5B,OAAO,QACnDrC,KAAK,QAASq6B,EAAS,SACvBr6B,KAAK,IAAKu7B,GACVv7B,KAAK,OAAQ,SAAAgY,GAAA,OAAK,EAAAuhB,EAAA/iB,UAAUwB,EAAEO,WAAc6hB,EAAhB,YAC5B/mB,GAAG,YAAa,SAAA2E,GACfpjB,EAAK0lC,QAAQ5wB,QAAQ9U,EAAK2lC,IAAIC,QAASxiB,EAAE1jB,IACzCM,EAAK0lC,QAAQ5wB,QAAQ9U,EAAK2lC,IAAII,cAAe3iB,EAAEO,iBnBykKzB/jB,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IoBtmKjC,SAAAW,GAAA,YpB0nKC,SAASykC,GAAuBrjC,GAAO,MAAOA,IAAOA,EAAIsgB,WAAatgB,GAAQwgB,QAASxgB,GoBnnKxF/B,EAAA,IAGAA,EAAA,GAYA,IAAA6nC,GAAA7nC,EAAA,IpB0lKK8nC,EAAe1C,EAAuByC,GoBzlK3CE,EAAA/nC,EAAA,IpB6lKKgoC,EAAkB5C,EAAuB2C,EoBxlK9C/nC,GAAA,GAGA,IAAA4iB,GAAA5iB,EAAA,GAlBMioC,EAASjoC,EAAQ,GAWvBW,GAAK+V,OAAM,EAAAoxB,EAAAvlB,SAAS0lB,EAAOrnC,OAAOsnC,eAClCvnC,EAAK+V,MAALsxB,EAAAzlB,QAQA,IAAMxX,GAAQ,SAACvH,GACb,GAAMhB,wBAAgCgB,EAAhC,MACN,EAAAof,EAAAvR,QAAO7O,GAAU2B,QAAUxD,EAAKoK,MAAMvI,EAAUgB,GAGlDuH,GAAM,sBpB4nKwBxK,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,GAEvB,YAEA+B,QAAO0F,eAAezH,EAAS,cAC7Ba,OAAO,IAeTb,EAAQoiB,QqB9qKM,SAAA2lB,GACb,OACE9B,SAAU,SAAS5iC,EAAM2kC,GACvB,GAAM59B,GAAMzJ,KAAKqK,KAAKZ,IAChB69B,IAAO79B,GAAS29B,EAAT,IAAyB39B,EAChC89B,EAAS7kC,EACb4kC,EAAUA,EAAV,KAAmB5kC,EAAY0kC,EAA/B,IAA+C1kC,EAC7C4kC,CACJ,OAAOD,GAAcE,EAAd,IAAwBA,EAAxB,KAAmCF,EAAaE,MrBmrKvD,SAAUjoC,EAAQD,EAASH,GAEhC,YAMA,SAASoiB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EsB9sKnQ,GAAAM,GAAA5iB,EAAA,GAAYujB,EtB4sKFnB,EAAwBQ,GsB1sK5B0lB,EAAM/kB,EAAGpB,cACb4Y,UAAW,IACXuB,QAAS,IACTxB,UAAW,KAGPpP,EAAS4c,EAAI5c,OAAO,IAE1BtrB,GAAOD,SAAWooC,GAAI,SAAAhjC,GAAA,MAAOA,IAAOmmB,EAAOnmB,MtBqtKrC,SAAUnF,EAAQD,EAASH,IAEJ,SAASW,GAAO,YAM5C,SAASyhB,GAAwBrgB,GAAO,GAAIA,GAAOA,EAAIsgB,WAAc,MAAOtgB,EAAc,IAAIugB,KAAa,IAAW,MAAPvgB,EAAe,IAAK,GAAIC,KAAOD,GAAWG,OAAOQ,UAAU0T,eAAe7V,KAAKwB,EAAKC,KAAMsgB,EAAOtgB,GAAOD,EAAIC,GAAgC,OAAtBsgB,GAAOC,QAAUxgB,EAAYugB,EuBxuKnQ,GAAAM,GAAA5iB,EAAA,GASMmvB,GvB6tKI/M,EAAwBQ,IuB5tKhC8jB,cAAe,MACfC,YAAa,MACbS,aAAc,KAGdb,QAAS,KACTC,UAAW,KACXM,aAAc,OAIV1X,EAAIzuB,EAAK6gB,YAcf7gB,GAAK2lC,IAAMnX,EACXxuB,EAAK0lC,QAAUjX,IvBwuKe7uB,KAAKJ,EAASH,EAAoB,KAI1D,SAAUI,EAAQD,EAASH,IwB/wKjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAI7B,SAAAqoC,MAkDA,QAAAj5B,GAAAk5B,EAAApkB,GACA,GAAA9U,GAAA,GAAAi5B,EAGA,IAAAC,YAAAD,GAAAC,EAAA5hC,KAAA,SAAA7F,EAAAgB,GAA+DuN,EAAA4G,IAAAnU,EAAAhB,SAG/D,IAAAa,MAAAD,QAAA6mC,GAAA,CACA,GAEApxB,GAFApQ,GAAA,EACAmgB,EAAAqhB,EAAAzhC,MAGA,UAAAqd,EAAA,OAAApd,EAAAmgB,GAAA7X,EAAA4G,IAAAlP,EAAAwhC,EAAAxhC,QACA,QAAAA,EAAAmgB,GAAA7X,EAAA4G,IAAAkO,EAAAhN,EAAAoxB,EAAAxhC,KAAAwhC,GAAApxB,OAIA,IAAAoxB,EAAA,OAAAzmC,KAAAymC,GAAAl5B,EAAA4G,IAAAnU,EAAAymC,EAAAzmC,GAEA,OAAAuN,GA2DA,QAAAm5B,KACA,SAGA,QAAAC,GAAAF,EAAAzmC,EAAAhB,GACAynC,EAAAzmC,GAAAhB,EAGA,QAAA4nC,KACA,MAAAr5B,KAGA,QAAAs5B,GAAAC,EAAA9mC,EAAAhB,GACA8nC,EAAA3yB,IAAAnU,EAAAhB,GAGA,QAAA+nC,MAoBA,QAAA5yB,GAAAsyB,EAAApkB,GACA,GAAAlO,GAAA,GAAA4yB,EAGA,IAAAN,YAAAM,GAAAN,EAAA5hC,KAAA,SAAA7F,GAA0DmV,EAAAlD,IAAAjS,SAG1D,IAAAynC,EAAA,CACA,GAAAxhC,IAAA,EAAAmgB,EAAAqhB,EAAAzhC,MACA,UAAAqd,EAAA,OAAApd,EAAAmgB,GAAAjR,EAAAlD,IAAAw1B,EAAAxhC,QACA,QAAAA,EAAAmgB,GAAAjR,EAAAlD,IAAAoR,EAAAokB,EAAAxhC,KAAAwhC,IAGA,MAAAtyB,GAnLA,GAAA4lB,GAAA,GAIAyM,GAAA9lC,UAAA6M,EAAA7M,WACAmQ,YAAA21B,EACAQ,IAAA,SAAAhnC,GACA,MAAA+5B,GAAA/5B,IAAAlB,OAEAoV,IAAA,SAAAlU,GACA,MAAAlB,MAAAi7B,EAAA/5B,IAEAmU,IAAA,SAAAnU,EAAAhB,GAEA,MADAF,MAAAi7B,EAAA/5B,GAAAhB,EACAF,MAEA2M,OAAA,SAAAzL,GACA,GAAAinC,GAAAlN,EAAA/5B,CACA,OAAAinC,KAAAnoC,mBAAAmoC,IAEAC,MAAA,WACA,OAAAD,KAAAnoC,MAAAmoC,EAAA,KAAAlN,SAAAj7B,MAAAmoC,IAEAjkC,KAAA,WACA,GAAAA,KACA,QAAAikC,KAAAnoC,MAAAmoC,EAAA,KAAAlN,GAAA/2B,EAAA6E,KAAAo/B,EAAAtmC,MAAA,GACA,OAAAqC,IAEA6iB,OAAA,WACA,GAAAA,KACA,QAAAohB,KAAAnoC,MAAAmoC,EAAA,KAAAlN,GAAAlU,EAAAhe,KAAA/I,KAAAmoC,GACA,OAAAphB,IAEAshB,QAAA,WACA,GAAAA,KACA,QAAAF,KAAAnoC,MAAAmoC,EAAA,KAAAlN,GAAAoN,EAAAt/B,MAAyE7H,IAAAinC,EAAAtmC,MAAA,GAAA3B,MAAAF,KAAAmoC,IACzE,OAAAE,IAEAC,KAAA,WACA,GAAAA,GAAA,CACA,QAAAH,KAAAnoC,MAAAmoC,EAAA,KAAAlN,KAAAqN,CACA,OAAAA,IAEAC,MAAA,WACA,OAAAJ,KAAAnoC,MAAA,GAAAmoC,EAAA,KAAAlN,EAAA,QACA,WAEAl1B,KAAA,SAAAwd,GACA,OAAA4kB,KAAAnoC,MAAAmoC,EAAA,KAAAlN,GAAA1X,EAAAvjB,KAAAmoC,KAAAtmC,MAAA,GAAA7B,OA0BA,IAAAwoC,GAAA,WAOA,QAAA57B,GAAAvG,EAAAoiC,EAAAC,EAAAC,GACA,GAAAF,GAAAvkC,EAAAgC,OAAA,aAAA0iC,EACAA,EAAAviC,GAAA,MAAAwiC,EACAxiC,EAAA6iB,KAAA2f,GACAxiC,CAWA,KATA,GAGAyiC,GACA5oC,EAEA6mB,EANA5gB,GAAA,EACAmgB,EAAAjgB,EAAAH,OACAhF,EAAAgD,EAAAukC,KAGAM,EAAAt6B,IAEAu6B,EAAAN,MAEAviC,EAAAmgB,IACAS,EAAAgiB,EAAA3zB,IAAA0zB,EAAA5nC,EAAAhB,EAAAmG,EAAAF,IAAA,KACA4gB,EAAAhe,KAAA7I,GAEA6oC,EAAA1zB,IAAAyzB,GAAA5oC,GAQA,OAJA6oC,GAAAhjC,KAAA,SAAAghB,EAAA7lB,GACAynC,EAAAK,EAAA9nC,EAAA0L,EAAAma,EAAA0hB,EAAAC,EAAAC,MAGAK,EAGA,QAAAX,GAAAL,EAAAS,GACA,KAAAA,EAAAvkC,EAAAgC,OAAA,MAAA8hC,EACA,IAAA3hC,GAAA4iC,EAAAC,EAAAT,EAAA,EAGA,OAFA,OAAAG,GAAAH,GAAAvkC,EAAAgC,OAAAG,EAAA2hC,EAAAK,WACAhiC,KAAA2hC,EAAAjiC,KAAA,SAAA0P,EAAAD,GAAiDnP,EAAA0C,MAAa7H,IAAAsU,EAAAuR,OAAAshB,EAAA5yB,EAAAgzB,QAC9D,MAAAQ,EAAA5iC,EAAA6iB,KAAA,SAAAlf,EAAA2Q,GAAwD,MAAAsuB,GAAAj/B,EAAA9I,IAAAyZ,EAAAzZ,OAAgCmF,EAzCxF,GAEAwiC,GACAD,EACAJ,EAJAtkC,KACAglC,IA2CA,OAAAV,IACAb,OAAA,SAAAthC,GAA6B,MAAAuG,GAAAvG,EAAA,EAAAuhC,EAAAC,IAC7Bp5B,IAAA,SAAApI,GAA0B,MAAAuG,GAAAvG,EAAA,EAAAyhC,EAAAC,IAC1BM,QAAA,SAAAhiC,GAA8B,MAAAgiC,GAAAz7B,EAAAvG,EAAA,EAAAyhC,EAAAC,GAAA,IAC9B7mC,IAAA,SAAA+hB,GAAoC,MAAd/e,GAAA6E,KAAAka,GAAculB,GACpCU,SAAA,SAAAC,GAAkE,MAAnCD,GAAAhlC,EAAAgC,OAAA,GAAAijC,EAAmCX,GAClEK,WAAA,SAAAM,GAAqD,MAApBN,GAAAM,EAAoBX,GACrDI,OAAA,SAAArlB,GAAqC,MAAZqlB,GAAArlB,EAAYilB,KAsBrCzzB,EAAAtG,EAAA7M,SAEAqmC,GAAArmC,UAAAyT,EAAAzT,WACAmQ,YAAAk2B,EACAC,IAAAnzB,EAAAmzB,IACA/1B,IAAA,SAAAjS,GAGA,MAFAA,IAAA,GACAF,KAAAi7B,EAAA/6B,KACAF,MAEA2M,OAAAoI,EAAApI,OACAy7B,MAAArzB,EAAAqzB,MACArhB,OAAAhS,EAAA7Q,KACAokC,KAAAvzB,EAAAuzB,KACAC,MAAAxzB,EAAAwzB,MACAxiC,KAAAgP,EAAAhP,KAmBA,IAAA7B,GAAA,SAAAuK,GACA,GAAAvK,KACA,QAAAhD,KAAAuN,GAAAvK,EAAA6E,KAAA7H,EACA,OAAAgD,IAGA6iB,EAAA,SAAAtY,GACA,GAAAsY,KACA,QAAA7lB,KAAAuN,GAAAsY,EAAAhe,KAAA0F,EAAAvN,GACA,OAAA6lB,IAGAshB,EAAA,SAAA55B,GACA,GAAA45B,KACA,QAAAnnC,KAAAuN,GAAA45B,EAAAt/B,MAAqC7H,MAAAhB,MAAAuO,EAAAvN,IACrC,OAAAmnC,GAGAhpC,GAAAmpC,OACAnpC,EAAAgW,MACAhW,EAAAoP,MACApP,EAAA6E,OACA7E,EAAA0nB,SACA1nB,EAAAgpC,UAEAjnC,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,OxByxKxC,SAAUZ,EAAQD,EAASH,IyB9+KjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAE7B,SAAA+pC,GAAAC,GACA,UAAAxsB,UAAA,eAAoCwsB,EAAA56B,IAAA,SAAA/L,EAAAyD,GACpC,MAAAuF,MAAAC,UAAAjJ,GAAA,OAAAyD,EAAA,MACGgS,KAAA,UAGH,QAAAmxB,GAAAD,EAAA9lB,GACA,GAAAokB,GAAAyB,EAAAC,EACA,iBAAAlf,EAAAhkB,GACA,MAAAod,GAAAokB,EAAAxd,GAAAhkB,EAAAkjC,IAKA,QAAAE,GAAAC,GACA,GAAAC,GAAAroC,OAAAqK,OAAA,MACA49B,IAUA,OARAG,GAAAxzB,QAAA,SAAAmU,GACA,OAAAuf,KAAAvf,GACAuf,IAAAD,IACAJ,EAAAtgC,KAAA0gC,EAAAC,QAKAL,EAGA,GAAAM,GAAA,SAAAC,GAIA,QAAAC,GAAA74B,EAAAuS,GACA,GAAAumB,GAAAT,EAAAG,EAAAO,EAAA/4B,EAAA,SAAAmZ,EAAAhkB,GACA,MAAA2jC,KAAA3f,EAAAhkB,EAAA,IACAkjC,EAAAlf,OAAA2f,EAAAvmB,EAAA+lB,EAAAnf,EAAA5G,GAAA6lB,EAAAjf,MAGA,OADAqf,GAAAH,UACAG,EAGA,QAAAO,GAAA/4B,EAAAuS,GAUA,QAAAymB,KACA,GAAAC,GAAAC,EAAA,MAAAC,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CAGA,IAAA1qC,GAAA+M,EAAAu9B,CACA,SAAAj5B,EAAAuqB,WAAA7uB,GAAA,CAEA,IADA,GAAAvG,GAAAuG,EACAvG,IAAA+jC,GACA,QAAAl5B,EAAAuqB,WAAAp1B,GAAA,CACA,QAAA6K,EAAAuqB,WAAAp1B,EAAA,WACAA,EAWA,MARA8jC,GAAA9jC,EAAA,EACAxG,EAAAqR,EAAAuqB,WAAAp1B,EAAA,GACA,KAAAxG,GACAyqC,GAAA,EACA,KAAAp5B,EAAAuqB,WAAAp1B,EAAA,MAAA8jC,GACS,KAAAtqC,IACTyqC,GAAA,GAEAp5B,EAAAnP,MAAA6K,EAAA,EAAAvG,GAAAO,QAAA,WAIA,KAAAujC,EAAAC,GAAA,CACA,GAAA10B,GAAA,CAEA,IADA7V,EAAAqR,EAAAuqB,WAAA0O,KACA,KAAAtqC,EAAAyqC,GAAA,MACA,SAAAzqC,EAA4ByqC,GAAA,EAAY,KAAAp5B,EAAAuqB,WAAA0O,WAAAz0B,OACxC,IAAA7V,IAAA2qC,EAAA,QACA,OAAAt5B,GAAAnP,MAAA6K,EAAAu9B,EAAAz0B;CAIA,MAAAxE,GAAAnP,MAAA6K,GAGA,IAhDA,GAMA0C,GACAg7B,EAPAC,KACAF,KACAX,KACAU,EAAAl5B,EAAA9K,OACA+jC,EAAA,EACA3jB,EAAA,GA2CAlX,EAAA46B,OAAAG,GAAA,CAEA,IADA,GAAAngC,MACAoF,IAAAi7B,GAAAj7B,IAAA+6B,GACAngC,EAAAjB,KAAAqG,GACAA,EAAA46B,GAEAzmB,IAAA,OAAAvZ,EAAAuZ,EAAAvZ,EAAAsc,OACAkjB,EAAAzgC,KAAAiB,GAGA,MAAAw/B,GAGA,QAAA5e,GAAA4e,EAAAH,GAEA,MADA,OAAAA,MAAAE,EAAAC,KACAH,EAAA56B,IAAA87B,GAAApyB,KAAAyxB,IAAA30B,OAAAu0B,EAAA/6B,IAAA,SAAA0b,GACA,MAAAkf,GAAA56B,IAAA,SAAAi7B,GACA,MAAAa,GAAApgB,EAAAuf,MACOvxB,KAAAyxB,MACFzxB,KAAA,MAGL,QAAAqyB,GAAAhB,GACA,MAAAA,GAAA/6B,IAAAg8B,GAAAtyB,KAAA,MAGA,QAAAsyB,GAAAtgB,GACA,MAAAA,GAAA1b,IAAA87B,GAAApyB,KAAAyxB,GAGA,QAAAW,GAAAv5B,GACA,aAAAA,EAAA,GACA05B,EAAAtqC,KAAA4Q,GAAA,QAAAA,EAAAtK,QAAA,gBACAsK,EA9FA,GAAA05B,GAAA,GAAAhxB,QAAA,KAAAkwB,EAAA,SACAU,EAAAV,EAAArO,WAAA,EAgGA,QACAsO,QACAE,YACAnf,SACA4f,eAIAG,EAAAhB,EAAA,KAEA3oB,EAAA2pB,EAAAd,MACAe,EAAAD,EAAAZ,UACAc,EAAAF,EAAA/f,OACAkgB,EAAAH,EAAAH,WAEAO,EAAApB,EAAA,MAEAqB,EAAAD,EAAAlB,MACAoB,EAAAF,EAAAhB,UACAmB,EAAAH,EAAAngB,OACAugB,EAAAJ,EAAAP,UAEAnrC,GAAA+rC,UAAAzB,EACAtqC,EAAA2hB,WACA3hB,EAAAurC,eACAvrC,EAAAwrC,YACAxrC,EAAAyrC,gBACAzrC,EAAA2rC,WACA3rC,EAAA4rC,eACA5rC,EAAA6rC,YACA7rC,EAAA8rC,gBAEA/pC,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,OzBw/KxC,SAAUZ,EAAQD,EAASH,I0B7pLjC,SAAAY,EAAAC,GACAA,EAAAV,EAAAH,EAAA,KAGCc,KAAA,SAAAX,EAAAgsC,GAAoC,YAarC,SAAAC,KACAtrC,KAAAurC,QAsBA,QAAAp5B,GAAAq5B,EAAAxhC,EAAA2Q,GACA,GAAA6J,GAAAgnB,EAAAtyB,EAAAlP,EAAA2Q,EACA8wB,EAAAjnB,EAAAxa,EACA0hC,EAAAlnB,EAAAinB,CACAD,GAAAp8B,EAAApF,EAAA0hC,GAAA/wB,EAAA8wB,GA2BA,QAAAE,GAAAnnB,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAonB,GAAA5nB,KAAA2nB,KAAAnnB,GAGA,QAAAqnB,GAAArnB,GACA,MAAAA,GAAA,EAAAsnB,GAAAtnB,GAAA,GAAAsnB,GAAA9nB,KAAA6nB,KAAArnB,GAGA,QAAAunB,GAAAvnB,GACA,OAAAA,EAAAoI,GAAApI,EAAA,IAAAA,EAGA,QAAAwnB,MAEA,QAAAC,GAAAC,EAAAC,GACAD,GAAAE,GAAA92B,eAAA42B,EAAAx8B,OACA08B,GAAAF,EAAAx8B,MAAAw8B,EAAAC,GA8CA,QAAAE,GAAAC,EAAAH,EAAAI,GACA,GAAAC,GAAArmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,OAAAqmC,CAEA,KADAJ,EAAAM,cACAtmC,EAAAmgB,GAAAkmB,EAAAF,EAAAnmC,GAAAgmC,EAAAO,MAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAL,GAAAQ,UAGA,QAAAC,GAAAN,EAAAH,GACA,GAAAhmC,IAAA,EAAAmgB,EAAAgmB,EAAApmC,MAEA,KADAimC,EAAAU,iBACA1mC,EAAAmgB,GAAA+lB,EAAAC,EAAAnmC,GAAAgmC,EAAA,EACAA,GAAAW,aAuCA,QAAAC,KACAC,GAAAN,MAAAO,EAGA,QAAAC,KACAC,EAAAC,GAAAC,IAGA,QAAAJ,GAAAK,EAAAC,GACAP,GAAAN,MAAAS,EACAC,GAAAE,EAAAD,GAAAE,EACAD,GAAAE,GAAAD,GAAAC,GACAC,GAAAH,EAAAI,GAAA/gB,GAAA4gB,IAAA,EAAAI,IAAAC,GAAAhhB,GAAA2gB,GAGA,QAAAJ,GAAAG,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAD,IAAA,EAAAI,EAKA,IAAAE,GAAAP,EAAAG,GACAK,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAArhB,GAAA4gB,GACAU,EAAArhB,GAAA2gB,GACA/3B,EAAAo4B,GAAAK,EACAC,EAAAR,GAAAM,EAAAx4B,EAAAmX,GAAAohB,GACAt4B,EAAAD,EAAAs4B,EAAAlhB,GAAAmhB,EACAI,IAAAh8B,IAAAyb,GAAAnY,EAAAy4B,IAGAT,GAAAH,EAAAI,GAAAM,EAAAJ,GAAAK,EASA,QAAAG,GAAAC,GACA,OAAAzgB,GAAAygB,EAAA,GAAAA,EAAA,IAAAxC,EAAAwC,EAAA,KAGA,QAAAA,GAAAD,GACA,GAAAd,GAAAc,EAAA,GAAAb,EAAAa,EAAA,GAAAJ,EAAArhB,GAAA4gB,EACA,QAAAS,EAAArhB,GAAA2gB,GAAAU,EAAAphB,GAAA0gB,GAAA1gB,GAAA2gB,IAGA,QAAAe,GAAAtkC,EAAA2Q,GACA,MAAA3Q,GAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAGA,QAAA4zB,GAAAvkC,EAAA2Q,GACA,OAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,IAIA,QAAA6zB,GAAAxkC,EAAA2Q,GACA3Q,EAAA,IAAA2Q,EAAA,GAAA3Q,EAAA,IAAA2Q,EAAA,GAAA3Q,EAAA,IAAA2Q,EAAA,GAGA,QAAA8zB,GAAAC,EAAAl5B,GACA,OAAAk5B,EAAA,GAAAl5B,EAAAk5B,EAAA,GAAAl5B,EAAAk5B,EAAA,GAAAl5B,GAIA,QAAAm5B,GAAA1rB,GACA,GAAA+I,GAAAvE,GAAAxE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA+I,EAAA/I,EAAA,IAAA+I,EAAA/I,EAAA,IAAA+I,EAsCA,QAAA4iB,GAAAtB,EAAAC,GACAsB,GAAA9lC,KAAA+lC,IAAAC,GAAAzB,EAAA0B,GAAA1B,IACAC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GAGA,QAAA4B,GAAA7B,EAAAC,GACA,GAAA3tC,GAAAyuC,GAAAf,EAAAE,GAAAD,EAAAC,IACA,IAAA4B,GAAA,CACA,GAAAC,GAAAd,EAAAa,GAAAxvC,GACA0vC,GAAAD,EAAA,IAAAA,EAAA,MACAE,EAAAhB,EAAAe,EAAAD,EACAV,GAAAY,GACAA,EAAAnB,EAAAmB,EACA,IAGAC,GAHApoB,EAAAkmB,EAAAmC,GACAC,EAAAtoB,EAAA,OACAuoB,EAAAJ,EAAA,GAAAK,GAAAF,EAEAG,EAAArqB,GAAA4B,GAAA,GACAyoB,IAAAH,EAAAD,GAAAE,KAAAD,EAAApC,IACAkC,EAAAD,EAAA,GAAAK,GACAJ,EAAAN,QAAAM,KACKG,KAAA,aAAAE,GAAAH,EAAAD,GAAAE,KAAAD,EAAApC,IACLkC,GAAAD,EAAA,GAAAK,GACAJ,EAAAP,QAAAO,KAEAjC,EAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,KAEAsC,EACAvC,EAAAmC,GACAK,EAAAf,GAAAzB,GAAAwC,EAAAf,GAAAC,SAAA1B,GAEAwC,EAAAxC,EAAA0B,IAAAc,EAAAf,GAAAC,MAAAD,GAAAzB,GAGA0B,IAAAD,IACAzB,EAAAyB,QAAAzB,GACAA,EAAA0B,QAAA1B,IAEAA,EAAAmC,GACAK,EAAAf,GAAAzB,GAAAwC,EAAAf,GAAAC,SAAA1B,GAEAwC,EAAAxC,EAAA0B,IAAAc,EAAAf,GAAAC,MAAAD,GAAAzB,OAKAuB,IAAA9lC,KAAA+lC,IAAAC,GAAAzB,EAAA0B,GAAA1B,GAEAC,GAAA0B,QAAA1B,GACAA,EAAA2B,QAAA3B,GACA6B,GAAAxvC,EAAA6vC,GAAAnC,EAGA,QAAAyC,KACAC,GAAAtD,MAAAyC,EAGA,QAAAc,KACAnB,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAgB,GAAAtD,MAAAkC,EACAQ,GAAA,KAGA,QAAAc,GAAA5C,EAAAC,GACA,GAAA6B,GAAA,CACA,GAAAhoB,GAAAkmB,EAAAmC,EACAU,IAAAh+B,IAAAqT,GAAA4B,GAAA,IAAAA,KAAA,YAAAA,OAEAgpB,IAAA9C,EAAA+C,GAAA9C,CAEAP,IAAAN,MAAAY,EAAAC,GACA4B,EAAA7B,EAAAC,GAGA,QAAA+C,KACAtD,GAAAP,YAGA,QAAA8D,KACAL,EAAAE,GAAAC,IACArD,GAAAL,UACAnnB,GAAA2qB,IAAAK,KAAAzB,KAAAC,GAAA,MACAF,GAAA,GAAAC,GAAAD,GAAA,GAAAE,GACAI,GAAA,KAMA,QAAAU,GAAArC,EAAAuB,GACA,OAAAA,GAAAvB,GAAA,EAAAuB,EAAA,IAAAA,EAGA,QAAAyB,GAAAzmC,EAAA2Q,GACA,MAAA3Q,GAAA,GAAA2Q,EAAA,GAGA,QAAA+1B,GAAAC,EAAAnsB,GACA,MAAAmsB,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAnsB,MAAAmsB,EAAA,GAAAnsB,EAAAmsB,EAAA,IAAAA,EAAA,GAAAnsB,EAyEA,QAAAosB,GAAAtD,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAQ,GAAArhB,GAAA4gB,EACAsD,GAAA7C,EAAArhB,GAAA2gB,GAAAU,EAAAphB,GAAA0gB,GAAA1gB,GAAA2gB,IAGA,QAAAsD,GAAArsB,EAAAwI,EAAAE,KACA4jB,GACAC,KAAAvsB,EAAAusB,IAAAD,GACAE,KAAAhkB,EAAAgkB,IAAAF,GACAG,KAAA/jB,EAAA+jB,IAAAH,GAGA,QAAAI,KACAC,GAAAzE,MAAA0E,EAGA,QAAAA,GAAA9D,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAQ,GAAArhB,GAAA4gB,EACAjlB,IAAA0lB,EAAArhB,GAAA2gB,GACA+D,GAAArD,EAAAphB,GAAA0gB,GACAgE,GAAA1kB,GAAA2gB,GACA4D,GAAAzE,MAAA6E,EACAV,EAAAvoB,GAAA+oB,GAAAC,IAGA,QAAAC,GAAAjE,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAQ,GAAArhB,GAAA4gB,GACA/oB,EAAAwpB,EAAArhB,GAAA2gB,GACAtgB,EAAAghB,EAAAphB,GAAA0gB,GACApgB,EAAAN,GAAA2gB,GACAp0B,EAAAyU,GAAAnG,IAAAtO,EAAAk4B,GAAAnkB,EAAAokB,GAAAtkB,GAAA7T,KAAAm4B,GAAA9sB,EAAA8D,GAAA4E,GAAA/T,KAAAmP,GAAA0E,EAAAqkB,GAAA7sB,GAAArL,GAAAmP,GAAA9D,EAAA6sB,GAAArkB,EAAAskB,GAAApkB,EACAskB,KAAAr4B,EACAs4B,IAAAt4B,GAAAmP,OAAA9D,IACAktB,IAAAv4B,GAAAk4B,OAAArkB,IACA2kB,IAAAx4B,GAAAm4B,OAAApkB,IACA2jB,EAAAvoB,GAAA+oB,GAAAC,IAGA,QAAAM,KACAT,GAAAzE,MAAAkE,EAKA,QAAAiB,KACAV,GAAAzE,MAAAoF,EAGA,QAAAC,KACAC,EAAAC,GAAAC,IACAf,GAAAzE,MAAAkE,EAGA,QAAAkB,GAAAxE,EAAAC,GACA0E,GAAA3E,EAAA4E,GAAA3E,EACAD,GAAAE,GAAAD,GAAAC,GACA2D,GAAAzE,MAAAsF,CACA,IAAAhE,GAAArhB,GAAA4gB,EACAjlB,IAAA0lB,EAAArhB,GAAA2gB,GACA+D,GAAArD,EAAAphB,GAAA0gB,GACAgE,GAAA1kB,GAAA2gB,GACAsD,EAAAvoB,GAAA+oB,GAAAC,IAGA,QAAAU,GAAA1E,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAQ,GAAArhB,GAAA4gB,GACA/oB,EAAAwpB,EAAArhB,GAAA2gB,GACAtgB,EAAAghB,EAAAphB,GAAA0gB,GACApgB,EAAAN,GAAA2gB,GACA4E,EAAAd,GAAAnkB,EAAAokB,GAAAtkB,EACAolB,EAAAd,GAAA9sB,EAAA8D,GAAA4E,EACAmlB,EAAA/pB,GAAA0E,EAAAqkB,GAAA7sB,EACA9kB,EAAA+nB,GAAA0qB,IAAAC,IAAAC,KACAl5B,EAAA0yB,EAAAnsC,GACA+V,EAAA/V,IAAAyZ,EAAAzZ,CACA4yC,KAAA78B,EAAA08B,EACAI,IAAA98B,EAAA28B,EACAI,IAAA/8B,EAAA48B,EACAb,IAAAr4B,EACAs4B,IAAAt4B,GAAAmP,OAAA9D,IACAktB,IAAAv4B,GAAAk4B,OAAArkB,IACA2kB,IAAAx4B,GAAAm4B,OAAApkB,IACA2jB,EAAAvoB,GAAA+oB,GAAAC,IA+CA,QAAAmB,GAAAnF,EAAAC,GACA,OAAAD,EAAA1B,GAAA0B,EAAAoF,GAAApF,GAAA1B,GAAA0B,EAAAoF,GAAApF,EAAAC,GAKA,QAAAoF,GAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAF,IAAAG,GAAAC,EAAAC,GAAAC,EAAAJ,GAAAK,EAAAJ,EAAAC,IACAE,EAAAJ,GACAC,GAAAC,EAAAG,EAAAJ,EAAAC,GACAL,EAGA,QAAAS,GAAAN,GACA,gBAAAtF,EAAAC,GACA,MAAAD,IAAAsF,GAAAtF,EAAA1B,GAAA0B,EAAAoF,GAAApF,GAAA1B,GAAA0B,EAAAoF,GAAApF,EAAAC,IAIA,QAAAyF,GAAAJ,GACA,GAAAO,GAAAD,EAAAN,EAEA,OADAO,GAAAC,OAAAF,GAAAN,GACAO,EAGA,QAAAF,GAAAJ,EAAAC,GAMA,QAAAK,GAAA7F,EAAAC,GACA,GAAAS,GAAArhB,GAAA4gB,GACA/oB,EAAAmI,GAAA2gB,GAAAU,EACAhhB,EAAAJ,GAAA0gB,GAAAU,EACA9gB,EAAAN,GAAA2gB,GACA/3B,EAAA0X,EAAAmmB,EAAA7uB,EAAA8uB,CACA,QACA1lB,GAAAZ,EAAAumB,EAAA/9B,EAAAg+B,EAAAhvB,EAAA6uB,EAAAnmB,EAAAomB,GACAzH,EAAAr2B,EAAA+9B,EAAAvmB,EAAAwmB,IAbA,GAAAH,GAAA1mB,GAAAkmB,GACAS,EAAA1mB,GAAAimB,GACAU,EAAA5mB,GAAAmmB,GACAU,EAAA5mB,GAAAkmB,EA0BA,OAZAK,GAAAC,OAAA,SAAA9F,EAAAC,GACA,GAAAS,GAAArhB,GAAA4gB,GACA/oB,EAAAmI,GAAA2gB,GAAAU,EACAhhB,EAAAJ,GAAA0gB,GAAAU,EACA9gB,EAAAN,GAAA2gB,GACA/3B,EAAA0X,EAAAqmB,EAAAvmB,EAAAwmB,CACA,QACA5lB,GAAAZ,EAAAumB,EAAArmB,EAAAsmB,EAAAhvB,EAAA6uB,EAAA79B,EAAA89B,GACAzH,EAAAr2B,EAAA69B,EAAA7uB,EAAA8uB,KAIAH,EAoBA,QAAAM,GAAAtH,EAAAuH,EAAAtsB,EAAAusB,EAAApmB,EAAAE,GACA,GAAArG,EAAA,CACA,GAAAwsB,GAAAjnB,GAAA+mB,GACAG,EAAAjnB,GAAA8mB,GACA7uB,EAAA8uB,EAAAvsB,CACA,OAAAmG,GACAA,EAAAmmB,EAAAC,EAAAjB,GACAjlB,EAAAimB,EAAA7uB,EAAA,IAEA0I,EAAAumB,EAAAF,EAAArmB,GACAE,EAAAqmB,EAAAF,EAAAnmB,IACAkmB,EAAA,EAAApmB,EAAAE,EAAAF,EAAAE,KAAAF,GAAAomB,EAAAjB,IAEA,QAAAhG,GAAAt9B,EAAAme,EAAyBomB,EAAA,EAAAvkC,EAAAqe,EAAAre,EAAAqe,EAAiCre,GAAAyV,EAC1D6nB,EAAA0B,GAAAwF,GAAAC,EAAAlnB,GAAAvd,IAAAykC,EAAAjnB,GAAAxd,KACA+8B,EAAAO,QAAA,GAAAA,EAAA,KAKA,QAAAoH,GAAAF,EAAAlH,GACAA,EAAA2B,EAAA3B,KAAA,IAAAkH,EACAjF,EAAAjC,EACA,IAAAgH,GAAA/H,GAAAe,EAAA,GACA,UAAAA,EAAA,MAAAgH,KAAAhB,GAAAlC,IAAAkC,GAkIA,QAAAqB,GAAArH,EAAAsH,EAAAC,EAAAC,GACAl0C,KAAAwkB,EAAAkoB,EACA1sC,KAAAktB,EAAA8mB,EACAh0C,KAAAuW,EAAA09B,EACAj0C,KAAAwH,EAAA0sC,EACAl0C,KAAAyV,GAAA,EACAzV,KAAAsmB,EAAAtmB,KAAAJ,EAAA,KA+EA,QAAAu0C,GAAA9tC,GACA,GAAAigB,EAAAjgB,EAAAH,OAAA,CAKA,IAJA,GAAAogB,GAGA3L,EAFAxU,EAAA,EACA6D,EAAA3D,EAAA,KAEAF,EAAAmgB,GACAtc,EAAAsc,EAAA3L,EAAAtU,EAAAF,GACAwU,EAAA/a,EAAAoK,EACAA,EAAA2Q,CAEA3Q,GAAAsc,EAAA3L,EAAAtU,EAAA,GACAsU,EAAA/a,EAAAoK,GASA,QAAAoqC,GAAA9rB,EAAA+oB,EAAA9oB,EAAA8rB,GAEA,QAAA1O,GAAAnhB,EAAAwI,GACA,MAAA1E,IAAA9D,MAAA+D,GAAA8oB,GAAArkB,MAAAqnB,EAGA,QAAAC,GAAAC,EAAAC,EAAAb,EAAAxH,GACA,GAAAniC,GAAA,EAAAyqC,EAAA,CACA,UAAAF,IACAvqC,EAAA0qC,EAAAH,EAAAZ,OAAAc,EAAAC,EAAAF,EAAAb,KACAgB,EAAAJ,EAAAC,GAAA,EAAAb,EAAA,GACA,EAAAxH,GAAAO,MAAA,IAAA1iC,GAAA,IAAAA,EAAAse,EAAAC,EAAAve,EAAA,EAAAqqC,EAAAhD,UACArnC,KAAA2pC,EAAA,QAAAc,OAEAtI,GAAAO,MAAA8H,EAAA,GAAAA,EAAA,IAIA,QAAAE,GAAA90C,EAAA+zC,GACA,MAAAnuB,IAAA5lB,EAAA,GAAA0oB,GAAAkoB,GAAAmD,EAAA,MACAnuB,GAAA5lB,EAAA,GAAA2oB,GAAAioB,GAAAmD,EAAA,MACAnuB,GAAA5lB,EAAA,GAAAyxC,GAAAb,GAAAmD,EAAA,MACAA,EAAA,MAGA,QAAAiB,GAAA5qC,EAAA2Q,GACA,MAAAg6B,GAAA3qC,EAAAwa,EAAA7J,EAAA6J,GAGA,QAAAmwB,GAAA3qC,EAAA2Q,GACA,GAAAk6B,GAAAH,EAAA1qC,EAAA,GACArB,EAAA+rC,EAAA/5B,EAAA,EACA,OAAAk6B,KAAAlsC,EAAAksC,EAAAlsC,EACA,IAAAksC,EAAAl6B,EAAA,GAAA3Q,EAAA,GACA,IAAA6qC,EAAA7qC,EAAA,GAAA2Q,EAAA,GACA,IAAAk6B,EAAA7qC,EAAA,GAAA2Q,EAAA,GACAA,EAAA,GAAA3Q,EAAA,GAGA,gBAAAmiC,GAmBA,QAAAO,GAAAloB,EAAAwI,GACA2Y,EAAAnhB,EAAAwI,IAAA8nB,EAAApI,MAAAloB,EAAAwI,GAGA,QAAA+nB,KAGA,OAFAC,GAAA,EAEA7uC,EAAA,EAAAmgB,EAAA2uB,EAAA/uC,OAAyCC,EAAAmgB,IAAOngB,EAChD,OAAA+uC,GAAAT,EAAAU,EAAAF,EAAA9uC,GAAAuG,EAAA,EAAAhN,EAAAy1C,EAAAjvC,OAAAwmC,EAAAyI,EAAA,GAAAC,EAAA1I,EAAA,GAAA2I,EAAA3I,EAAA,GAAkHhgC,EAAAhN,IAAOgN,EACzHwoC,EAAAE,EAAAX,EAAAY,EAAA3I,EAAAyI,EAAAzoC,GAAA0oC,EAAA1I,EAAA,GAAA2I,EAAA3I,EAAA,GACA+H,GAAAJ,EAAyBgB,EAAAhB,IAAAe,EAAAF,IAAAb,EAAAI,IAAAY,EAAAZ,IAAAnsB,EAAA4sB,MAAAF,EACTK,GAAAhB,IAAAe,EAAAF,IAAAb,EAAAI,IAAAY,EAAAZ,IAAAnsB,EAAA4sB,MAAAF,CAIhB,OAAAA,GAIA,QAAAnI,KACAiI,EAAAQ,EAAAC,KAAAN,KAAAO,GAAA,EAGA,QAAA1I,KACA,GAAA2I,GAAAV,IACAW,EAAAF,GAAAC,EACA9P,GAAA4P,EAAAlK,EAAA/hB,MAAAisB,IAAArvC,QACAwvC,GAAA/P,KACAwG,EAAAU,eACA6I,IACAvJ,EAAAM,YACA6H,EAAA,YAAAnI,GACAA,EAAAQ,WAEAhH,GACAgQ,GAAAJ,EAAAX,EAAAa,EAAAnB,EAAAnI,GAEAA,EAAAW,cAEAgI,EAAA3I,EAAAoJ,EAAAN,EAAAE,EAAA,KAGA,QAAA1I,KACAmJ,EAAAlJ,MAAAyC,EACA8F,KAAAlsC,KAAAosC,MACAU,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAAtwB,IAMA,QAAAinB,KACA4I,IACApG,EAAA8G,EAAAC,GACAC,GAAAL,GAAAR,EAAAc,SACAb,EAAAxsC,KAAAusC,EAAAtM,WAEA4M,EAAAlJ,QACAoJ,GAAAhB,EAAAnI,UAGA,QAAAwC,GAAA3qB,EAAAwI,GACA,GAAAvX,GAAAkwB,EAAAnhB,EAAAwI,EAEA,IADAioB,GAAAE,EAAApsC,MAAAyb,EAAAwI,IACA6oB,EACAI,EAAAzxB,EAAA0xB,EAAAlpB,EAAAmpB,EAAA1gC,EACAogC,GAAA,EACApgC,IACAq/B,EAAArI,YACAqI,EAAApI,MAAAloB,EAAAwI,QAGA,IAAAvX,GAAAqgC,EAAAhB,EAAApI,MAAAloB,EAAAwI,OACA,CACA,GAAAhjB,IAAA+rC,EAAA/xB,KAAAc,IAAAuxB,GAAAryB,KAAA2D,IAAA2uB,GAAAP,IAAAC,EAAAhyB,KAAAc,IAAAuxB,GAAAryB,KAAA2D,IAAA2uB,GAAAN,KACAr7B,GAAA6J,EAAAR,KAAAc,IAAAuxB,GAAAryB,KAAA2D,IAAA2uB,GAAA9xB,IAAAwI,EAAAhJ,KAAAc,IAAAuxB,GAAAryB,KAAA2D,IAAA2uB,GAAAtpB,IACAupB,IAAAvsC,EAAA2Q,EAAA2N,EAAA+oB,EAAA9oB,EAAA8rB,IACAyB,IACAhB,EAAArI,YACAqI,EAAApI,MAAA1iC,EAAA,GAAAA,EAAA,KAEA8qC,EAAApI,MAAA/xB,EAAA,GAAAA,EAAA,IACAlF,GAAAq/B,EAAAnI,UACA6I,GAAA,GACW//B,IACXq/B,EAAArI,YACAqI,EAAApI,MAAAloB,EAAAwI,GACAwoB,GAAA,GAIAO,EAAAvxB,EAAAwxB,EAAAhpB,EAAA8oB,EAAArgC,EA/GA,GAEA8/B,GACAN,EACAE,EACAc,EAAAC,EAAAC,EACAJ,EAAAC,EAAAF,EACAD,EACAL,EARAV,EAAA3I,EACAmJ,EAAAkB,KASAZ,GACAlJ,QACAD,YACAE,UACAE,eACAC,aAmGA,OAAA8I,IAsGA,QAAAa,KACAC,GAAAhK,MAAAiK,GACAD,GAAA/J,QAAAiK,EAGA,QAAAA,KACAF,GAAAhK,MAAAgK,GAAA/J,QAAAX,EAGA,QAAA2K,IAAArJ,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,GACAqJ,GAAAvJ,EAAAwJ,GAAAlqB,GAAA2gB,GAAAwJ,GAAApqB,GAAA4gB,GACAmJ,GAAAhK,MAAAsK,GAGA,QAAAA,IAAA1J,EAAAC,GACAD,GAAAE,GAAAD,GAAAC,EACA,IAAAS,GAAArhB,GAAA2gB,GACAS,EAAArhB,GAAA4gB,GACAnmB,EAAA5B,GAAA8nB,EAAAuJ,IACAI,EAAAtqB,GAAAvF,GACA8vB,EAAAtqB,GAAAxF,GACA5C,EAAAwpB,EAAAkJ,EACAlqB,EAAA+pB,GAAA9I,EAAA6I,GAAA9I,EAAAiJ,EACA/pB,EAAA4pB,GAAA7I,EAAA8I,GAAA/I,EAAAiJ,CACAE,IAAAhlC,IAAAyb,GAAAnG,GAAAjD,IAAAwI,KAAAE,IACA2pB,GAAAvJ,EAAAwJ,GAAA7I,EAAA8I,GAAA/I,EAgEA,QAAAoJ,IAAAlL,EAAAQ,GACA,SAAAR,IAAAmL,GAAA/hC,eAAA42B,EAAAx8B,QACA2nC,GAAAnL,EAAAx8B,MAAAw8B,EAAAQ,GAIA,QAAA4K,IAAAhL,EAAAI,GACA,WAAA6K,GAAAjL,EAAAI,GAGA,QAAA8K,IAAAlL,EAAAI,GACA,GAAA+K,GAAAF,GAAAjL,EAAA,GAAAA,EAAA,IACAoL,EAAAH,GAAAjL,EAAA,GAAAI,GACAiL,EAAAJ,GAAA7K,EAAAJ,EAAA,GACA,OAAAoL,GAAAC,GAAAF,EAAAjH,GAGA,QAAAoH,IAAAtL,EAAAI,GACA,QAAAmL,GAAAvL,EAAA79B,IAAAqpC,IAAAC,GAAArL,IAGA,QAAAoL,IAAA3C,GACA,MAAAA,KAAA1mC,IAAAspC,IAAA5C,EAAAxsB,MAAAwsB,EAGA,QAAA4C,IAAArL,GACA,OAAAA,EAAA,GAAAc,GAAAd,EAAA,GAAAc,IASA,QAAAwK,IAAA3G,EAAAgD,EAAA4D,GACA,GAAAjrB,GAAAqe,EAAAjnB,MAAAitB,EAAAgD,EAAA7D,GAAAyH,GAAAhjC,OAAAo/B,EACA,iBAAA7vB,GAAsB,MAAAwI,GAAAve,IAAA,SAAAue,GAA2B,OAAAxI,EAAAwI,MAGjD,QAAAkrB,IAAA5vB,EAAAC,EAAA4vB,GACA,GAAA3zB,GAAA6mB,EAAAjnB,MAAAkE,EAAAC,EAAAioB,GAAA2H,GAAAljC,OAAAsT,EACA,iBAAAyE,GAAsB,MAAAxI,GAAA/V,IAAA,SAAA+V,GAA2B,OAAAA,EAAAwI,MAGjD,QAAAorB,MAOA,QAAAA,KACA,OAAY1oC,KAAA,kBAAA48B,YAAA+L,KAGZ,QAAAA,KACA,MAAAhN,GAAAjnB,MAAA0D,GAAAipB,EAAAuH,KAAA7G,EAAA6G,GAAA7pC,IAAAosB,GACA5lB,OAAAo2B,EAAAjnB,MAAA0D,GAAAkpB,EAAAuH,KAAA7G,EAAA6G,GAAA9pC,IAAA+pC,IACAvjC,OAAAo2B,EAAAjnB,MAAA0D,GAAAQ,EAAA6vB,KAAA5vB,EAAA4vB,GAAAzpC,OAAA,SAAA8V,GAA8E,MAAAgB,IAAAhB,EAAA8zB,GAAA9H,KAAgC/hC,IAAA+V,IAC9GvP,OAAAo2B,EAAAjnB,MAAA0D,GAAAupB,EAAA4G,KAAA5D,EAAA4D,GAAAvpC,OAAA,SAAAse,GAA8E,MAAAxH,IAAAwH,EAAAurB,GAAA/H,KAAgC/hC,IAAAue,IAd9G,GAAAzE,GAAAD,EAAAmpB,EAAAV,EACAsD,EAAAhD,EAAAK,EAAAV,EAEAxsB,EAAAwI,EAAA6N,EAAA2d,EADAL,EAAA,GAAAF,EAAAE,EAAAG,EAAA,GAAAC,EAAA,IAEAlf,EAAA,GA+EA,OAlEA+e,GAAAC,MAAA,WACA,MAAAA,KAAA5pC,IAAA,SAAA69B,GAA8C,OAAS58B,KAAA,aAAA48B,kBAGvD8L,EAAAK,QAAA,WACA,OACA/oC,KAAA,UACA48B,aACAzR,EAAAkW,GAAA97B,OACAujC,EAAA9G,GAAA7vC,MAAA,GACAg5B,EAAA4W,GAAAzpB,UAAAnmB,MAAA,GACA22C,EAAAxH,GAAAhpB,UAAAnmB,MAAA,OAKAu2C,EAAA1wB,OAAA,SAAA/gB,GACA,MAAAU,WAAAnB,OACAkyC,EAAAM,YAAA/xC,GAAAgyC,YAAAhyC,GADAyxC,EAAAO,eAIAP,EAAAM,YAAA,SAAA/xC,GACA,MAAAU,WAAAnB,QACA6qC,GAAApqC,EAAA,MAAA8qC,GAAA9qC,EAAA,MACAqqC,GAAArqC,EAAA,MAAA+qC,GAAA/qC,EAAA,MACAoqC,EAAAU,IAAA9qC,EAAAoqC,IAAAU,IAAA9qC,GACAqqC,EAAAU,IAAA/qC,EAAAqqC,IAAAU,IAAA/qC,GACAyxC,EAAA/e,gBALA0X,EAAAC,IAAAS,EAAAC,KAQA0G,EAAAO,YAAA,SAAAhyC,GACA,MAAAU,WAAAnB,QACAoiB,GAAA3hB,EAAA,MAAA4hB,GAAA5hB,EAAA,MACA0qC,GAAA1qC,EAAA,MAAA0tC,GAAA1tC,EAAA,MACA2hB,EAAAC,IAAA5hB,EAAA2hB,IAAAC,IAAA5hB,GACA0qC,EAAAgD,IAAA1tC,EAAA0qC,IAAAgD,IAAA1tC,GACAyxC,EAAA/e,gBALA/Q,EAAA+oB,IAAA9oB,EAAA8rB,KAQA+D,EAAAvzB,KAAA,SAAAle,GACA,MAAAU,WAAAnB,OACAkyC,EAAAQ,UAAAjyC,GAAAkyC,UAAAlyC,GADAyxC,EAAAS,aAIAT,EAAAQ,UAAA,SAAAjyC,GACA,MAAAU,WAAAnB,QACAoyC,GAAA3xC,EAAA,GAAA4xC,GAAA5xC,EAAA,GACAyxC,IAFAE,EAAAC,IAKAH,EAAAS,UAAA,SAAAlyC,GACA,MAAAU,WAAAnB,QACAiyC,GAAAxxC,EAAA,GAAAsxC,GAAAtxC,EAAA,GACAyxC,IAFAD,EAAAF,IAKAG,EAAA/e,UAAA,SAAA1yB,GACA,MAAAU,WAAAnB,QACAmzB,GAAA1yB,EACA6d,EAAAwzB,GAAA3G,EAAAgD,EAAA,IACArnB,EAAAkrB,GAAA5vB,EAAAC,EAAA8Q,GACAwB,EAAAmd,GAAAhH,EAAAU,EAAA,IACA8G,EAAAN,GAAAnH,EAAAU,EAAApY,GACA+e,GANA/e,GASA+e,EACAM,eAAA,QAAAlI,KAAA,OAAAA,MACAmI,eAAA,QAAAnI,KAAA,OAAAA,MAGA,QAAAsI,MACA,MAAAV,QAqEA,QAAAW,MACAC,GAAAtM,MAAAuM,GAGA,QAAAA,IAAAz0B,EAAAwI,GACAgsB,GAAAtM,MAAAwM,GACAC,GAAAC,GAAA50B,EAAA60B,GAAAC,GAAAtsB,EAGA,QAAAksB,IAAA10B,EAAAwI,GACAusB,GAAApnC,IAAAmnC,GAAA90B,EAAA40B,GAAApsB,GACAosB,GAAA50B,EAAA80B,GAAAtsB,EAGA,QAAAwsB,MACAN,GAAAC,GAAAE,IAqBA,QAAAI,IAAAj1B,EAAAwI,GACAxI,EAAAk1B,QAAAl1B,GACAA,EAAA+D,QAAA/D,GACAwI,EAAA2sB,QAAA3sB,GACAA,EAAAqnB,QAAArnB,GA4CA,QAAA4sB,IAAAp1B,EAAAwI,GACA6sB,IAAAr1B,EACAs1B,IAAA9sB,IACA+sB,GAGA,QAAAC,MACAC,GAAAvN,MAAAwN,GAGA,QAAAA,IAAA11B,EAAAwI,GACAitB,GAAAvN,MAAAyN,GACAP,GAAAQ,GAAA51B,EAAA61B,GAAArtB,GAGA,QAAAmtB,IAAA31B,EAAAwI,GACA,GAAAmrB,GAAA3zB,EAAA41B,GAAAnC,EAAAjrB,EAAAqtB,GAAAntB,EAAAzF,GAAA0wB,IAAAF,IACAqC,KAAAptB,GAAAktB,GAAA51B,GAAA,EACA+1B,IAAArtB,GAAAmtB,GAAArtB,GAAA,EACAwtB,IAAAttB,EACA0sB,GAAAQ,GAAA51B,EAAA61B,GAAArtB,GAGA,QAAAytB,MACAR,GAAAvN,MAAAkN,GAGA,QAAAc,MACAT,GAAAvN,MAAAiO,GAGA,QAAAC,MACAC,GAAAC,GAAAC,IAGA,QAAAJ,IAAAn2B,EAAAwI,GACAitB,GAAAvN,MAAAmO,GACAjB,GAAAkB,GAAAV,GAAA51B,EAAAu2B,GAAAV,GAAArtB,GAGA,QAAA6tB,IAAAr2B,EAAAwI,GACA,GAAAmrB,GAAA3zB,EAAA41B,GACAnC,EAAAjrB,EAAAqtB,GACAntB,EAAAzF,GAAA0wB,IAAAF,IAEAqC,KAAAptB,GAAAktB,GAAA51B,GAAA,EACA+1B,IAAArtB,GAAAmtB,GAAArtB,GAAA,EACAwtB,IAAAttB,EAEAA,EAAAmtB,GAAA71B,EAAA41B,GAAAptB,EACAguB,IAAA9tB,GAAAktB,GAAA51B,GACAy2B,IAAA/tB,GAAAmtB,GAAArtB,GACAkuB,IAAA,EAAAhuB,EACA0sB,GAAAQ,GAAA51B,EAAA61B,GAAArtB,GAGA,QAAAmuB,IAAAx1C,GACA3F,KAAAo7C,SAAAz1C,EAuEA,QAAA01C,IAAA72B,EAAAwI,GACAsuB,GAAA5O,MAAA6O,GACAC,GAAAC,GAAAj3B,EAAAk3B,GAAAC,GAAA3uB,EAGA,QAAAuuB,IAAA/2B,EAAAwI,GACAyuB,IAAAj3B,EAAAm3B,IAAA3uB,EACA4uB,GAAAzpC,IAAAsV,GAAAg0B,MAAAE,QACAF,GAAAj3B,EAAAm3B,GAAA3uB,EAGA,QAAA6uB,MACA77C,KAAA87C,WAoDA,QAAAC,IAAArI,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IA+KA,QAAAsI,IAAAC,GACA,MAAAA,GAAA/1C,OAAA,EAKA,QAAA0uC,IAAA5qC,EAAA2Q,GACA,QAAA3Q,IAAAwa,GAAA,KAAAxa,EAAA,GAAA8hC,GAAA0E,GAAA1E,GAAA9hC,EAAA,MACA2Q,IAAA6J,GAAA,KAAA7J,EAAA,GAAAmxB,GAAA0E,GAAA1E,GAAAnxB,EAAA,IAaA,QAAAuhC,IAAA/P,GACA,GAGAqJ,GAHA/H,EAAA/nB,IACAupB,EAAAvpB,IACAy2B,EAAAz2B,GAGA,QACA+mB,UAAA,WACAN,EAAAM,YACA+I,EAAA,GAEA9I,MAAA,SAAAsC,EAAAE,GACA,GAAAkN,GAAApN,EAAA,EAAApD,OACAxkB,EAAA5B,GAAAwpB,EAAAvB,EACAjoB,IAAA4B,EAAAwkB,IAAA4E,IACArE,EAAAO,MAAAe,EAAAwB,KAAAC,GAAA,IAAApD,QACAK,EAAAO,MAAAyP,EAAAlN,GACA9C,EAAAQ,UACAR,EAAAM,YACAN,EAAAO,MAAA0P,EAAAnN,GACA9C,EAAAO,MAAAsC,EAAAC,GACAuG,EAAA,GACO2G,IAAAC,GAAAh1B,GAAAwkB,KACPpmB,GAAAioB,EAAA0O,GAAA3L,KAAA/C,GAAA0O,EAAA3L,IACAhrB,GAAAwpB,EAAAoN,GAAA5L,KAAAxB,GAAAoN,EAAA5L,IACAvB,EAAAoN,GAAA5O,EAAAwB,EAAAD,EAAAE,GACA/C,EAAAO,MAAAyP,EAAAlN,GACA9C,EAAAQ,UACAR,EAAAM,YACAN,EAAAO,MAAA0P,EAAAnN,GACAuG,EAAA,GAEArJ,EAAAO,MAAAe,EAAAuB,EAAAC,EAAAC,GACAiN,EAAAC,GAEAzP,QAAA,WACAR,EAAAQ,UACAc,EAAAwB,EAAAvpB,KAEA8vB,MAAA,WACA,SAAAA,IAKA,QAAA6G,IAAA5O,EAAAwB,EAAAD,EAAAE,GACA,GAAAxB,GACA4O,EACAC,EAAA3vB,GAAA6gB,EAAAuB,EACA,OAAAxpB,IAAA+2B,GAAA/L,GACAgM,IAAA5vB,GAAAqiB,IAAAqN,EAAA3vB,GAAAuiB,IAAAtiB,GAAAoiB,GACApiB,GAAAsiB,IAAAxB,EAAA/gB,GAAAsiB,IAAAriB,GAAA6gB,KACAC,EAAA4O,EAAAC,KACAtN,EAAAC,GAAA,EAGA,QAAAuN,IAAAlI,EAAAC,EAAAb,EAAAxH,GACA,GAAAoB,EACA,UAAAgH,EACAhH,EAAAoG,EAAA7H,GACAK,EAAAO,OAAAd,GAAA2B,GACApB,EAAAO,MAAA,EAAAa,GACApB,EAAAO,MAAAd,GAAA2B,GACApB,EAAAO,MAAAd,GAAA,GACAO,EAAAO,MAAAd,IAAA2B,GACApB,EAAAO,MAAA,GAAAa,GACApB,EAAAO,OAAAd,IAAA2B,GACApB,EAAAO,OAAAd,GAAA,GACAO,EAAAO,OAAAd,GAAA2B,OACG,IAAA/nB,GAAA+uB,EAAA,GAAAC,EAAA,IAAAhE,GAAA,CACH,GAAAlD,GAAAiH,EAAA,GAAAC,EAAA,GAAA5I,MACA2B,GAAAoG,EAAArG,EAAA,EACAnB,EAAAO,OAAAY,EAAAC,GACApB,EAAAO,MAAA,EAAAa,GACApB,EAAAO,MAAAY,EAAAC,OAEApB,GAAAO,MAAA8H,EAAA,GAAAA,EAAA,IA0LA,QAAAkI,IAAAC,GACA,gBAAAxQ,GACA,GAAAjzB,GAAA,GAAA0jC,GACA,QAAA17C,KAAAy7C,GAAAzjC,EAAAhY,GAAAy7C,EAAAz7C,EAEA,OADAgY,GAAAizB,SACAjzB,GAIA,QAAA0jC,OAYA,QAAAC,IAAAlW,EAAAjf,EAAAigB,GACA,GAAAxuB,GAAAuO,EAAA,MAAAA,EAAA,MACAqE,EAAArE,EAAA,MAAAA,EAAA,MACAo1B,EAAAnW,EAAAyN,YAAAzN,EAAAyN,YAEAzN,GACAoW,MAAA,KACAC,WAAA,MAEA,MAAAF,GAAAnW,EAAAyN,WAAA,MAEA6I,GAAAtV,EAAAhB,EAAAwF,OAAA+Q,IAEA,IAAAviC,GAAAuiC,GAAAlU,SACAxzB,EAAAwO,KAAA2D,IAAAxO,GAAAwB,EAAA,MAAAA,EAAA,OAAAoR,GAAApR,EAAA,MAAAA,EAAA,QACA6J,GAAAkD,EAAA,OAAAvO,EAAA3D,GAAAmF,EAAA,MAAAA,EAAA,UACAqS,GAAAtF,EAAA,OAAAqE,EAAAvW,GAAAmF,EAAA,MAAAA,EAAA,SAIA,OAFA,OAAAmiC,GAAAnW,EAAAyN,WAAA0I,GAEAnW,EACAoW,MAAA,IAAAvnC,GACAwnC,WAAAx4B,EAAAwI,IAGA,QAAA4Z,IAAAD,EAAA2B,EAAAX,GACA,MAAAkV,IAAAlW,IAAA,KAAA2B,GAAAX,GAUA,QAAAwV,IAAAC,GACA,MAAAV,KACAhQ,MAAA,SAAAloB,EAAAwI,GACAxI,EAAA44B,EAAA54B,EAAAwI,GACAhtB,KAAAmsC,OAAAO,MAAAloB,EAAA,GAAAA,EAAA,OAKA,QAAA64B,IAAAD,EAAAE,GAEA,QAAAC,GAAAj1B,EAAA+oB,EAAA5D,EAAAyH,EAAAE,EAAAoI,EAAAj1B,EAAA8rB,EAAArF,EAAAyF,EAAAY,EAAAoI,EAAAhV,EAAA0D,GACA,GAAAgM,GAAA5vB,EAAAD,EACA2vB,EAAA5D,EAAAhD,EACAqM,EAAAvF,IAAAF,GACA,IAAAyF,EAAA,EAAAJ,GAAA7U,IAAA,CACA,GAAAz+B,GAAAkrC,EAAAT,EACA95B,EAAAy6B,EAAAC,EACA11C,EAAA69C,EAAAC,EACA/9C,EAAA+nB,GAAAzd,IAAA2Q,IAAAhb,KACAg+C,EAAA9R,EAAAlsC,GAAAD,GACA+vC,EAAAjqB,MAAA7lB,GAAA,GAAA6wC,IAAAhrB,GAAAioB,EAAAuB,GAAAwB,IAAA/C,EAAAuB,GAAA,EAAAphB,GAAAjT,EAAA3Q,GACApK,EAAAw9C,EAAA3N,EAAAkO,GACAC,EAAAh+C,EAAA,GACAi+C,EAAAj+C,EAAA,GACAk+C,EAAAF,EAAAt1B,EACAy1B,EAAAF,EAAAxM,EACA2M,EAAA/F,EAAA6F,EAAA3F,EAAA4F,GACAC,IAAAN,EAAAJ,GACA93B,IAAA2yB,EAAA2F,EAAA7F,EAAA8F,GAAAL,EAAA,QACAxI,EAAAT,EAAAW,EAAAC,EAAAmI,EAAAC,EAAAQ,MACAV,EAAAj1B,EAAA+oB,EAAA5D,EAAAyH,EAAAE,EAAAoI,EAAAI,EAAAC,EAAApO,EAAAzlC,GAAAtK,EAAAib,GAAAjb,EAAAC,EAAA8oC,EAAA0D,GACAA,EAAAO,MAAAkR,EAAAC,GACAN,EAAAK,EAAAC,EAAApO,EAAAzlC,EAAA2Q,EAAAhb,EAAA4oB,EAAA8rB,EAAArF,EAAAyF,EAAAY,EAAAoI,EAAAhV,EAAA0D,KAIA,gBAAAA,GAYA,QAAAO,GAAAloB,EAAAwI,GACAxI,EAAA44B,EAAA54B,EAAAwI,GACAmf,EAAAO,MAAAloB,EAAA,GAAAA,EAAA,IAGA,QAAAioB,KACAnkB,EAAA5C,IACAw4B,EAAAxR,MAAAyC,EACAhD,EAAAM,YAGA,QAAA0C,GAAA7B,EAAAC,GACA,GAAA5tC,GAAA0uC,GAAAf,EAAAC,IAAA3tC,EAAAw9C,EAAA9P,EAAAC,EACAgQ,GAAAj1B,EAAA+oB,EAAA5D,EAAAyH,EAAAE,EAAAoI,EAAAl1B,EAAA1oB,EAAA,GAAAyxC,EAAAzxC,EAAA,GAAA6tC,EAAAH,EAAA4H,EAAAv1C,EAAA,GAAAy1C,EAAAz1C,EAAA,GAAA69C,EAAA79C,EAAA,GAAAw+C,GAAAhS,GACAA,EAAAO,MAAApkB,EAAA+oB,GAGA,QAAA1E,KACAuR,EAAAxR,QACAP,EAAAQ,UAGA,QAAAyR,KACA3R,IACAyR,EAAAxR,MAAA2R,EACAH,EAAAvR,QAAA2R,EAGA,QAAAD,GAAA/Q,EAAAC,GACA4B,EAAA/B,EAAAE,EAAAC,GAAA4L,EAAA7wB,EAAA+wB,EAAAhI,EAAAkN,EAAArJ,EAAAsJ,EAAApJ,EAAAqJ,EAAAjB,EACAU,EAAAxR,MAAAyC,EAGA,QAAAmP,KACAf,EAAAj1B,EAAA+oB,EAAA5D,EAAAyH,EAAAE,EAAAoI,EAAArE,EAAAE,EAAAjM,EAAAmR,EAAAC,EAAAC,EAAAN,GAAAhS,GACA+R,EAAAvR,UACAA,IA/CA,GAAAS,GAAA+L,EAAAE,EAAAkF,EAAAC,EAAAC,EACAhR,EAAAnlB,EAAA+oB,EAAA6D,EAAAE,EAAAoI,EAEAU,GACAxR,QACAD,YACAE,UACAE,aAAA,WAAgCV,EAAAU,eAAuBqR,EAAAzR,UAAA2R,GACvDtR,WAAA,WAA8BX,EAAAW,aAAqBoR,EAAAzR,aA0CnD,OAAAyR,IAUA,QAAAvX,IAAAyW,GACA,MAAAsB,IAAA,WAAuC,MAAAtB,OAGvC,QAAAsB,IAAAC,GAYA,QAAAhY,GAAA+F,GAEA,MADAA,GAAAkS,EAAAlS,EAAA,GAAAc,GAAAd,EAAA,GAAAc,KACAd,EAAA,GAAAl3B,EAAA2iC,EAAAF,EAAAvL,EAAA,GAAAl3B,GAGA,QAAA49B,GAAA1G,GAEA,MADAA,GAAAkS,EAAAxL,QAAA1G,EAAA,GAAAyL,GAAA3iC,GAAAyiC,EAAAvL,EAAA,IAAAl3B,GACAk3B,MAAA,GAAAkD,GAAAlD,EAAA,GAAAkD,IAGA,QAAAiP,GAAAr6B,EAAAwI,GACA,MAAAxI,GAAA44B,EAAA54B,EAAAwI,IAAAxI,EAAA,GAAAhP,EAAA2iC,EAAAF,EAAAzzB,EAAA,GAAAhP,GA2CA,QAAAspC,KACAF,EAAA7L,GAAAgM,EAAApM,EAAAC,EAAAC,EAAAC,GAAAsK,EACA,IAAA4B,GAAA5B,EAAA9P,EAAAC,EAGA,OAFA4K,GAAA3zB,EAAAw6B,EAAA,GAAAxpC,EACAyiC,EAAAjrB,EAAAgyB,EAAA,GAAAxpC,EACA+1B,IAGA,QAAAA,KAEA,MADA0T,GAAAC,EAAA,KACAvY,EA3EA,GAAAyW,GAGAjF,EAAAF,EACA8G,EAAAH,EAEAvN,EAAA9oB,EAAA8rB,EAEA4K,EACAC,EARA1pC,EAAA,IACAgP,EAAA,IAAAwI,EAAA,IACAsgB,EAAA,EAAAC,EAAA,EACAqF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAqM,EAAA,KAAAC,EAAAC,GACA/2B,EAAA,KAAAg3B,EAAAz3B,GACAy1B,EAAA,GAAAiC,EAAAC,GAAAX,EAAAvB,EAuEA,OArDA3W,GAAAwF,OAAA,SAAAA,GACA,MAAA8S,IAAAC,IAAA/S,EAAA8S,IAAAQ,GAAAL,EAAAL,EAAAQ,EAAAD,EAAAJ,EAAA/S,OAGAxF,EAAA+Y,UAAA,SAAA/4C,GACA,MAAAU,WAAAnB,QAAAk5C,GAAAz4C,EAAAg5C,GAAAR,EAAAx4C,EAAA6mC,GAAA,EAAAA,KAAA2R,EAAA,KAAAE,IAAA9T,KAAA4T,EAAAvP,IAGAjJ,EAAAyN,WAAA,SAAAztC,GACA,MAAAU,WAAAnB,QAAAo5C,EAAA,MAAA34C,GAAA2hB,EAAA+oB,EAAA9oB,EAAA8rB,EAAA,KAAAxsB,IAAAusB,EAAA9rB,GAAA3hB,EAAA,MAAA0qC,GAAA1qC,EAAA,MAAA4hB,GAAA5hB,EAAA,MAAA0tC,GAAA1tC,EAAA,OAAA4kC,KAAA,MAAAjjB,EAAA,OAAAA,EAAA+oB,IAAA9oB,EAAA8rB,KAGA1N,EAAAoW,MAAA,SAAAp2C,GACA,MAAAU,WAAAnB,QAAAsP,GAAA7O,EAAAm4C,KAAAtpC,GAGAmxB,EAAAqW,UAAA,SAAAr2C,GACA,MAAAU,WAAAnB,QAAAse,GAAA7d,EAAA,GAAAqmB,GAAArmB,EAAA,GAAAm4C,MAAAt6B,EAAAwI,IAGA2Z,EAAAqY,OAAA,SAAAr4C,GACA,MAAAU,WAAAnB,QAAAonC,EAAA3mC,EAAA,OAAA6mC,GAAAD,EAAA5mC,EAAA,OAAA6mC,GAAAsR,MAAAxR,EAAAsC,GAAArC,EAAAqC,KAGAjJ,EAAAoY,OAAA,SAAAp4C,GACA,MAAAU,WAAAnB,QAAA0sC,EAAAjsC,EAAA,OAAA6mC,GAAAqF,EAAAlsC,EAAA,OAAA6mC,GAAAsF,EAAAnsC,EAAAT,OAAA,EAAAS,EAAA,OAAA6mC,GAAA,EAAAsR,MAAAlM,EAAAhD,GAAAiD,EAAAjD,GAAAkD,EAAAlD,KAGAjJ,EAAAtN,UAAA,SAAA1yB,GACA,MAAAU,WAAAnB,QAAAq5C,EAAAC,GAAAX,EAAAvB,EAAA32C,KAAA4kC,KAAA9jB,GAAA61B,IAGA3W,EAAAkW,UAAA,SAAAn1B,EAAAigB,GACA,MAAAkV,IAAAlW,EAAAjf,EAAAigB,IAGAhB,EAAAC,QAAA,SAAA0B,EAAAX,GACA,MAAAf,IAAAD,EAAA2B,EAAAX,IAgBA,WAGA,MAFAyV,GAAAuB,EAAA/xC,MAAA5M,KAAAqH,WACAs/B,EAAAyM,OAAAgK,EAAAhK,UACA0L,KAIA,QAAAc,IAAAjB,GACA,GAAA1P,GAAA,EACAC,EAAAtD,GAAA,EACAlsC,EAAAg/C,GAAAC,GACA/+C,EAAAF,EAAAuvC,EAAAC,EAMA,OAJAtvC,GAAAigD,UAAA,SAAAl5C,GACA,MAAAU,WAAAnB,OAAAxG,EAAAuvC,EAAAtoC,EAAA,GAAA6mC,GAAA0B,EAAAvoC,EAAA,GAAA6mC,KAAAyB,EAAAW,GAAAV,EAAAU,KAGAhwC,EAGA,QAAAkgD,IAAA7Q,GAGA,QAAA8Q,GAAAzS,EAAAC,GACA,OAAAD,EAAAI,EAAA9gB,GAAA2gB,GAAAG,GAHA,GAAAA,GAAA/gB,GAAAsiB,EAUA,OAJA8Q,GAAA3M,OAAA,SAAA5uB,EAAAwI,GACA,OAAAxI,EAAAkpB,EAAA7B,EAAA7e,EAAA0gB,KAGAqS,EAGA,QAAAC,IAAA3O,EAAAgD,GAQA,QAAA+I,GAAA54B,EAAAwI,GACA,GAAArB,GAAAlE,GAAA9nB,EAAA,EAAA2mB,EAAAsG,GAAAI,IAAA1G,CACA,QAAAqF,EAAAiB,GAAApI,GAAA8B,GAAA25B,EAAAt0B,EAAAgB,GAAAnI,IATA,GAAA07B,GAAAtzB,GAAAykB,GAAA/qB,GAAA45B,EAAAtzB,GAAAynB,IAAA,CAGA,IAAA7uB,GAAAc,GAAAkqB,GAAA,MAAAsP,IAAAzO,EAEA,IAAA1xC,GAAA,EAAAugD,GAAA,EAAA55B,EAAA45B,GAAAD,EAAAx4B,GAAA9nB,GAAA2mB,CAYA,OALA82B,GAAAhK,OAAA,SAAA5uB,EAAAwI,GACA,GAAAmzB,GAAAF,EAAAjzB,CACA,QAAAY,GAAApJ,EAAAgB,GAAA26B,IAAA75B,EAAA0S,GAAAmnB,GAAAtU,GAAAlsC,GAAA6kB,IAAA27B,KAAA75B,MAAA,EAAAA,MAGA82B,EAoBA,QAAAgD,IAAAC,GACA,GAAA/5B,GAAA+5B,EAAAn6C,MACA,QACAwmC,MAAA,SAAAloB,EAAAwI,GAAuC,IAAZ,GAAA7mB,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAAumC,MAAAloB,EAAAwI,IACvCszB,OAAA,WAAoC,IAAZ,GAAAn6C,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAAm6C,UACpC7T,UAAA,WAAuC,IAAZ,GAAAtmC,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAAsmC,aACvCE,QAAA,WAAqC,IAAZ,GAAAxmC,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAAwmC,WACrCE,aAAA,WAA0C,IAAZ,GAAA1mC,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAA0mC,gBAC1CC,WAAA,WAAwC,IAAZ,GAAA3mC,IAAA,IAAYA,EAAAmgB,GAAA+5B,EAAAl6C,GAAA2mC,eAyFxC,QAAAyT,IAAAxD,GACA,gBAAAv4B,EAAAwI,GACA,GAAAmlB,GAAAxlB,GAAAnI,GACA4tB,EAAAzlB,GAAAK,GACAxX,EAAAunC,EAAA5K,EAAAC,EACA,QACA58B,EAAA48B,EAAAxlB,GAAApI,GACAhP,EAAAoX,GAAAI,KAKA,QAAAwzB,IAAA1Q,GACA,gBAAAtrB,EAAAwI,GACA,GAAAE,GAAAzF,GAAAjD,IAAAwI,KACArtB,EAAAmwC,EAAA5iB,GACAuzB,EAAA7zB,GAAAjtB,GACA+gD,EAAA/zB,GAAAhtB,EACA,QACAiuB,GAAApJ,EAAAi8B,EAAAvzB,EAAAwzB,GACA7U,EAAA3e,GAAAF,EAAAyzB,EAAAvzB,KAiCA,QAAAyzB,IAAArT,EAAAC,GACA,OAAAD,EAAA3wB,GAAA6a,IAAAsU,GAAAyB,GAAA,KAYA,QAAAqT,IAAAxD,GAwBA,QAAAyD,KACA,GAAArrC,GAAAo2B,GAAAmR,IACA3tC,EAAA1P,EAAAyzC,GAAAzzC,EAAAq/C,UAAA3L,QAAA,MACA,OAAAgB,GAAA,MAAA9rB,IACAlZ,EAAA,GAAAoG,EAAApG,EAAA,GAAAoG,IAAApG,EAAA,GAAAoG,EAAApG,EAAA,GAAAoG,IAAA4nC,IAAAuD,KACA38B,KAAAc,IAAA1V,EAAA,GAAAoG,EAAA8S,GAAA+oB,IAAArtB,KAAA2D,IAAAvY,EAAA,GAAAoG,EAAA+S,GAAA8rB,MACA/rB,EAAAtE,KAAAc,IAAA1V,EAAA,GAAAoG,EAAA67B,KAAA9oB,EAAAvE,KAAA2D,IAAAvY,EAAA,GAAAoG,EAAA6+B,MA7BA,GAKAhD,GAAA9oB,EAAA8rB,EALA30C,EAAAinC,GAAAyW,GACA4B,EAAAt/C,EAAAs/C,OACAjC,EAAAr9C,EAAAq9C,MACAC,EAAAt9C,EAAAs9C,UACA5I,EAAA10C,EAAA00C,WACA9rB,EAAA,IA2BA,OAzBA5oB,GAAAq9C,MAAA,SAAAp2C,GACA,MAAAU,WAAAnB,QAAA62C,EAAAp2C,GAAAk6C,KAAA9D,KAGAr9C,EAAAs9C,UAAA,SAAAr2C,GACA,MAAAU,WAAAnB,QAAA82C,EAAAr2C,GAAAk6C,KAAA7D,KAGAt9C,EAAAs/C,OAAA,SAAAr4C,GACA,MAAAU,WAAAnB,QAAA84C,EAAAr4C,GAAAk6C,KAAA7B,KAGAt/C,EAAA00C,WAAA,SAAAztC,GACA,MAAAU,WAAAnB,QAAA,MAAAS,EAAA2hB,EAAA+oB,EAAA9oB,EAAA8rB,EAAA,MAAA/rB,GAAA3hB,EAAA,MAAA0qC,GAAA1qC,EAAA,MAAA4hB,GAAA5hB,EAAA,MAAA0tC,GAAA1tC,EAAA,OAAAk6C,KAAA,MAAAv4B,EAAA,OAAAA,EAAA+oB,IAAA9oB,EAAA8rB,KAYAwM,IAGA,QAAAC,IAAA9zB,GACA,MAAAwK,KAAAsU,GAAA9e,GAAA,GAGA,QAAA+zB,IAAA1P,EAAAgD,GAOA,QAAA+I,GAAA54B,EAAAwI,GACAzJ,EAAA,EAAgByJ,GAAA8e,GAAA0E,KAAAxjB,GAAA8e,GAAA0E,IACNxjB,EAAA8e,GAAA0E,KAAAxjB,EAAA8e,GAAA0E,GACV,IAAA7kB,GAAApI,EAAA2B,GAAA47B,GAAA9zB,GAAA1G,EACA,QAAAqF,EAAAiB,GAAAtG,EAAA9B,GAAAjB,EAAAoI,EAAAgB,GAAArG,EAAA9B,IAVA,GAAAw8B,GAAAr0B,GAAA0kB,GACA/qB,EAAA+qB,IAAAgD,EAAAznB,GAAAykB,GAAA10B,GAAAqkC,EAAAr0B,GAAA0nB,IAAA13B,GAAAmkC,GAAAzM,GAAAyM,GAAAzP,IACA9tB,EAAAy9B,EAAA97B,GAAA47B,GAAAzP,GAAA/qB,IAEA,OAAAA,IASA82B,EAAAhK,OAAA,SAAA5uB,EAAAwI,GACA,GAAAi0B,GAAA19B,EAAAyJ,EAAArB,EAAAqN,GAAA1S,GAAAmB,GAAAjD,IAAAy8B,IACA,QAAArzB,GAAApJ,EAAAgB,GAAAy7B,IAAA36B,EAAA0S,GAAAioB,GAAA,EAAAzE,GAAAt3B,GAAA3B,EAAAoI,EAAA,EAAArF,IAAAwlB,KAGAsR,GAdAuD,GAuBA,QAAAO,IAAA5T,EAAAC,GACA,OAAAD,EAAAC,GAUA,QAAA4T,IAAA9P,EAAAgD,GAOA,QAAA+I,GAAA54B,EAAAwI,GACA,GAAAo0B,GAAApuC,EAAAga,EAAAq0B,EAAA/6B,EAAA9B,CACA,QAAA48B,EAAAx0B,GAAAy0B,GAAAruC,EAAAouC,EAAAz0B,GAAA00B,IARA,GAAAL,GAAAr0B,GAAA0kB,GACA/qB,EAAA+qB,IAAAgD,EAAAznB,GAAAykB,IAAA2P,EAAAr0B,GAAA0nB,OAAAhD,GACAr+B,EAAAguC,EAAA16B,EAAA+qB,CAEA,OAAA7rB,IAAAc,GAAAkqB,GAAA0Q,IAOA9D,EAAAhK,OAAA,SAAA5uB,EAAAwI,GACA,GAAAo0B,GAAApuC,EAAAga,CACA,QAAAY,GAAApJ,EAAAgB,GAAA47B,IAAA96B,EAAA0S,GAAAooB,GAAApuC,EAAAgmB,GAAA1S,GAAAmB,GAAAjD,IAAA48B,OAGAhE,GASA,QAAAkE,IAAA98B,EAAAwI,GACA,GAAAolB,GAAAzlB,GAAAK,GAAAxX,EAAAmX,GAAAnI,GAAA4tB,CACA,QAAAA,EAAAxlB,GAAApI,GAAAhP,EAAAoX,GAAAI,GAAAxX,GAWA,QAAA+rC,IAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAA95B,GAAA60B,IACAhQ,MAAA,SAAAloB,EAAAwI,GACAhtB,KAAAmsC,OAAAO,MAAAloB,EAAAg9B,EAAAE,EAAA10B,EAAAy0B,EAAAE,MA6CA,QAAAC,IAAAp9B,EAAAwI,GACA,OAAAL,GAAAK,GAAAJ,GAAApI,GAAAoI,GAAAI,IAWA,QAAA60B,IAAAr9B,EAAAwI,GACA,GAAAolB,GAAAzlB,GAAAK,GAAAxX,EAAA,EAAAmX,GAAAnI,GAAA4tB,CACA,QAAAA,EAAAxlB,GAAApI,GAAAhP,EAAAoX,GAAAI,GAAAxX,GAaA,QAAAssC,IAAAxU,EAAAC,GACA,OAAA5wB,GAAA6a,IAAAsU,GAAAyB,GAAA,KAAAD,GA3zFA,GAAA9B,IAAA,WACA,UAAAF,GAOAA,GAAA1pC,WACAmQ,YAAAu5B,EACAC,MAAA,WACAvrC,KAAAkZ,EACAlZ,KAAAoP,EAAA,GAEA+C,IAAA,SAAA6a,GACA7a,EAAA4vC,GAAA/0B,EAAAhtB,KAAAoP,GACA+C,EAAAnS,KAAA+hD,GAAA7oC,EAAAlZ,KAAAkZ,GACAlZ,KAAAkZ,EAAAlZ,KAAAoP,GAAA2yC,GAAA3yC,EACApP,KAAAkZ,EAAA6oC,GAAA3yC,GAEA4yC,QAAA,WACA,MAAAhiD,MAAAkZ,GAIA,IAwHAk0B,IACAC,GACAI,GACAC,GACAE,GA+FAmB,GACAE,GACAD,GACAE,GACAO,GACAW,GACAC,GACAjB,GAEAP,GACAC,GAqKAgC,GACAU,GACAT,GACAC,GACAC,GACAQ,GACAC,GACAC,GACAW,GACAC,GACAC,GACAP,GACAC,GACA5pB,GACA+oB,GACAC,GAzZAyQ,GAAA,GAAAzW,GASAkF,GAAA,KACAyR,GAAA,MACArW,GAAA5nB,KAAAqU,GACAyT,GAAAF,GAAA,EACA+B,GAAA/B,GAAA,EACA8G,GAAA,EAAA9G,GAEAgE,GAAA,IAAAhE,GACA4B,GAAA5B,GAAA,IAEApmB,GAAAxB,KAAAwB,IACAg3B,GAAAx4B,KAAAw4B,KACA5uB,GAAA5J,KAAA4J,MACAjB,GAAA3I,KAAA2I,IACA7E,GAAA9D,KAAA8D,KACAo6B,GAAAl+B,KAAAk+B,IAEAvlC,GAAAqH,KAAArH,IACAuI,GAAAlB,KAAAkB,IACA0H,GAAA5I,KAAA4I,IACAoM,GAAAhV,KAAAgV,MAAA,SAAAxU,GAAqC,MAAAA,GAAA,IAAAA,EAAA,QACrCiD,GAAAzD,KAAAyD,KACA+P,GAAAxT,KAAAwT,IAsBA2qB,IACAC,QAAA,SAAAza,EAAAwE,GACAF,EAAAtE,EAAAuE,SAAAC,IAEAkW,kBAAA,SAAA1a,EAAAwE,GAEA,IADA,GAAA7oB,GAAAqkB,EAAArkB,SAAAnd,GAAA,EAAAmgB,EAAAhD,EAAApd,SACAC,EAAAmgB,GAAA2lB,EAAA3oB,EAAAnd,GAAA+lC,SAAAC,KAIAC,IACAkW,OAAA,SAAA3a,EAAAwE,GACAA,EAAAmU,UAEAiC,MAAA,SAAA5a,EAAAwE,GACAxE,IAAA2E,YACAH,EAAAO,MAAA/E,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA6a,WAAA,SAAA7a,EAAAwE,GAEA,IADA,GAAAG,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAAqhB,EAAA2E,EAAAnmC,GAAAgmC,EAAAO,MAAA/E,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA8a,WAAA,SAAA9a,EAAAwE,GACAE,EAAA1E,EAAA2E,YAAAH,EAAA,IAEAuW,gBAAA,SAAA/a,EAAAwE,GAEA,IADA,GAAAG,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAA+lB,EAAAC,EAAAnmC,GAAAgmC,EAAA,IAEAwW,QAAA,SAAAhb,EAAAwE,GACAS,EAAAjF,EAAA2E,YAAAH,IAEAyW,aAAA,SAAAjb,EAAAwE,GAEA,IADA,GAAAG,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAAsmB,EAAAN,EAAAnmC,GAAAgmC,IAEA0W,mBAAA,SAAAlb,EAAAwE,GAEA,IADA,GAAA2W,GAAAnb,EAAAmb,WAAA38C,GAAA,EAAAmgB,EAAAw8B,EAAA58C,SACAC,EAAAmgB,GAAA2lB,EAAA6W,EAAA38C,GAAAgmC,KAkBA8Q,GAAA,SAAAtV,EAAAwE,GACAxE,GAAAwa,GAAA7sC,eAAAqyB,EAAAj4B,MACAyyC,GAAAxa,EAAAj4B,MAAAi4B,EAAAwE,GAEAF,EAAAtE,EAAAwE,IAIAgC,GAAA3C,KAEAuX,GAAAvX,KAOAwB,IACAN,MAAAV,EACAS,UAAAT,EACAW,QAAAX,EACAa,aAAA,WACAsB,GAAA5C,QACAyB,GAAAP,UAAAM,EACAC,GAAAL,QAAAO,GAEAJ,WAAA,WACA,GAAAkW,IAAA7U,EACA4U,IAAA5wC,IAAA6wC,EAAA,EAAAtQ,GAAAsQ,KACAhjD,KAAAysC,UAAAzsC,KAAA2sC,QAAA3sC,KAAA0sC,MAAAV,GAEAsU,OAAA,WACAyC,GAAA5wC,IAAAugC,MAwCAuQ,GAAA,SAAAtb,GAGA,MAFAob,IAAAxX,QACA0R,GAAAtV,EAAAqF,IACA,EAAA+V,IA2CA5S,GAAA3E,KAIAwE,IACAtD,MAAAkC,EACAnC,UAAAsD,EACApD,QAAAsD,EACApD,aAAA,WACAmD,GAAAtD,MAAAwD,EACAF,GAAAvD,UAAA6D,EACAN,GAAArD,QAAA4D,EACAJ,GAAA5E,QACAyB,GAAAH,gBAEAC,WAAA,WACAE,GAAAF,aACAkD,GAAAtD,MAAAkC,EACAoB,GAAAvD,UAAAsD,EACAC,GAAArD,QAAAsD,EACA9B,GAAA,GAAAY,KAAAC,GAAA,KAAAC,KAAAC,GAAA,KACAiB,GAAAK,GAAAtB,GAAA,GACAiB,IAAAK,KAAAvB,IAAA,IACAH,GAAA,GAAAC,GAAAD,GAAA,GAAAE,KA2GAkU,GAAA,SAAAtgC,GACA,GAAAzc,GAAAmgB,EAAAtc,EAAA2Q,EAAA6O,EAAA25B,EAAA/7B,CAOA,IALA8nB,GAAAF,KAAAD,GAAAE,GAAAvT,KACAmT,MACAoO,GAAAr6B,EAAAotB,IAGA1pB,EAAAuoB,GAAA3oC,OAAA,CAIA,IAHA2oC,GAAA3lB,KAAAunB,GAGAtqC,EAAA,EAAA6D,EAAA6kC,GAAA,GAAArlB,GAAAxf,GAA4C7D,EAAAmgB,IAAOngB,EACnDwU,EAAAk0B,GAAA1oC,GACAuqC,EAAA1mC,EAAA2Q,EAAA,KAAA+1B,EAAA1mC,EAAA2Q,EAAA,KACAm1B,EAAA9lC,EAAA,GAAA2Q,EAAA,IAAAm1B,EAAA9lC,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAA2Q,EAAA,IACAm1B,EAAAn1B,EAAA,GAAA3Q,EAAA,IAAA8lC,EAAA9lC,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAA2Q,EAAA,KAEA6O,EAAAzgB,KAAAiB,EAAA2Q,EAMA,KAAAwoC,IAAAznB,KAAApV,EAAAkD,EAAAtjB,OAAA,EAAAC,EAAA,EAAA6D,EAAAwf,EAAAlD,GAA2EngB,GAAAmgB,EAAQtc,EAAA2Q,IAAAxU,EACnFwU,EAAA6O,EAAArjB,IACAihB,EAAA0oB,EAAA9lC,EAAA,GAAA2Q,EAAA,KAAAwoC,MAAA/7B,EAAA2nB,GAAAp0B,EAAA,GAAAq0B,GAAAhlC,EAAA,IAMA,MAFA6kC,IAAAC,GAAA,KAEAC,KAAArT,KAAAuT,KAAAvT,MACAhW,sBACAqpB,GAAAE,KAAAD,GAAAE,MAoBAiC,IACAmP,OAAAtU,EACAU,MAAAkE,EACAnE,UAAAyE,EACAvE,QAAAiF,EACA/E,aAAA,WACAsE,GAAA1E,UAAAoF,EACAV,GAAAxE,QAAAoF,GAEAjF,WAAA,WACAqE,GAAA1E,UAAAyE,EACAC,GAAAxE,QAAAiF,IA8FAwR,GAAA,SAAAzb,GACAmJ,GAAAU,GACAT,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GACAW,GAAAC,GAAAC,GAAA,EACAyK,GAAAtV,EAAAwJ,GAEA,IAAA3sB,GAAA8tB,GACAtlB,EAAAulB,GACArlB,EAAAslB,GACA9yC,EAAA8kB,IAAAwI,IAAAE,GAGA,OAAAxtB,GAAAuiD,KACAz9B,EAAAitB,GAAAzkB,EAAA0kB,GAAAxkB,EAAAykB,GAEAH,GAAAhB,KAAAhsB,EAAAusB,GAAA/jB,EAAAgkB,GAAA9jB,EAAA+jB,IACAvxC,EAAA8kB,IAAAwI,IAAAE,IAEAxtB,EAAAuiD,KAAAv8B,UAGAkI,GAAAZ,EAAAxI,GAAAorB,GAAA/D,EAAA3e,EAAAzF,GAAA/nB,IAAAkwC,KAGAhoB,GAAA,SAAApD,GACA,kBACA,MAAAA,KAIAuuB,GAAA,SAAA/oC,EAAA2Q,GAEA,QAAAo4B,GAAAvuB,EAAAwI,GACA,MAAAxI,GAAAxa,EAAAwa,EAAAwI,GAAArS,EAAA6J,EAAA,GAAAA,EAAA,IAOA,MAJAxa,GAAAopC,QAAAz4B,EAAAy4B,SAAAL,EAAAK,OAAA,SAAA5uB,EAAAwI,GACA,MAAAxI,GAAA7J,EAAAy4B,OAAA5uB,EAAAwI,GAAAxI,GAAAxa,EAAAopC,OAAA5uB,EAAA,GAAAA,EAAA,MAGAuuB,EAOAN,GAAAW,OAAAX,CAsDA,IAwgBAoE,IACAC,GACAC,GAwRAoC,GACAE,GACAD,GACAE,GA4EAwB,GACAC,GACAX,GACAC,GAp3BAlH,GAAA,SAAA4L,GAGA,QAAAgB,GAAAzT,GAEA,MADAA,GAAAyS,EAAAzS,EAAA,GAAAkB,GAAAlB,EAAA,GAAAkB,IACAlB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,EAQA,MAZAyS,GAAApM,EAAAoM,EAAA,GAAAvR,GAAAuR,EAAA,GAAAvR,GAAAuR,EAAA74C,OAAA,EAAA64C,EAAA,GAAAvR,GAAA,GAOAuS,EAAA3M,OAAA,SAAA9G,GAEA,MADAA,GAAAyS,EAAA3L,OAAA9G,EAAA,GAAAkB,GAAAlB,EAAA,GAAAkB,IACAlB,EAAA,IAAAsD,GAAAtD,EAAA,IAAAsD,GAAAtD,GAGAyT,GA+BAsD,GAAA,WAQA,QAAA3W,GAAAloB,EAAAwI,GACAmoB,EAAApsC,KAAAyb,EAAAu6B,EAAAv6B,EAAAwI,IACAxI,EAAA,IAAAorB,GAAAprB,EAAA,IAAAorB,GAGA,QAAAyT,KACA,GAAA1jD,GAAAq/C,EAAApyC,MAAA5M,KAAAqH,WACAskB,EAAA+nB,EAAA9mC,MAAA5M,KAAAqH,WAAAmmC,GACA5tC,EAAAy5B,EAAAzsB,MAAA5M,KAAAqH,WAAAmmC,EAMA,OALA2H,MACA4J,EAAApM,GAAAhzC,EAAA,GAAA6tC,IAAA7tC,EAAA,GAAA6tC,GAAA,GAAA4F,OACAK,EAAAtH,EAAAxgB,EAAA/rB,EAAA,GACAD,GAAS+P,KAAA,UAAA48B,aAAA6I,IACTA,EAAA4J,EAAA,KACAp/C,EArBA,GAGAw1C,GACA4J,EAJAC,EAAAp3B,IAAA,MACA8rB,EAAA9rB,GAAA,IACAyR,EAAAzR,GAAA,GAGAukB,GAAgBO,QA+BhB,OAZA2W,GAAArE,OAAA,SAAAr4C,GACA,MAAAU,WAAAnB,QAAA84C,EAAA,kBAAAr4C,KAAAihB,KAAAjhB,EAAA,IAAAA,EAAA,KAAA08C,GAAArE,GAGAqE,EAAA3P,OAAA,SAAA/sC,GACA,MAAAU,WAAAnB,QAAAwtC,EAAA,kBAAA/sC,KAAAihB,IAAAjhB,GAAA08C,GAAA3P,GAGA2P,EAAAhqB,UAAA,SAAA1yB,GACA,MAAAU,WAAAnB,QAAAmzB,EAAA,kBAAA1yB,KAAAihB,IAAAjhB,GAAA08C,GAAAhqB,GAGAgqB,GAGA7M,GAAA,WACA,GACA8M,GADAjL,IAEA,QACA3L,MAAA,SAAAloB,EAAAwI,GACAs2B,EAAAv6C,MAAAyb,EAAAwI,KAEAyf,UAAA,WACA4L,EAAAtvC,KAAAu6C,OAEA3W,QAAAX,EACAoK,OAAA,WACAiC,EAAAnyC,OAAA,GAAAmyC,EAAAtvC,KAAAsvC,EAAA1vB,MAAA1T,OAAAojC,EAAA3vB,WAEAsgB,OAAA,WACA,GAAAA,GAAAqP,CAGA,OAFAA,MACAiL,EAAA,KACAta,KAKAuN,GAAA,SAAAvsC,EAAA2Q,EAAA2N,EAAA+oB,EAAA9oB,EAAA8rB,GACA,GAQA1oB,GARA43B,EAAAv5C,EAAA,GACAw5C,EAAAx5C,EAAA,GACAy5C,EAAA9oC,EAAA,GACA+oC,EAAA/oC,EAAA,GACA4S,EAAA,EACAE,EAAA,EACA0qB,EAAAsL,EAAAF,EACAtL,EAAAyL,EAAAF,CAIA,IADA73B,EAAArD,EAAAi7B,EACApL,KAAAxsB,EAAA,IAEA,GADAA,GAAAwsB,EACAA,EAAA,GACA,GAAAxsB,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAAwsB,EAAA,GACH,GAAAxsB,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAApD,EAAAg7B,EACApL,KAAAxsB,EAAA,IAEA,GADAA,GAAAwsB,EACAA,EAAA,GACA,GAAAxsB,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAAwsB,EAAA,GACH,GAAAxsB,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAIA,GADAA,EAAA0lB,EAAAmS,EACAvL,KAAAtsB,EAAA,IAEA,GADAA,GAAAssB,EACAA,EAAA,GACA,GAAAtsB,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,OACG,IAAAssB,EAAA,GACH,GAAAtsB,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,GAIA,GADAA,EAAA0oB,EAAAmP,EACAvL,KAAAtsB,EAAA,IAEA,GADAA,GAAAssB,EACAA,EAAA,GACA,GAAAtsB,EAAA8B,EAAA,MACA9B,GAAA4B,MAAA5B,OACG,IAAAssB,EAAA,GACH,GAAAtsB,EAAA4B,EAAA,MACA5B,GAAA8B,MAAA9B,GAKA,MAFA4B,GAAA,IAAAvjB,EAAA,GAAAu5C,EAAAh2B,EAAA4qB,EAAAnuC,EAAA,GAAAw5C,EAAAj2B,EAAA0qB,GACAxqB,EAAA,IAAA9S,EAAA,GAAA4oC,EAAA91B,EAAA0qB,EAAAx9B,EAAA,GAAA6oC,EAAA/1B,EAAAwqB,IACA,OAGA0L,GAAA,SAAA35C,EAAA2Q,GACA,MAAA6K,IAAAxb,EAAA,GAAA2Q,EAAA,IAAA61B,IAAAhrB,GAAAxb,EAAA,GAAA2Q,EAAA,IAAA61B,IAeAmF,GAAA,SAAAJ,EAAAX,EAAAa,EAAAnB,EAAAnI,GACA,GAEAhmC,GACAmgB,EAHAs9B,KACA9G,IAwBA,IApBAvH,EAAAv/B,QAAA,SAAAimC,GACA,MAAA31B,EAAA21B,EAAA/1C,OAAA,QACA,GAAAogB,GAAA9B,EAAA4qB,EAAA6M,EAAA,GAAA4H,EAAA5H,EAAA31B,EAKA,IAAAq9B,GAAAvU,EAAAyU,GAAA,CAEA,IADA1X,EAAAM,YACAtmC,EAAA,EAAiBA,EAAAmgB,IAAOngB,EAAAgmC,EAAAO,OAAA0C,EAAA6M,EAAA91C,IAAA,GAAAipC,EAAA,GAExB,YADAjD,GAAAQ,UAIAiX,EAAA76C,KAAAyb,EAAA,GAAAuvB,GAAA3E,EAAA6M,EAAA,UACAa,EAAA/zC,KAAAyb,EAAAjO,EAAA,GAAAw9B,GAAA3E,EAAA,KAAA5qB,GAAA,IACAo/B,EAAA76C,KAAAyb,EAAA,GAAAuvB,GAAA8P,EAAA5H,EAAA,UACAa,EAAA/zC,KAAAyb,EAAAjO,EAAA,GAAAw9B,GAAA8P,EAAA,KAAAr/B,GAAA,OAGAo/B,EAAA19C,OAAA,CAMA,IAJA42C,EAAA5zB,KAAA0rB,GACAT,EAAAyP,GACAzP,EAAA2I,GAEA32C,EAAA,EAAAmgB,EAAAw2B,EAAA52C,OAA8BC,EAAAmgB,IAAOngB,EACrC22C,EAAA32C,GAAAqB,EAAAiuC,IAOA,KAJA,GACAzB,GACAtH,EAFAj0B,EAAAmrC,EAAA,KAIA,CAIA,IAFA,GAAA9kC,GAAArG,EACAqrC,GAAA,EACAhlC,EAAArJ,GAAA,IAAAqJ,IAAAwH,KAAA7N,EAAA,MACAu7B,GAAAl1B,EAAAoO,EACAif,EAAAM,WACA,IAEA,GADA3tB,EAAArJ,EAAAqJ,EAAAvI,EAAAd,GAAA,EACAqJ,EAAAtX,EAAA,CACA,GAAAs8C,EACA,IAAA39C,EAAA,EAAAmgB,EAAA0tB,EAAA9tC,OAAwCC,EAAAmgB,IAAOngB,EAAAgmC,EAAAO,SAAAsH,EAAA7tC,IAAA,GAAAumC,EAAA,QAE/C4H,GAAAx1B,EAAA0F,EAAA1F,EAAAwH,EAAA9B,EAAA,EAAA2nB,EAEArtB,KAAAwH,MACO,CACP,GAAAw9B,EAEA,IADA9P,EAAAl1B,EAAAlf,EAAAstB,EACA/mB,EAAA6tC,EAAA9tC,OAAA,EAAqCC,GAAA,IAAQA,EAAAgmC,EAAAO,SAAAsH,EAAA7tC,IAAA,GAAAumC,EAAA,QAE7C4H,GAAAx1B,EAAA0F,EAAA1F,EAAAlf,EAAA4kB,GAAA,EAAA2nB,EAEArtB,KAAAlf,EAEAkf,IAAAvI,EACAy9B,EAAAl1B,EAAAoO,EACA42B,YACKhlC,EAAArJ,EACL02B,GAAAQ,aAmBA2J,GAAA,IACAD,IAAAC,GAmKA5uB,GAAA,WACA,GAIAu3B,GACAC,EACApC,EANAx0B,EAAA,EACA+oB,EAAA,EACA9oB,EAAA,IACA8rB,EAAA,GAKA,OAAAyI,IACA3Q,OAAA,SAAAA,GACA,MAAA8S,IAAAC,IAAA/S,EAAA8S,IAAA7K,EAAA9rB,EAAA+oB,EAAA9oB,EAAA8rB,GAAA6K,EAAA/S,IAEAzkB,OAAA,SAAA/gB,GACA,MAAAU,WAAAnB,QAAAoiB,GAAA3hB,EAAA,MAAA0qC,GAAA1qC,EAAA,MAAA4hB,GAAA5hB,EAAA,MAAA0tC,GAAA1tC,EAAA,MAAAs4C,EAAAC,EAAA,KAAApC,KAAAx0B,EAAA+oB,IAAA9oB,EAAA8rB,OAKA/sB,GAAAkkB,KAEAqM,GAAA,SAAA5C,EAAAvI,GACA,GAAAY,GAAAZ,EAAA,GACAa,EAAAb,EAAA,GACA2C,GAAAziB,GAAA0gB,IAAA3gB,GAAA2gB,GAAA,GACAwC,EAAA,EACAkF,EAAA,CAEA1tB,IAAAikB,OAEA,QAAAplC,GAAA,EAAAmgB,EAAA2uB,EAAA/uC,OAAqCC,EAAAmgB,IAAOngB,EAC5C,GAAAzG,GAAAy1C,EAAAF,EAAA9uC,IAAAD,OASA,OARAivC,GACAz1C,EACAqkD,EAAA5O,EAAAz1C,EAAA,GACA+tC,EAAAsW,EAAA,GACA9U,EAAA8U,EAAA,KAAApW,GACAC,EAAAhhB,GAAAqiB,GACAvB,EAAA/gB,GAAAsiB,GAEAviC,EAAA,EAAmBA,EAAAhN,IAAOgN,EAAA+gC,EAAAuB,EAAApB,EAAAoW,EAAAtW,EAAA4O,EAAAyH,EAAAE,EAAA,CAC1B,GAAAA,GAAA9O,EAAAzoC,GACAsiC,EAAAiV,EAAA,GACA/U,EAAA+U,EAAA,KAAAtW,GACAqW,EAAAp3B,GAAAsiB,GACAoN,EAAA3vB,GAAAuiB,GACA9nB,EAAA4nB,EAAAvB,EACAiC,EAAAtoB,GAAA,OACA88B,EAAAxU,EAAAtoB,EACAyoB,EAAAqU,EAAAtY,GACAp2B,EAAAo4B,EAAAoW,CAOA,IALA18B,GAAAnV,IAAAyb,GAAApY,EAAAk6B,EAAA9iB,GAAAs3B,GAAAxW,EAAA4O,EAAA9mC,EAAAmX,GAAAu3B,KACApU,GAAAD,EAAAzoB,EAAAsoB,EAAAgD,GAAAtrB,EAIAyoB,EAAApC,GAAAH,EAAA0B,GAAA1B,EAAA,CACA,GAAA6W,GAAA5V,EAAAF,EAAA0V,GAAA1V,EAAA4V,GACAtV,GAAAwV,EACA,IAAAC,GAAA7V,EAAAc,EAAA8U,EACAxV,GAAAyV,EACA,IAAAC,IAAAxU,EAAAzoB,GAAA,QAAAykB,EAAAuY,EAAA,KACA7W,EAAA8W,GAAA9W,IAAA8W,IAAAF,EAAA,IAAAA,EAAA,OACAnP,GAAAnF,EAAAzoB,GAAA,SAiBA,OAAA0oB,GAAAU,IAAAV,EAAAU,IAAAlpB,IAAAkpB,IAAA,EAAAwE,GAGAmC,GAAA3L,KAKAkL,IACA4J,OAAAtU,EACAU,MAAAV,EACAS,UAAAgK,EACA9J,QAAAX,EACAa,aAAAb,EACAc,WAAAd,GAgCA9lC,GAAA,SAAAyhC,GAGA,MAFAwP,IAAA5L,QACA0R,GAAAtV,EAAA+O,KACAS,IAGA7K,IAAA,WACA3E,IAAcj4B,KAAA,aAAA48B,gBAEdiL,GAAA,SAAAvtC,EAAA2Q,GAGA,MAFA2xB,IAAA,GAAAtiC,EACAsiC,GAAA,GAAA3xB,EACAzU,GAAAyhC,KAGA2c,IACAlC,QAAA,SAAAza,EAAA+E,GACA,MAAA0K,IAAAzP,EAAAuE,SAAAQ,IAEA2V,kBAAA,SAAA1a,EAAA+E,GAEA,IADA,GAAAppB,GAAAqkB,EAAArkB,SAAAnd,GAAA,EAAAmgB,EAAAhD,EAAApd,SACAC,EAAAmgB,GAAA,GAAA8wB,GAAA9zB,EAAAnd,GAAA+lC,SAAAQ,GAAA,QACA,YAIA2K,IACAiL,OAAA,WACA,UAEAC,MAAA,SAAA5a,EAAA+E,GACA,MAAA4K,IAAA3P,EAAA2E,YAAAI,IAEA8V,WAAA,SAAA7a,EAAA+E,GAEA,IADA,GAAAJ,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAA,GAAAgxB,GAAAhL,EAAAnmC,GAAAumC,GAAA,QACA,WAEA+V,WAAA,SAAA9a,EAAA+E,GACA,MAAA8K,IAAA7P,EAAA2E,YAAAI,IAEAgW,gBAAA,SAAA/a,EAAA+E,GAEA,IADA,GAAAJ,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAA,GAAAkxB,GAAAlL,EAAAnmC,GAAAumC,GAAA,QACA,WAEAiW,QAAA,SAAAhb,EAAA+E,GACA,MAAAkL,IAAAjQ,EAAA2E,YAAAI,IAEAkW,aAAA,SAAAjb,EAAA+E,GAEA,IADA,GAAAJ,GAAA3E,EAAA2E,YAAAnmC,GAAA,EAAAmgB,EAAAgmB,EAAApmC,SACAC,EAAAmgB,GAAA,GAAAsxB,GAAAtL,EAAAnmC,GAAAumC,GAAA,QACA,WAEAmW,mBAAA,SAAAlb,EAAA+E,GAEA,IADA,GAAAoW,GAAAnb,EAAAmb,WAAA38C,GAAA,EAAAmgB,EAAAw8B,EAAA58C,SACAC,EAAAmgB,GAAA,GAAA8wB,GAAA0L,EAAA38C,GAAAumC,GAAA,QACA,YAiCAtmC,GAAA,SAAAuhC,EAAA+E,GACA,OAAA/E,GAAA2c,GAAAhvC,eAAAqyB,EAAAj4B,MACA40C,GAAA3c,EAAAj4B,MACA0nC,IAAAzP,EAAA+E,IA0GA4H,GAAA,SAAAtqC,EAAA2Q,GACA,GAAA2N,GAAAte,EAAA,GAAAwjC,GACA6D,EAAArnC,EAAA,GAAAwjC,GACAjlB,EAAA5N,EAAA,GAAA6yB,GACA6G,EAAA15B,EAAA,GAAA6yB,GACAwT,EAAAr0B,GAAA0kB,GACA6O,EAAAtzB,GAAAykB,GACAkT,EAAA53B,GAAA0nB,GACAmQ,EAAA53B,GAAAynB,GACAoQ,EAAAzD,EAAAr0B,GAAArE,GACAo8B,EAAA1D,EAAAp0B,GAAAtE,GACAq8B,EAAAJ,EAAA53B,GAAApE,GACAq8B,EAAAL,EAAA33B,GAAArE,GACAtF,EAAA,EAAA4oB,EAAApkB,GAAAskB,EAAAsI,EAAAhD,GAAA2P,EAAAuD,EAAAxY,EAAAxjB,EAAAD,KACA9S,EAAAoX,GAAA3J,GAEAqxB,EAAArxB,EAAA,SAAA7T,GACA,GAAAopB,GAAA5L,GAAAxd,GAAA6T,GAAAzN,EACA+iB,EAAA3L,GAAA3J,EAAA7T,GAAAoG,EACAgP,EAAA+T,EAAAksB,EAAAjsB,EAAAmsB,EACA33B,EAAAuL,EAAAmsB,EAAAlsB,EAAAosB,EACA13B,EAAAqL,EAAA2nB,EAAA1nB,EAAAgsB,CACA,QACA52B,GAAAZ,EAAAxI,GAAAorB,GACAhiB,GAAAV,EAAAzF,GAAAjD,IAAAwI,MAAA4iB,KAEG,WACH,OAAAtnB,EAAAsnB,GAAAyB,EAAAzB,IAKA,OAFA0E,GAAAiD,SAAAt0B,EAEAqxB,GAGAzsB,GAAA,SAAArD,GACA,MAAAA,IAGAqgC,GAAArZ,KACA+N,GAAA/N,KAMAwN,IACAtM,MAAAV,EACAS,UAAAT,EACAW,QAAAX,EACAa,aAAA,WACAmM,GAAAvM,UAAAsM,GACAC,GAAArM,QAAA6M,IAEA1M,WAAA,WACAkM,GAAAvM,UAAAuM,GAAArM,QAAAqM,GAAAtM,MAAAV,EACA6Y,GAAA1yC,IAAAqT,GAAA+zB,KACAA,GAAAhO,SAEAvC,OAAA,WACA,GAAAia,GAAA4B,GAAA,CAEA,OADAA,IAAAtZ,QACA0X,IAsBAvJ,GAAAhe,IACAie,GAAAD,GACAnxB,IAAAmxB,GACArF,GAAA9rB,GAEA20B,IACAxQ,MAAA+M,GACAhN,UAAAT,EACAW,QAAAX,EACAa,aAAAb,EACAc,WAAAd,EACAhD,OAAA,WACA,GAAAka,KAAAxJ,GAAAC,KAAApxB,GAAA8rB,IAEA,OADA9rB,IAAA8rB,KAAAsF,GAAAD,GAAAhe,KACAwnB,IAaArJ,GAAA,EACAC,GAAA,EACAC,GAAA,EACAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAQ,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAjB,IACAvN,MAAAkN,GACAnN,UAAAuN,GACArN,QAAA8N,GACA5N,aAAA,WACAoN,GAAAxN,UAAAiO,GACAT,GAAAtN,QAAAiO,IAEA9N,WAAA,WACAmN,GAAAvN,MAAAkN,GACAK,GAAAxN,UAAAuN,GACAC,GAAAtN,QAAA8N,IAEAzR,OAAA,WACA,GAAAoa,GAAAlI,IAAAF,GAAAE,GAAAD,GAAAC,IACAV,IAAAF,GAAAE,GAAAD,GAAAC,IACAT,IAAAF,GAAAE,GAAAD,GAAAC,KACAr0B,QAIA,OAHAm0B,IAAAC,GAAAC,GACAO,GAAAC,GAAAC,GACAQ,GAAAC,GAAAC,GAAA,EACAkI,GAgEAjI,IAAAv5C,WACAkjD,QAAA,IACAC,YAAA,SAAAp+C,GACA,MAAA3G,MAAA8kD,QAAAn+C,EAAA3G,MAEA6sC,aAAA,WACA7sC,KAAAglD,MAAA,GAEAlY,WAAA,WACA9sC,KAAAglD,MAAAt/B,KAEA+mB,UAAA,WACAzsC,KAAAilD,OAAA,GAEAtY,QAAA,WACA,IAAA3sC,KAAAglD,OAAAhlD,KAAAo7C,SAAA8J,YACAllD,KAAAilD,OAAAv/B,KAEAgnB,MAAA,SAAAloB,EAAAwI,GACA,OAAAhtB,KAAAilD,QACA,OACAjlD,KAAAo7C,SAAA+J,OAAA3gC,EAAAwI,GACAhtB,KAAAilD,OAAA,CACA,MAEA,QACAjlD,KAAAo7C,SAAAgK,OAAA5gC,EAAAwI,EACA,MAEA,SACAhtB,KAAAo7C,SAAA+J,OAAA3gC,EAAAxkB,KAAA8kD,QAAA93B,GACAhtB,KAAAo7C,SAAA+I,IAAA3/B,EAAAwI,EAAAhtB,KAAA8kD,QAAA,EAAApS,MAKA1J,OAAAgD,EAGA,IACAqZ,IACA7J,GACAE,GACAD,GACAE,GALAC,GAAApQ,KAOA8P,IACA5O,MAAAV,EACAS,UAAA,WACA6O,GAAA5O,MAAA2O,IAEA1O,QAAA,WACA0Y,IAAA9J,GAAAC,GAAAE,IACAJ,GAAA5O,MAAAV,GAEAa,aAAA,WACAwY,IAAA,GAEAvY,WAAA,WACAuY,GAAA,MAEArc,OAAA,WACA,GAAA9iC,IAAA01C,EAEA,OADAA,IAAArQ,QACArlC,GAmBA21C,IAAAj6C,WACAkjD,QAAA,IACAQ,QAAAvJ,GAAA,KACAgJ,YAAA,SAAAp+C,GAEA,OADAA,QAAA3G,KAAA8kD,UAAA9kD,KAAA8kD,QAAAn+C,EAAA3G,KAAAslD,QAAA,MACAtlD,MAEA6sC,aAAA,WACA7sC,KAAAglD,MAAA,GAEAlY,WAAA,WACA9sC,KAAAglD,MAAAt/B,KAEA+mB,UAAA,WACAzsC,KAAAilD,OAAA,GAEAtY,QAAA,WACA,IAAA3sC,KAAAglD,OAAAhlD,KAAA87C,QAAA/yC,KAAA,KACA/I,KAAAilD,OAAAv/B,KAEAgnB,MAAA,SAAAloB,EAAAwI,GACA,OAAAhtB,KAAAilD,QACA,OACAjlD,KAAA87C,QAAA/yC,KAAA,IAAAyb,EAAA,IAAAwI,GACAhtB,KAAAilD,OAAA,CACA,MAEA,QACAjlD,KAAA87C,QAAA/yC,KAAA,IAAAyb,EAAA,IAAAwI,EACA,MAEA,SACA,MAAAhtB,KAAAslD,UAAAtlD,KAAAslD,QAAAvJ,GAAA/7C,KAAA8kD,UACA9kD,KAAA87C,QAAA/yC,KAAA,IAAAyb,EAAA,IAAAwI,EAAAhtB,KAAAslD,WAKAtc,OAAA,WACA,GAAAhpC,KAAA87C,QAAA51C,OAAA,CACA,GAAA8iC,GAAAhpC,KAAA87C,QAAA3jC,KAAA,GAEA,OADAnY,MAAA87C,WACA9S,EAEA,aAYA,IAAA95B,IAAA,SAAAy3B,EAAAhhC,GAKA,QAAA6gC,GAAAmB,GAKA,MAJAA,KACA,kBAAAod,IAAAQ,EAAAR,eAAAn4C,MAAA5M,KAAAqH,YACA41C,GAAAtV,EAAA6d,EAAAD,KAEAA,EAAAvc,SATA,GACAwc,GACAD,EAFAR,EAAA,GAiDA,OArCAve,GAAAyc,KAAA,SAAAtb,GAEA,MADAsV,IAAAtV,EAAA6d,EAAAxM,KACAA,GAAAhQ,UAGAxC,EAAAif,QAAA,SAAA9d,GAEA,MADAsV,IAAAtV,EAAA6d,EAAAlK,KACAA,GAAAtS,UAGAxC,EAAA0c,OAAA,SAAAvb,GAEA,MADAsV,IAAAtV,EAAA6d,EAAAtI,KACAA,GAAAlU,UAGAxC,EAAA4c,SAAA,SAAAzb,GAEA,MADAsV,IAAAtV,EAAA6d,EAAAvL,KACAA,GAAAjR,UAGAxC,EAAAG,WAAA,SAAAhgC,GACA,MAAAU,WAAAnB,QAAAs/C,EAAA,MAAA7+C,GAAAggC,EAAA,KAAA9e,KAAA8e,EAAAhgC,GAAAwlC,OAAA3F,GAAAG,GAGAH,EAAA7gC,QAAA,SAAAgB,GACA,MAAAU,WAAAnB,QACAq/C,EAAA,MAAA5+C,GAAAhB,EAAA,QAAAk2C,KAAA,GAAAV,IAAAx1C,EAAAgB,GACA,kBAAAo+C,IAAAQ,EAAAR,eACAve,GAHA7gC,GAMA6gC,EAAAue,YAAA,SAAAp+C,GACA,MAAAU,WAAAnB,QACA6+C,EAAA,kBAAAp+C,MAAA4+C,EAAAR,aAAAp+C,OACA6/B,GAFAue,GAKAve,EAAAG,cAAAhhC,YAGAm3C,GAAA,SAAA4I,EAAAnP,EAAAjC,EAAA77B,GACA,gBAAAsmC,EAAA4G,GAgDA,QAAAjZ,GAAAY,EAAAC,GACA,GAAAb,GAAAqS,EAAAzR,EAAAC,EACAmY,GAAApY,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,KAAAiZ,EAAAjZ,MAAAY,EAAAC,GAGA,QAAAqY,GAAAtY,EAAAC,GACA,GAAAb,GAAAqS,EAAAzR,EAAAC,EACA+V,GAAA5W,QAAA,GAAAA,EAAA,IAGA,QAAAD,KACAqQ,EAAApQ,MAAAkZ,EACAtC,EAAA7W,YAGA,QAAAE,KACAmQ,EAAApQ,QACA4W,EAAA3W,UAGA,QAAAkZ,GAAAvY,EAAAC,GACA4H,EAAApsC,MAAAukC,EAAAC,GACA,IAAAb,GAAAqS,EAAAzR,EAAAC,EACAuY,GAAApZ,QAAA,GAAAA,EAAA,IAGA,QAAA0R,KACA0H,EAAArZ,YACA0I,KAGA,QAAAmJ,KACAuH,EAAA1Q,EAAA,MAAAA,EAAA,OACA2Q,EAAAnZ,SAEA,IAEAxmC,GAAAzG,EACAu8C,EACAvP,EAJA8I,EAAAsQ,EAAAtQ,QACAuQ,EAAAC,EAAAhd,SACA1iB,EAAAy/B,EAAA7/C,MAQA,IAJAivC,EAAAxsB,MACAssB,EAAAlsC,KAAAosC,GACAA,EAAA,KAEA7uB,EAGA,KAAAkvB,GAEA,GADAyG,EAAA8J,EAAA,IACArmD,EAAAu8C,EAAA/1C,OAAA,MAGA,IAFA+/C,IAAAN,EAAA9Y,eAAAoZ,GAAA,GACAN,EAAAlZ,YACAtmC,EAAA,EAAqBA,EAAAzG,IAAOyG,EAAAw/C,EAAAjZ,SAAAuP,EAAA91C,IAAA,GAAAumC,EAAA,GAC5BiZ,GAAAhZ,eAOArmB,GAAA,KAAAkvB,GAAAuQ,EAAAh9C,KAAAg9C,EAAAp9B,MAAA1T,OAAA8wC,EAAAr9B,UAEA6sB,EAAAxsC,KAAAg9C,EAAAr3C,OAAAstC,KA9GA,GAKA/G,GACAM,EACAJ,EAPAmO,EAAA/M,EAAAoP,GACAO,EAAAnH,EAAA3L,OAAA36B,EAAA,GAAAA,EAAA,IACAutC,EAAAxP,KACAsP,EAAAvP,EAAAyP,GACAC,GAAA,EAKAnJ,GACApQ,QACAD,YACAE,UACAE,aAAA,WACAiQ,EAAApQ,MAAAmZ,EACA/I,EAAArQ,UAAA2R,EACAtB,EAAAnQ,QAAA2R,EACA/I,KACAN,MAEAnI,WAAA,WACAgQ,EAAApQ,QACAoQ,EAAArQ,YACAqQ,EAAAnQ,UACA4I,EAAAlK,EAAA/hB,MAAAisB,EACA,IAAAE,GAAAoC,GAAA5C,EAAAiR,EACA3Q,GAAArvC,QACA+/C,IAAAN,EAAA9Y,eAAAoZ,GAAA,GACAtQ,GAAAJ,EAAAX,GAAAa,EAAAnB,EAAAqR,IACSlQ,IACTwQ,IAAAN,EAAA9Y,eAAAoZ,GAAA,GACAN,EAAAlZ,YACA6H,EAAA,YAAAqR,GACAA,EAAAhZ,WAEAsZ,IAAAN,EAAA7Y,aAAAmZ,GAAA,GACA1Q,EAAAN,EAAA,MAEAqL,OAAA,WACAqF,EAAA9Y,eACA8Y,EAAAlZ,YACA6H,EAAA,YAAAqR,GACAA,EAAAhZ,UACAgZ,EAAA7Y,cAsEA,OAAAgQ,KAeAuC,GAAAvC,GACA,WAAc,UACdZ,GACAO,KACA7Q,IAAAE,KAsFA6T,GAAA,SAAAjM,EAAAtsB,GAKA,QAAAktB,GAAAC,EAAAC,EAAAb,EAAAxH,GACAsH,EAAAtH,EAAAuH,EAAAtsB,EAAAusB,EAAAY,EAAAC,GAGA,QAAA7O,GAAA2H,EAAAC,GACA,MAAA5gB,IAAA2gB,GAAA3gB,GAAA4gB,GAAA4Y,EAOA,QAAA5P,GAAApK,GACA,GAAA4X,GACAvG,EACA4I,EACAC,EACA7Q,CACA,QACA/I,UAAA,WACA4Z,EAAAD,GAAA,EACA5Q,EAAA,GAEA9I,MAAA,SAAAY,EAAAC,GACA,GACA+Y,GADArC,GAAA3W,EAAAC,GAEA93B,EAAAkwB,EAAA2H,EAAAC,GACA5tC,EAAA4mD,EACA9wC,EAAA,EAAA8C,EAAA+0B,EAAAC,GACA93B,EAAA8C,EAAA+0B,KAAA,EAAA1B,QAAA2B,GAAA,CAYA,KAXAwW,IAAAsC,EAAAD,EAAA3wC,IAAA02B,EAAAM,YAGAh3B,IAAA2wC,IACAE,EAAAE,EAAAzC,EAAAE,KACAqC,GAAA3C,GAAAI,EAAAuC,IAAA3C,GAAAM,EAAAqC,MACArC,EAAA,IAAAzT,GACAyT,EAAA,IAAAzT,GACA/6B,EAAAkwB,EAAAse,EAAA,GAAAA,EAAA,MAGAxuC,IAAA2wC,EACA5Q,EAAA,EACA//B,GAEA02B,EAAAM,YACA6Z,EAAAE,EAAAvC,EAAAF,GACA5X,EAAAO,MAAA4Z,EAAA,GAAAA,EAAA,MAGAA,EAAAE,EAAAzC,EAAAE,GACA9X,EAAAO,MAAA4Z,EAAA,GAAAA,EAAA,IACAna,EAAAQ,WAEAoX,EAAAuC,MACS,IAAAG,GAAA1C,GAAAwC,EAAA9wC,EAAA,CACT,GAAArG,EAGAzP,GAAA69C,KAAApuC,EAAAo3C,EAAAvC,EAAAF,GAAA,MACAvO,EAAA,EACA+Q,GACApa,EAAAM,YACAN,EAAAO,MAAAt9B,EAAA,MAAAA,EAAA,OACA+8B,EAAAO,MAAAt9B,EAAA,MAAAA,EAAA,OACA+8B,EAAAQ,YAEAR,EAAAO,MAAAt9B,EAAA,MAAAA,EAAA,OACA+8B,EAAAQ,UACAR,EAAAM,YACAN,EAAAO,MAAAt9B,EAAA,MAAAA,EAAA,UAIAqG,GAAAsuC,GAAAJ,GAAAI,EAAAE,IACA9X,EAAAO,MAAAuX,EAAA,GAAAA,EAAA,IAEAF,EAAAE,EAAAmC,EAAA3wC,EAAA+nC,EAAA79C,GAEAgtC,QAAA,WACAyZ,GAAAja,EAAAQ,UACAoX,EAAA,MAIAvO,MAAA,WACA,MAAAA,IAAA6Q,GAAAD,IAAA,IAMA,QAAAI,GAAAx8C,EAAA2Q,EAAA+rC,GACA,GAAAC,GAAAtY,EAAArkC,GACA48C,EAAAvY,EAAA1zB,GAIAmM,GAAA,OACA+/B,EAAAtY,EAAAoY,EAAAC,GACAE,EAAAxY,EAAAuY,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,GAGA,KAAAC,EAAA,OAAAN,GAAA18C,CAEA,IAAAyzC,GAAA0I,EAAAW,EAAAE,EACAC,GAAAd,EAAAY,EAAAC,EACAE,EAAA3Y,EAAAznB,EAAA+/B,GACAtuB,EAAAkW,EAAA3nB,EAAA22B,GACAjlB,EAAAiW,EAAAoY,EAAAI,EACAzY,GAAAjW,EAAAC,EAGA,IAAA0V,GAAAgZ,EACA/tC,EAAAm1B,EAAA/V,EAAA2V,GACAiZ,EAAA7Y,EAAAJ,KACA5gB,EAAAnU,IAAAguC,GAAA7Y,EAAA/V,KAAA,EAEA,MAAAjL,EAAA,IAEA,GAAAle,GAAAqY,GAAA6F,GACAoX,EAAA+J,EAAAP,IAAA/0B,EAAA/J,GAAA+3C,EAIA,IAHA3Y,EAAA9J,EAAAnM,GACAmM,EAAA0J,EAAA1J,IAEAgiB,EAAA,MAAAhiB,EAGA,IAIAxX,GAJAugB,EAAAzjC,EAAA,GACAglC,EAAAr0B,EAAA,GACAs0B,EAAAjlC,EAAA,GACAklC,EAAAv0B,EAAA,EAGAq0B,GAAAvB,IAAAvgB,EAAAugB,IAAAuB,IAAA9hB,EAEA,IAAA9F,GAAA4nB,EAAAvB,EACA2Z,EAAA5hC,GAAA4B,EAAAwkB,IAAA4E,GACA6W,EAAAD,GAAAhgC,EAAAopB,EAKA,KAHA4W,GAAAlY,EAAAD,IAAA/hB,EAAA+hB,IAAAC,IAAAhiB,GAGAm6B,EACAD,EACAnY,EAAAC,EAAA,EAAAxK,EAAA,IAAAlf,GAAAkf,EAAA,GAAA+I,GAAA+C,GAAAvB,EAAAC,GACAD,GAAAvK,EAAA,IAAAA,EAAA,IAAAwK,EACA9nB,EAAAwkB,IAAA6B,GAAA/I,EAAA,IAAAA,EAAA,IAAAsK,GAAA,CACA,GAAAsY,GAAA7Y,EAAAP,IAAA/0B,EAAA/J,GAAA+3C,EAEA,OADA3Y,GAAA8Y,EAAA/uB,IACAmM,EAAA0J,EAAAkZ,MAMA,QAAA/uC,GAAA+0B,EAAAC,GACA,GAAA5hB,GAAA46B,EAAA7S,EAAA9H,GAAA8H,EACAn7B,EAAA,CAKA,OAJA+0B,IAAA3hB,EAAApT,GAAA,EACA+0B,EAAA3hB,IAAApT,GAAA,GACAg1B,GAAA5hB,EAAApT,GAAA,EACAg1B,EAAA5hB,IAAApT,GAAA,GACAA,EAzKA,GAAA4tC,GAAAx5B,GAAA+mB,GACA6S,EAAAJ,EAAA,EACAM,EAAAjhC,GAAA2gC,GAAA3V,EA0KA,OAAAsM,IAAAnX,EAAA4Q,EAAAjC,EAAAiS,GAAA,GAAA7S,KAAA9H,GAAA8H,EAAA9H,MAGA2b,GAAA,SAAA5K,GACA,OACAxQ,OAAAuQ,GAAAC,IAeAC,IAAAh7C,WACAmQ,YAAA6qC,GACAlQ,MAAA,SAAAloB,EAAAwI,GAAyBhtB,KAAAmsC,OAAAO,MAAAloB,EAAAwI,IACzBszB,OAAA,WAAsBtgD,KAAAmsC,OAAAmU,UACtB7T,UAAA,WAAyBzsC,KAAAmsC,OAAAM,aACzBE,QAAA,WAAuB3sC,KAAAmsC,OAAAQ,WACvBE,aAAA,WAA4B7sC,KAAAmsC,OAAAU,gBAC5BC,WAAA,WAA0B9sC,KAAAmsC,OAAAW,cAgC1B,IAAAqR,IAAA,GACAF,GAAAtxB,GAAA,GAAA6gB,IAEAgS,GAAA,SAAApC,EAAAE,GACA,OAAAA,EAAAD,GAAAD,EAAAE,GAAAH,GAAAC,IA+FAqC,GAAA/C,IACAhQ,MAAA,SAAAloB,EAAAwI,GACAhtB,KAAAmsC,OAAAO,MAAAloB,EAAAgpB,GAAAxgB,EAAAwgB,OA8IAga,GAAA,WACA,MAAA5H,IAAAI,IACAjD,MAAA,SACAiC,QAAA,aAGAyI,GAAA,WACA,MAAAD,MACA3H,WAAA,YACA9C,MAAA,MACAC,WAAA,UACA+B,QAAA,OACAC,SAAA,WAsBA0I,GAAA,WAQA,QAAAA,GAAApb,GACA,GAAA9nB,GAAA8nB,EAAA,GAAAtf,EAAAsf,EAAA,EACA,OAAAI,GAAA,KACAib,EAAAjb,MAAAloB,EAAAwI,GAAA0f,IACAkb,EAAAlb,MAAAloB,EAAAwI,GAAA0f,KACAmb,EAAAnb,MAAAloB,EAAAwI,GAAA0f,GA2DA,QAAAnB,KAEA,MADA0T,GAAAC,EAAA,KACAwI,EAzEA,GAAAzI,GACAC,EACAyI,EACAC,EACAC,EACAnb,EAHAob,EAAAL,KACAM,EAAAP,KAAAzI,QAAA,QAAAC,SAAA,SAAAa,WAAA,QACAmI,EAAAR,KAAAzI,QAAA,QAAAC,SAAA,SAAAa,WAAA,OACAoI,GAA4Bvb,MAAA,SAAAloB,EAAAwI,GAAuB0f,GAAAloB,EAAAwI,IAuEnD,OA7DA06B,GAAAtU,OAAA,SAAA9G,GACA,GAAA92B,GAAAsyC,EAAA/K,QACA3tC,EAAA04C,EAAA9K,YACAx4B,GAAA8nB,EAAA,GAAAl9B,EAAA,IAAAoG,EACAwX,GAAAsf,EAAA,GAAAl9B,EAAA,IAAAoG,CACA,QAAAwX,GAAA,KAAAA,EAAA,MAAAxI,IAAA,MAAAA,GAAA,KAAAujC,EACA/6B,GAAA,MAAAA,EAAA,MAAAxI,IAAA,MAAAA,GAAA,KAAAwjC,EACAF,GAAA1U,OAAA9G,IAGAob,EAAAvb,OAAA,SAAAA,GACA,MAAA8S,IAAAC,IAAA/S,EAAA8S,IAAAmB,IAAA0H,EAAA3b,OAAA+S,EAAA/S,GAAA4b,EAAA5b,UAAA6b,EAAA7b,aAGAub,EAAAruB,UAAA,SAAA1yB,GACA,MAAAU,WAAAnB,QACA4hD,EAAAzuB,UAAA1yB,GAAAohD,EAAA1uB,UAAA1yB,GAAAqhD,EAAA3uB,UAAA1yB,GACA4kC,KAFAuc,EAAAzuB,aAKAquB,EAAA3K,MAAA,SAAAp2C,GACA,MAAAU,WAAAnB,QACA4hD,EAAA/K,MAAAp2C,GAAAohD,EAAAhL,MAAA,IAAAp2C,GAAAqhD,EAAAjL,MAAAp2C,GACA+gD,EAAA1K,UAAA8K,EAAA9K,cAFA8K,EAAA/K,SAKA2K,EAAA1K,UAAA,SAAAr2C,GACA,IAAAU,UAAAnB,OAAA,MAAA4hD,GAAA9K,WACA,IAAAxnC,GAAAsyC,EAAA/K,QAAAv4B,GAAA7d,EAAA,GAAAqmB,GAAArmB,EAAA,EAiBA,OAfAghD,GAAAG,EACA9K,UAAAr2C,GACAytC,aAAA5vB,EAAA,KAAAhP,EAAAwX,EAAA,KAAAxX,IAAAgP,EAAA,KAAAhP,EAAAwX,EAAA,KAAAxX,KACA22B,OAAA8b,GAEAL,EAAAG,EACA/K,WAAAx4B,EAAA,KAAAhP,EAAAwX,EAAA,KAAAxX,IACA4+B,aAAA5vB,EAAA,KAAAhP,EAAAg7B,GAAAxjB,EAAA,IAAAxX,EAAAg7B,KAAAhsB,EAAA,KAAAhP,EAAAg7B,GAAAxjB,EAAA,KAAAxX,EAAAg7B,MACArE,OAAA8b,GAEAJ,EAAAG,EACAhL,WAAAx4B,EAAA,KAAAhP,EAAAwX,EAAA,KAAAxX,IACA4+B,aAAA5vB,EAAA,KAAAhP,EAAAg7B,GAAAxjB,EAAA,KAAAxX,EAAAg7B,KAAAhsB,EAAA,KAAAhP,EAAAg7B,GAAAxjB,EAAA,KAAAxX,EAAAg7B,MACArE,OAAA8b,GAEA1c,KAGAmc,EAAA7K,UAAA,SAAAn1B,EAAAigB,GACA,MAAAkV,IAAA6K,EAAAhgC,EAAAigB,IAGA+f,EAAA9gB,QAAA,SAAA0B,EAAAX,GACA,MAAAf,IAAA8gB,EAAApf,EAAAX,IAQA+f,EAAA3K,MAAA,OA4BAmL,GAAA3H,GAAA,SAAA4H,GACA,MAAA1gC,IAAA,KAAA0gC,KAGAD,IAAA9U,OAAAoN,GAAA,SAAAtzB,GACA,SAAA2e,EAAA3e,EAAA,IAGA,IAAAk7B,IAAA,WACA,MAAAzhB,IAAAuhB,IACAnL,MAAA,QACA2C,UAAA,UAGA2I,GAAA9H,GAAA,SAAA5gD,GACA,OAAAA,EAAAgsC,EAAAhsC,OAAAitB,GAAAjtB,IAGA0oD,IAAAjV,OAAAoN,GAAA,SAAAtzB,GACA,MAAAA,IAGA,IAAAo7B,IAAA,WACA,MAAA3hB,IAAA0hB,IACAtL,MAAA,SACA2C,UAAA,SAOAiB,IAAAvN,OAAA,SAAA5uB,EAAAwI,GACA,OAAAxI,EAAA,EAAAg4B,GAAA0F,GAAAl1B,IAAA8e,IAGA,IAAAyc,IAAA,WACA,MAAA3H,IAAAD,IACA5D,MAAA,IAAArK,KAiEA8V,GAAA,WACA,MAAA5I,IAAAmB,IACAhE,MAAA,OACA8C,WAAA;CAOAqB,IAAA9N,OAAA8N,EAEA,IAAAuH,IAAA,WACA,MAAA9hB,IAAAua,IACAnE,MAAA,SAuBA2L,GAAA,WACA,MAAA9I,IAAAuB,IACApE,MAAA,SACAiC,QAAA,YAQAsC,IAAAlO,OAAAoN,GAAAhE,GAEA,IAAAmM,IAAA,WACA,MAAAhiB,IAAA2a,IACAvE,MAAA,SACA2C,UAAA,KAWAkJ,GAAA,WAOA,QAAArd,KAEA,MADA0T,GAAAC,EAAA,KACAvY,EARA,GACA0K,GAAA9oB,EAAA8rB,EACA4K,EACAC,EACAvY,EAJAnxB,EAAA,EAAAksC,EAAA,EAAAC,EAAA,EAAAkH,EAAA,EAAAC,EAAA,EAAAvB,EAAA1/B,GACAS,EAAA,KAAAw0B,EAAAj1B,EAUA,OAAA8e,IACAwF,OAAA,SAAAA,GACA,MAAA8S,IAAAC,IAAA/S,EAAA8S,IAAAsI,EAAAzK,EAAAoC,EAAA/S,KAEAiI,WAAA,SAAAztC,GACA,MAAAU,WAAAnB,QAAA42C,EAAA,MAAAn2C,GAAA2hB,EAAA+oB,EAAA9oB,EAAA8rB,EAAA,KAAAxsB,IAAAusB,EAAA9rB,GAAA3hB,EAAA,MAAA0qC,GAAA1qC,EAAA,MAAA4hB,GAAA5hB,EAAA,MAAA0tC,GAAA1tC,EAAA,OAAA4kC,KAAA,MAAAjjB,EAAA,OAAAA,EAAA+oB,IAAA9oB,EAAA8rB,KAEA0I,MAAA,SAAAp2C,GACA,MAAAU,WAAAnB,QAAAqhD,EAAAhG,IAAA/rC,GAAA7O,GAAAkiD,EAAArzC,EAAAszC,EAAApH,EAAAC,GAAApW,KAAA/1B,GAEAwnC,UAAA,SAAAr2C,GACA,MAAAU,WAAAnB,QAAAqhD,EAAAhG,GAAA/rC,EAAAqzC,EAAArzC,EAAAszC,EAAApH,GAAA/6C,EAAA,GAAAg7C,GAAAh7C,EAAA,IAAA4kC,MAAAmW,EAAAC,IAEAoH,SAAA,SAAApiD,GACA,MAAAU,WAAAnB,QAAAqhD,EAAAhG,GAAA/rC,GAAAqzC,EAAAliD,GAAA,KAAA6O,EAAAszC,EAAApH,EAAAC,GAAApW,KAAAsd,EAAA,GAEAG,SAAA,SAAAriD,GACA,MAAAU,WAAAnB,QAAAqhD,EAAAhG,GAAA/rC,EAAAqzC,EAAArzC,GAAAszC,EAAAniD,GAAA,KAAA+6C,EAAAC,GAAApW,KAAAud,EAAA,GAEAjM,UAAA,SAAAn1B,EAAAigB,GACA,MAAAkV,IAAAlW,EAAAjf,EAAAigB,IAEAf,QAAA,SAAA0B,EAAAX,GACA,MAAAf,IAAAD,EAAA2B,EAAAX,KASAia,IAAAxO,OAAAoN,GAAA3U,EAEA,IAAAod,IAAA,WACA,MAAAtiB,IAAAib,IACA7E,MAAA,OACA2C,UAAA,GAAAlP,IAQAqR,IAAAzO,OAAAoN,GAAA,SAAAtzB,GACA,SAAAsvB,GAAAtvB,IAGA,IAAAg8B,IAAA,WACA,MAAAviB,IAAAkb,IACA9E,MAAA,KACA2C,UAAA,KAOAoC,IAAA1O,OAAA,SAAA5uB,EAAAwI,GACA,QAAAA,EAAA,EAAAwvB,GAAA0F,GAAA19B,IAAAsnB,IAGA,IAAAqd,IAAA,WACA,GAAAzpD,GAAAkhD,GAAAkB,IACA9C,EAAAt/C,EAAAs/C,OACAD,EAAAr/C,EAAAq/C,MAUA,OARAr/C,GAAAs/C,OAAA,SAAAr4C,GACA,MAAAU,WAAAnB,OAAA84C,IAAAr4C,EAAA,GAAAA,EAAA,MAAAA,EAAAq4C,KAAAr4C,EAAA,IAAAA,EAAA,MAGAjH,EAAAq/C,OAAA,SAAAp4C,GACA,MAAAU,WAAAnB,OAAA64C,GAAAp4C,EAAA,GAAAA,EAAA,GAAAA,EAAAT,OAAA,EAAAS,EAAA,YAAAA,EAAAo4C,KAAAp4C,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAGAo4C,GAAA,SACAhC,MAAA,SAGA19C,GAAA+pD,QAAAnG,GACA5jD,EAAAgqD,UAAAnG,GACA7jD,EAAAiqD,YAAAlG,GACA/jD,EAAAkqD,UAAAlG,GACAhkD,EAAAmqD,cAAA9hC,GACAroB,EAAAoqD,YAAArjD,GACA/G,EAAAqqD,YAAAnS,GACAl4C,EAAAsqD,aAAAvR,GACA/4C,EAAAuqD,eAAA9Q,GACAz5C,EAAAwqD,eAAAvV,GACAj1C,EAAAyqD,UAAA5jD,GACA7G,EAAA6hB,QAAAhS,GACA7P,EAAA0qD,UAAAtC,GACApoD,EAAA2qD,aAAAtC,GACAroD,EAAA4qD,sBAAA7B,GACA/oD,EAAA6qD,yBAAAhC,GACA7oD,EAAA8qD,wBAAA7B,GACAjpD,EAAA+qD,2BAAA/B,GACAhpD,EAAAgrD,kBAAA7B,GACAnpD,EAAAirD,qBAAAvJ,GACA1hD,EAAAkrD,kBAAA/C,GACAnoD,EAAAmrD,qBAAAxK,GACA3gD,EAAAorD,oBAAA/B,GACArpD,EAAAqrD,uBAAAvJ,GACA9hD,EAAAsrD,mBAAAlC,GACAppD,EAAAurD,sBAAA1J,GACA7hD,EAAAwrD,YAAAlC,GACAtpD,EAAAyrD,eAAAxJ,GACAjiD,EAAA0rD,YAAAnC,GACAvpD,EAAA2rD,cAAArkB,GACAtnC,EAAA4rD,qBAAAvM,GACAr/C,EAAA8hB,YAAAonC,GACAlpD,EAAA6rD,eAAAvK,GACAthD,EAAA8rD,gBAAAlC,GACA5pD,EAAA+rD,mBAAAxJ,GACAviD,EAAAgsD,iBAAAnC,GACA7pD,EAAAisD,oBAAAzJ,GACAxiD,EAAAksD,sBAAApC,GACA9pD,EAAAmsD,yBAAA1J,GACAziD,EAAAosD,YAAAtY,GACA9zC,EAAA49C,aACA59C,EAAAqsD,aAAAnE,GAEAnmD,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,O1BuqLxC,SAAUZ,EAAQD,EAASH,I2BljRjC,SAAAY,EAAAC,GACAA,EAAAV,EAAAH,EAAA,KAGCc,KAAA,SAAAX,EAAAssD,GAAoC,YAErC,SAAAC,GAAAn+B,EAAA24B,EAAAyF,EAAAC,EAAAC,GACA,GAAAz+B,GAAAG,IAAAJ,EAAAC,EAAAG,CACA,aAAAA,EAAA,EAAAH,EAAAD,GAAA+4B,GACA,IAAA94B,EAAA,EAAAD,GAAAw+B,GACA,IAAAp+B,EAAA,EAAAH,EAAA,EAAAD,GAAAy+B,EACAz+B,EAAA0+B,GAAA,EAiCA,QAAAC,GAAAhiD,EAAAiZ,GACA,gBAAA7T,GACA,MAAApF,GAAAoF,EAAA6T,GAIA,QAAAgpC,GAAAjiD,EAAA2Q,EAAAqS,GACA,MAAAhjB,GAAAga,KAAAkB,IAAAlb,EAAAgjB,GAAArS,EAAAqJ,KAAAkB,IAAAvK,EAAAqS,GAAAhjB,EAAAgjB,EAAA,EAAAA,EAAA,SAAA5d,GACA,MAAA4U,MAAAkB,IAAAlb,EAAAoF,EAAAuL,EAAAqS,IAIA,QAAAk/B,GAAAliD,EAAA2Q,GACA,GAAAsI,GAAAtI,EAAA3Q,CACA,OAAAiZ,GAAA+oC,EAAAhiD,EAAAiZ,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAe,KAAAC,MAAAhB,EAAA,KAAAA,GAAA2E,EAAAL,MAAAvd,GAAA2Q,EAAA3Q,GAGA,QAAAmiD,GAAAn/B,GACA,YAAAA,MAAAo/B,EAAA,SAAApiD,EAAA2Q,GACA,MAAAA,GAAA3Q,EAAAiiD,EAAAjiD,EAAA2Q,EAAAqS,GAAApF,EAAAL,MAAAvd,GAAA2Q,EAAA3Q,IAIA,QAAAoiD,GAAApiD,EAAA2Q,GACA,GAAAsI,GAAAtI,EAAA3Q,CACA,OAAAiZ,GAAA+oC,EAAAhiD,EAAAiZ,GAAA2E,EAAAL,MAAAvd,GAAA2Q,EAAA3Q,GAyBA,QAAAqiD,GAAAC,GACA,gBAAApoC,GACA,GAIA/d,GAAAomD,EAJAjmC,EAAApC,EAAAhe,OACAylB,EAAA,GAAA5qB,OAAAulB,GACAtT,EAAA,GAAAjS,OAAAulB,GACA3L,EAAA,GAAA5Z,OAAAulB,EAEA,KAAAngB,EAAA,EAAeA,EAAAmgB,IAAOngB,EACtBomD,EAAAZ,EAAA9/B,IAAA3H,EAAA/d,IACAwlB,EAAAxlB,GAAAomD,EAAA5gC,GAAA,EACA3Y,EAAA7M,GAAAomD,EAAAv5C,GAAA,EACA2H,EAAAxU,GAAAomD,EAAA5xC,GAAA,CAMA,OAJAgR,GAAA2gC,EAAA3gC,GACA3Y,EAAAs5C,EAAAt5C,GACA2H,EAAA2xC,EAAA3xC,GACA4xC,EAAAzgC,QAAA,EACA,SAAA1c,GAIA,MAHAm9C,GAAA5gC,IAAAvc,GACAm9C,EAAAv5C,IAAA5D,GACAm9C,EAAA5xC,IAAAvL,GACAm9C,EAAA,KA8DA,QAAArzB,GAAAve,GACA,kBACA,MAAAA,IAIA,QAAA9E,GAAA8E,GACA,gBAAAvL,GACA,MAAAuL,GAAAvL,GAAA,IAsGA,QAAAo9C,GAAAtsD,GACA,eAAAA,EAAA2nB,GACA4kC,MAAA3qD,SAAAe,cAAA,OAAA6pD,EAAA5qD,SAAA0B,gBAAAmpD,EAAA7qD,SAAA8qD,aACAH,EAAA5oD,MAAA0jD,UAAArnD,EACAA,EAAAysD,EAAAE,iBAAAH,EAAAjpD,YAAAgpD,GAAA,MAAAK,iBAAA,aACAJ,EAAAp+C,YAAAm+C,GACAvsD,IAAA2B,MAAA,MAAA8Q,MAAA,KACAo6C,GAAA7sD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGA,QAAA8sD,GAAA9sD,GACA,aAAAA,EAAA2nB,GACAolC,MAAAnrD,SAAAa,gBAAA,mCACAsqD,EAAAloD,aAAA,YAAA7E,IACAA,EAAA+sD,EAAA1F,UAAA2F,QAAAC,gBACAjtD,IAAAgqB,OACA6iC,EAAA7sD,EAAA8J,EAAA9J,EAAAya,EAAAza,EAAAP,EAAAO,EAAA+iB,EAAA/iB,EAAAsH,EAAAtH,EAAAqjB,IAFAsE,GAKA,QAAAulC,GAAAvjB,EAAAwjB,EAAAC,EAAAC,GAEA,QAAA5kC,GAAAzP,GACA,MAAAA,GAAAhT,OAAAgT,EAAAyP,MAAA,OAGA,QAAAq0B,GAAAwQ,EAAAC,EAAAC,EAAAC,EAAAz0C,EAAAwrB,GACA,GAAA8oB,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAxnD,GAAA+S,EAAAnQ,KAAA,kBAAAskD,EAAA,KAAAC,EACA5oB,GAAA37B,MAAc5C,IAAA,EAAAqe,EAAAyC,EAAAumC,EAAAE,KAA+BvnD,IAAA,EAAAqe,EAAAyC,EAAAwmC,EAAAE,UACxCD,GAAAC,IACLz0C,EAAAnQ,KAAA,aAAA2kD,EAAAL,EAAAM,EAAAL,GAIA,QAAAvO,GAAA/0C,EAAA2Q,EAAAzB,EAAAwrB,GACA16B,IAAA2Q,GACA3Q,EAAA2Q,EAAA,IAAAA,GAAA,IAAgCA,EAAA3Q,EAAA,MAAAA,GAAA,KAChC06B,EAAA37B,MAAc5C,EAAA+S,EAAAnQ,KAAA4f,EAAAzP,GAAA,eAAAq0C,GAAA,EAAA/oC,EAAAyC,EAAAjd,EAAA2Q,MACTA,GACLzB,EAAAnQ,KAAA4f,EAAAzP,GAAA,UAAAyB,EAAA4yC,GAIA,QAAAK,GAAA5jD,EAAA2Q,EAAAzB,EAAAwrB,GACA16B,IAAA2Q,EACA+pB,EAAA37B,MAAc5C,EAAA+S,EAAAnQ,KAAA4f,EAAAzP,GAAA,cAAAq0C,GAAA,EAAA/oC,EAAAyC,EAAAjd,EAAA2Q,KACTA,GACLzB,EAAAnQ,KAAA4f,EAAAzP,GAAA,SAAAyB,EAAA4yC,GAIA,QAAAxQ,GAAAyQ,EAAAC,EAAAC,EAAAC,EAAAz0C,EAAAwrB,GACA,GAAA8oB,IAAAE,GAAAD,IAAAE,EAAA,CACA,GAAAxnD,GAAA+S,EAAAnQ,KAAA4f,EAAAzP,GAAA,2BACAwrB,GAAA37B,MAAc5C,IAAA,EAAAqe,EAAAyC,EAAAumC,EAAAE,KAA+BvnD,IAAA,EAAAqe,EAAAyC,EAAAwmC,EAAAE,SACxC,KAAAD,GAAA,IAAAC,GACLz0C,EAAAnQ,KAAA4f,EAAAzP,GAAA,SAAAw0C,EAAA,IAAAC,EAAA,KAIA,gBAAA3jD,EAAA2Q,GACA,GAAAzB,MACAwrB,IAOA,OANA16B,GAAA6/B,EAAA7/B,GAAA2Q,EAAAkvB,EAAAlvB,GACAqiC,EAAAhzC,EAAA6jD,WAAA7jD,EAAA8jD,WAAAnzC,EAAAkzC,WAAAlzC,EAAAmzC,WAAA50C,EAAAwrB,GACAqa,EAAA/0C,EAAA+0C,OAAApkC,EAAAokC,OAAA7lC,EAAAwrB,GACAkpB,EAAA5jD,EAAA4jD,MAAAjzC,EAAAizC,MAAA10C,EAAAwrB,GACAqY,EAAA/yC,EAAA+jD,OAAA/jD,EAAAgkD,OAAArzC,EAAAozC,OAAApzC,EAAAqzC,OAAA90C,EAAAwrB,GACA16B,EAAA2Q,EAAA,KACA,SAAAvL,GAEA,IADA,GAAAmH,GAAApQ,GAAA,EAAAmgB,EAAAoe,EAAAx+B,SACAC,EAAAmgB,GAAApN,GAAA3C,EAAAmuB,EAAAv+B,OAAAoQ,EAAAiO,EAAApV,EACA,OAAA8J,GAAAf,KAAA,MAaA,QAAAsgB,GAAAjU,GACA,QAAAA,EAAAR,KAAAk+B,IAAA19B,IAAA,EAAAA,GAAA,EAGA,QAAAkU,GAAAlU,GACA,QAAAA,EAAAR,KAAAk+B,IAAA19B,IAAA,EAAAA,GAAA,EAGA,QAAAypC,GAAAzpC,GACA,QAAAA,EAAAR,KAAAk+B,IAAA,EAAA19B,IAAA,IAAAA,EAAA,GAmDA,QAAA0pC,GAAAC,GACA,gBAAA11C,EAAAO,GACA,GAAA+S,GAAAoiC,GAAA11C,EAAAkzC,EAAAx/B,IAAA1T,IAAAsT,GAAA/S,EAAA2yC,EAAAx/B,IAAAnT,IAAA+S,GACA7S,EAAAkzC,EAAA3zC,EAAAS,EAAAF,EAAAE,GACA8S,EAAAogC,EAAA3zC,EAAAuT,EAAAhT,EAAAgT,GACAF,EAAAsgC,EAAA3zC,EAAAqT,QAAA9S,EAAA8S,QACA,iBAAA1c,GAKA,MAJAqJ,GAAAsT,IAAA3c,GACAqJ,EAAAS,IAAA9J,GACAqJ,EAAAuT,IAAA5c,GACAqJ,EAAAqT,UAAA1c,GACAqJ,EAAA,KAQA,QAAA21C,GAAA31C,EAAAO,GACA,GAAAgT,GAAAogC,GAAA3zC,EAAAkzC,EAAAv+B,IAAA3U,IAAAuT,GAAAhT,EAAA2yC,EAAAv+B,IAAApU,IAAAgT,GACAhiB,EAAAoiD,EAAA3zC,EAAAzO,EAAAgP,EAAAhP,GACA2Q,EAAAyxC,EAAA3zC,EAAAkC,EAAA3B,EAAA2B,GACAmR,EAAAsgC,EAAA3zC,EAAAqT,QAAA9S,EAAA8S,QACA,iBAAA1c,GAKA,MAJAqJ,GAAAuT,IAAA5c,GACAqJ,EAAAzO,IAAAoF,GACAqJ,EAAAkC,IAAAvL,GACAqJ,EAAAqT,UAAA1c,GACAqJ,EAAA,IAIA,QAAA41C,GAAAF,GACA,gBAAA11C,EAAAO,GACA,GAAA+S,GAAAoiC,GAAA11C,EAAAkzC,EAAA79B,IAAArV,IAAAsT,GAAA/S,EAAA2yC,EAAA79B,IAAA9U,IAAA+S,GACApsB,EAAAysD,EAAA3zC,EAAA9Y,EAAAqZ,EAAArZ,GACAqsB,EAAAogC,EAAA3zC,EAAAuT,EAAAhT,EAAAgT,GACAF,EAAAsgC,EAAA3zC,EAAAqT,QAAA9S,EAAA8S,QACA,iBAAA1c,GAKA,MAJAqJ,GAAAsT,IAAA3c,GACAqJ,EAAA9Y,IAAAyP,GACAqJ,EAAAuT,IAAA5c,GACAqJ,EAAAqT,UAAA1c,GACAqJ,EAAA,KAQA,QAAA61C,GAAAH,GACA,eAAAI,GAAAvhC,GAGA,QAAAwhC,GAAA/1C,EAAAO,GACA,GAAA+S,GAAAoiC,GAAA11C,EAAAkzC,EAAAn9B,UAAA/V,IAAAsT,GAAA/S,EAAA2yC,EAAAn9B,UAAAxV,IAAA+S,GACA7S,EAAAkzC,EAAA3zC,EAAAS,EAAAF,EAAAE,GACA8S,EAAAogC,EAAA3zC,EAAAuT,EAAAhT,EAAAgT,GACAF,EAAAsgC,EAAA3zC,EAAAqT,QAAA9S,EAAA8S,QACA,iBAAA1c,GAKA,MAJAqJ,GAAAsT,IAAA3c,GACAqJ,EAAAS,IAAA9J,GACAqJ,EAAAuT,IAAAhI,KAAAkB,IAAA9V,EAAA4d,IACAvU,EAAAqT,UAAA1c,GACAqJ,EAAA,IAMA,MAlBAuU,MAgBAwhC,EAAArC,MAAAoC,EAEAC,GACG,GA3eH,GA4QA/B,GACAC,EACAC,EACAM,EA/QAwB,EAAA,SAAA1nC,GACA,GAAAT,GAAAS,EAAA7gB,OAAA,CACA,iBAAAkJ,GACA,GAAAjJ,GAAAiJ,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAkX,EAAA,GAAAtC,KAAAgB,MAAA5V,EAAAkX,GACAulC,EAAA9kC,EAAA5gB,GACA2lD,EAAA/kC,EAAA5gB,EAAA,GACAigD,EAAAjgD,EAAA,EAAA4gB,EAAA5gB,EAAA,KAAA0lD,EAAAC,EACAC,EAAA5lD,EAAAmgB,EAAA,EAAAS,EAAA5gB,EAAA,KAAA2lD,EAAAD,CACA,OAAAD,IAAAx8C,EAAAjJ,EAAAmgB,KAAA8/B,EAAAyF,EAAAC,EAAAC,KAIA2C,EAAA,SAAA3nC,GACA,GAAAT,GAAAS,EAAA7gB,MACA,iBAAAkJ,GACA,GAAAjJ,GAAA6d,KAAAgB,QAAA5V,GAAA,OAAAA,KAAAkX,GACA8/B,EAAAr/B,GAAA5gB,EAAAmgB,EAAA,GAAAA,GACAulC,EAAA9kC,EAAA5gB,EAAAmgB,GACAwlC,EAAA/kC,GAAA5gB,EAAA,GAAAmgB,GACAylC,EAAAhlC,GAAA5gB,EAAA,GAAAmgB,EACA,OAAAslC,IAAAx8C,EAAAjJ,EAAAmgB,KAAA8/B,EAAAyF,EAAAC,EAAAC,KAIAnkC,EAAA,SAAApD,GACA,kBACA,MAAAA,KAgCAmqC,EAAA,QAAAC,GAAA5hC,GAGA,QAAA6hC,GAAAp2C,EAAAO,GACA,GAAA2S,GAAA4gC,GAAA9zC,EAAAkzC,EAAA9/B,IAAApT,IAAAkT,GAAA3S,EAAA2yC,EAAA9/B,IAAA7S,IAAA2S,GACA3Y,EAAAu5C,EAAA9zC,EAAAzF,EAAAgG,EAAAhG,GACA2H,EAAA4xC,EAAA9zC,EAAAkC,EAAA3B,EAAA2B,GACAmR,EAAAsgC,EAAA3zC,EAAAqT,QAAA9S,EAAA8S,QACA,iBAAA1c,GAKA,MAJAqJ,GAAAkT,IAAAvc,GACAqJ,EAAAzF,IAAA5D,GACAqJ,EAAAkC,IAAAvL,GACAqJ,EAAAqT,UAAA1c,GACAqJ,EAAA,IAZA,GAAA8zC,GAAAJ,EAAAn/B,EAkBA,OAFA6hC,GAAA1C,MAAAyC,EAEAC,GACC,GA4BDC,EAAAzC,EAAAoC,GACAM,EAAA1C,EAAAqC,GAEAroD,EAAA,SAAA2D,EAAA2Q,GACA,GAIAxU,GAJA6oD,EAAAr0C,IAAAzU,OAAA,EACA+oD,EAAAjlD,EAAAga,KAAA2D,IAAAqnC,EAAAhlD,EAAA9D,QAAA,EACAse,EAAA,GAAAzjB,OAAAiuD,GACArvD,EAAA,GAAAoB,OAAAiuD,EAGA,KAAA7oD,EAAA,EAAaA,EAAA8oD,IAAQ9oD,EAAAqe,EAAAre,GAAAjG,EAAA8J,EAAA7D,GAAAwU,EAAAxU,GACrB,MAAQA,EAAA6oD,IAAQ7oD,EAAAxG,EAAAwG,GAAAwU,EAAAxU,EAEhB,iBAAAiJ,GACA,IAAAjJ,EAAA,EAAeA,EAAA8oD,IAAQ9oD,EAAAxG,EAAAwG,GAAAqe,EAAAre,GAAAiJ,EACvB,OAAAzP,KAIA48B,EAAA,SAAAvyB,EAAA2Q,GACA,GAAAsI,GAAA,GAAAuZ,KACA,OAAAxyB,MAAA2Q,GAAA3Q,EAAA,SAAAoF,GACA,MAAA6T,GAAA2Z,QAAA5yB,EAAA2Q,EAAAvL,GAAA6T,IAIAgE,EAAA,SAAAjd,EAAA2Q,GACA,MAAA3Q,MAAA2Q,GAAA3Q,EAAA,SAAAoF,GACA,MAAApF,GAAA2Q,EAAAvL,IAIAu4B,EAAA,SAAA39B,EAAA2Q,GACA,GAEAnF,GAFArP,KACAxG,IAGA,QAAAqK,GAAA,gBAAAA,WACA,OAAA2Q,GAAA,gBAAAA,UAEA,KAAAnF,IAAAmF,GACAnF,IAAAxL,GACA7D,EAAAqP,GAAAtV,EAAA8J,EAAAwL,GAAAmF,EAAAnF,IAEA7V,EAAA6V,GAAAmF,EAAAnF,EAIA,iBAAApG,GACA,IAAAoG,IAAArP,GAAAxG,EAAA6V,GAAArP,EAAAqP,GAAApG,EACA,OAAAzP,KAIAuvD,EAAA,8CACAC,EAAA,GAAAz1C,QAAAw1C,EAAAv1C,OAAA,KAcAy1C,EAAA,SAAAplD,EAAA2Q,GACA,GACA00C,GACAC,EACAC,EAHAC,EAAAN,EAAAv2C,UAAAw2C,EAAAx2C,UAAA,EAIAxS,GAAA,EACA+S,KACAwrB,IAMA,KAHA16B,GAAA,GAAA2Q,GAAA,IAGA00C,EAAAH,EAAAtqD,KAAAoF,MACAslD,EAAAH,EAAAvqD,KAAA+V,MACA40C,EAAAD,EAAApgD,OAAAsgD,IACAD,EAAA50C,EAAA9Y,MAAA2tD,EAAAD,GACAr2C,EAAA/S,GAAA+S,EAAA/S,IAAAopD,EACAr2C,IAAA/S,GAAAopD,IAEAF,IAAA,OAAAC,IAAA,IACAp2C,EAAA/S,GAAA+S,EAAA/S,IAAAmpD,EACAp2C,IAAA/S,GAAAmpD,GAEAp2C,IAAA/S,GAAA,KACAu+B,EAAA37B,MAAc5C,IAAAqe,EAAAyC,EAAAooC,EAAAC,MAEdE,EAAAL,EAAAx2C,SAYA,OARA62C,GAAA70C,EAAAzU,SACAqpD,EAAA50C,EAAA9Y,MAAA2tD,GACAt2C,EAAA/S,GAAA+S,EAAA/S,IAAAopD,EACAr2C,IAAA/S,GAAAopD,GAKAr2C,EAAAhT,OAAA,EAAAw+B,EAAA,GACA7uB,EAAA6uB,EAAA,GAAAlgB,GACA0U,EAAAve,IACAA,EAAA+pB,EAAAx+B,OAAA,SAAAkJ,GACA,OAAAmH,GAAApQ,EAAA,EAA4BA,EAAAwU,IAAOxU,EAAA+S,GAAA3C,EAAAmuB,EAAAv+B,OAAAoQ,EAAAiO,EAAApV,EACnC,OAAA8J,GAAAf,KAAA,OAIAjY,EAAA,SAAA8J,EAAA2Q,GACA,GAAAhb,GAAAyP,QAAAuL,EACA,cAAAA,GAAA,YAAAvL,EAAAwY,EAAAjN,IACA,WAAAvL,EAAA6X,EACA,WAAA7X,GAAAzP,EAAAgsD,EAAAhhC,MAAAhQ,OAAAhb,EAAAgvD,GAAAS,EACAz0C,YAAAgxC,GAAAhhC,MAAAgkC,EACAh0C,YAAA6hB,MAAAD,EACAx7B,MAAAD,QAAA6Z,GAAAtU,EACA,kBAAAsU,GAAAqnC,SAAA,kBAAArnC,GAAAyd,UAAA7Q,MAAA5M,GAAAgtB,EACA1gB,GAAAjd,EAAA2Q,IAGAsJ,EAAA,SAAAja,EAAA2Q,GACA,MAAA3Q,MAAA2Q,GAAA3Q,EAAA,SAAAoF,GACA,MAAA4U,MAAAC,MAAAja,EAAA2Q,EAAAvL,KAIAwgC,EAAA,IAAA5rB,KAAAqU,GAEAxQ,GACAgmC,WAAA,EACAC,WAAA,EACA/O,OAAA,EACA6O,MAAA,EACAG,OAAA,EACAC,OAAA,GAGAjB,EAAA,SAAA/iD,EAAA2Q,EAAAhb,EAAAsjB,EAAAzb,EAAA+b,GACA,GAAAwqC,GAAAC,EAAAJ,CAKA,QAJAG,EAAA/pC,KAAAyD,KAAAzd,IAAA2Q,QAAA3Q,GAAA+jD,EAAApzC,GAAAozC,IACAH,EAAA5jD,EAAArK,EAAAgb,EAAAsI,KAAAtjB,GAAAqK,EAAA4jD,EAAA3qC,GAAAtI,EAAAizC,IACAI,EAAAhqC,KAAAyD,KAAA9nB,IAAAsjB,QAAAtjB,GAAAquD,EAAA/qC,GAAA+qC,EAAAJ,GAAAI,GACAhkD,EAAAiZ,EAAAtI,EAAAhb,IAAAqK,KAAA2Q,KAAAizC,KAAAG,OAEAF,WAAArmD,EACAsmD,WAAAvqC,EACAw7B,OAAA/6B,KAAA4J,MAAAjT,EAAA3Q,GAAA4lC,EACAge,MAAA5pC,KAAAw4B,KAAAoR,GAAAhe,EACAme,SACAC,WAsFAyB,EAAArC,EAAAZ,EAAA,qBACAkD,EAAAtC,EAAAJ,EAAA,cAEA2C,EAAA3rC,KAAA4rC,MACAC,EAAA,EACAC,EAAA,EACA7N,EAAA,MAgBA8N,EAAA,SAAA3gB,EAAAyU,GACA,GAKA19C,GACA6pD,EANAC,EAAA7gB,EAAA,GAAA8gB,EAAA9gB,EAAA,GAAA+gB,EAAA/gB,EAAA,GACAghB,EAAAvM,EAAA,GAAAwM,EAAAxM,EAAA,GAAAyM,EAAAzM,EAAA,GACA1L,EAAAiY,EAAAH,EACAhY,EAAAoY,EAAAH,EACAxS,EAAAvF,IAAAF,GAKA,IAAAyF,EAAAuE,EACA+N,EAAAhsC,KAAArH,IAAA2zC,EAAAH,GAAAR,EACAxpD,EAAA,SAAAiJ,GACA,OACA6gD,EAAA7gD,EAAA+oC,EACA+X,EAAA9gD,EAAA6oC,EACAkY,EAAAnsC,KAAAk+B,IAAAyN,EAAAvgD,EAAA4gD,SAMA,CACA,GAAAtzB,GAAA1Y,KAAAyD,KAAAi2B,GACAtI,GAAAkb,IAAAH,IAAAL,EAAApS,IAAA,EAAAyS,EAAAN,EAAAnzB,GACA2Y,GAAAib,IAAAH,IAAAL,EAAApS,IAAA,EAAA4S,EAAAT,EAAAnzB,GACAujB,EAAAj8B,KAAArH,IAAAqH,KAAAyD,KAAA2tB,IAAA,GAAAA,GACAmb,EAAAvsC,KAAArH,IAAAqH,KAAAyD,KAAA4tB,IAAA,GAAAA,EACA2a,IAAAO,EAAAtQ,GAAA0P,EACAxpD,EAAA,SAAAiJ,GACA,GAAA8J,GAAA9J,EAAA4gD,EACAQ,EAAA/3B,EAAAwnB,GACA/R,EAAAiiB,GAAAN,EAAAnzB,IAAA8zB,EAAAvC,EAAA0B,EAAAz2C,EAAA+mC,GAAAvnB,EAAAunB,GACA,QACAgQ,EAAA/hB,EAAAiK,EACA+X,EAAAhiB,EAAA+J,EACAkY,EAAAK,EAAA/3B,EAAAk3B,EAAAz2C,EAAA+mC,KAOA,MAFA95C,GAAAsqD,SAAA,IAAAT,EAEA7pD,GAmBAuqD,EAAAxC,EAAAhC,GACAyE,EAAAzC,EAAA9B,GAgCAwE,EAAAvC,EAAAnC,GACA2E,EAAAxC,EAAAjC,GA0BA0E,GAAAxC,EAAApC,GACA6E,GAAAzC,EAAAlC,GAEA4E,GAAA,SAAAC,EAAA3qC,GAEA,OADA4qC,GAAA,GAAAnwD,OAAAulB,GACAngB,EAAA,EAAiBA,EAAAmgB,IAAOngB,EAAA+qD,EAAA/qD,GAAA8qD,EAAA9qD,GAAAmgB,EAAA,GACxB,OAAA4qC,GAGA7xD,GAAAi1C,YAAAp0C,EACAb,EAAA8xD,iBAAA9qD,EACAhH,EAAA+xD,iBAAA3C,EACApvD,EAAAgyD,uBAAA3C,EACArvD,EAAAiyD,gBAAA/0B,EACAl9B,EAAAkyD,kBAAAtqC,EACA5nB,EAAAmyD,kBAAA7pB,EACAtoC,EAAAoyD,iBAAAxtC,EACA5kB,EAAAqyD,kBAAAtC,EACA/vD,EAAAowD,0BACApwD,EAAAqwD,0BACArwD,EAAAsyD,gBAAA5B,EACA1wD,EAAAuyD,eAAAjD,EACAtvD,EAAAwyD,oBAAA/C,EACAzvD,EAAAyyD,0BAAA/C,EACA1vD,EAAA0yD,eAAArB,EACArxD,EAAA2yD,mBAAArB,EACAtxD,EAAA4yD,eAAA7D,EACA/uD,EAAA6yD,eAAAtB,EACAvxD,EAAA8yD,mBAAAtB,EACAxxD,EAAA+yD,qBAAAtB,GACAzxD,EAAAgzD,yBAAAtB,GACA1xD,EAAA2xD,YAEA5vD,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,O3B4jRxC,SAAUZ,EAAQD,EAASH,I4BzlSjC,SAAAY,EAAAC,GACAA,EAAAV,EAAAH,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAGCc,KAAA,SAAAX,EAAAgsC,EAAAinB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/G,GAAoG,YASrG,SAAAgH,GAAAhiB,GAOA,QAAAoM,GAAA95B,GACA,GAAA/hB,GAAA+hB,EAAA,GAAA9c,EAAA+I,EAAAkG,IAAAlU,EACA,KAAAiF,EAAA,CACA,GAAAysD,IAAAC,EAAA,MAAAD,EACA1jD,GAAAmG,IAAAnU,EAAAiF,EAAAge,EAAApb,KAAAka,IAEA,MAAA0tB,IAAAxqC,EAAA,GAAAwqC,EAAAzqC,QAZA,GAAAgJ,GAAAojD,EAAA7jD,MACA0V,KACAyuC,EAAAC,CAoCA,OAlCAliB,GAAA,MAAAA,KAAA9uC,EAAApC,KAAAkxC,GAWAoM,EAAA54B,OAAA,SAAAxd,GACA,IAAAU,UAAAnB,OAAA,MAAAie,GAAAtiB,OACAsiB,MAAAjV,EAAAojD,EAAA7jD,KAEA,KADA,GAAAwU,GAAA/hB,EAAAiF,GAAA,EAAAmgB,EAAA3f,EAAAT,SACAC,EAAAmgB,GAAApX,EAAAg5B,IAAAhnC,GAAA+hB,EAAAtc,EAAAR,IAAA,KAAA+I,EAAAmG,IAAAnU,EAAAijB,EAAApb,KAAAka,GACA,OAAA85B,IAGAA,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAyqC,EAAA9uC,EAAApC,KAAAkH,GAAAo2C,GAAApM,EAAA9uC,SAGAk7C,EAAA6V,QAAA,SAAAjsD,GACA,MAAAU,WAAAnB,QAAA0sD,EAAAjsD,EAAAo2C,GAAA6V,GAGA7V,EAAA+V,KAAA,WACA,MAAAH,KACAxuC,UACAC,MAAAusB,GACAiiB,YAGA7V,EAGA,QAAAgW,KAcA,QAAAC,KACA,GAAA1sC,GAAAnC,IAAAje,OACA8hB,EAAA2oB,EAAA,GAAAA,EAAA,GACAl4B,EAAAk4B,EAAA3oB,EAAA,GACArD,EAAAgsB,EAAA,EAAA3oB,EACAnD,IAAAF,EAAAlM,GAAAuL,KAAAc,IAAA,EAAAwB,EAAA2sC,EAAA,EAAAC,GACAjvC,IAAAY,EAAAb,KAAAgB,MAAAH,IACApM,IAAAkM,EAAAlM,EAAAoM,GAAAyB,EAAA2sC,IAAAl6B,EACAo6B,EAAAtuC,GAAA,EAAAouC,GACAhvC,IAAAxL,EAAAuL,KAAAC,MAAAxL,GAAA06C,EAAAnvC,KAAAC,MAAAkvC,GACA,IAAApsC,GAAAskB,EAAAjnB,MAAAkC,GAAA7X,IAAA,SAAAtI,GAAmD,MAAAsS,GAAAoM,EAAA1e,GACnD,OAAAitD,GAAAprC,EAAAjB,EAAAiB,UAAAjB,GAxBA,GAIAlC,GACAsuC,EALApW,EAAA4V,IAAAC,QAAAv7C,QACA8M,EAAA44B,EAAA54B,OACAivC,EAAArW,EAAA34B,MACAusB,GAAA,KAGA1sB,GAAA,EACAgvC,EAAA,EACAC,EAAA,EACAn6B,EAAA,EAoEA,cAlEAgkB,GAAA6V,QAgBA7V,EAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAie,EAAAxd,GAAAqsD,KAAA7uC,KAGA44B,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAyqC,IAAAhqC,EAAA,IAAAA,EAAA,IAAAqsD,KAAAriB,EAAA9uC,SAGAk7C,EAAAsW,WAAA,SAAA1sD,GACA,MAAAgqC,KAAAhqC,EAAA,IAAAA,EAAA,IAAAsd,GAAA,EAAA+uC,KAGAjW,EAAAoW,UAAA,WACA,MAAAA,IAGApW,EAAAl4B,KAAA,WACA,MAAAA,IAGAk4B,EAAA94B,MAAA,SAAAtd,GACA,MAAAU,WAAAnB,QAAA+d,IAAAtd,EAAAqsD,KAAA/uC,GAGA84B,EAAAphB,QAAA,SAAAh1B,GACA,MAAAU,WAAAnB,QAAA+sD,EAAAC,EAAAlvC,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAAhhB,IAAAqsD,KAAAC,GAGAlW,EAAAkW,aAAA,SAAAtsD,GACA,MAAAU,WAAAnB,QAAA+sD,EAAAjvC,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAAhhB,IAAAqsD,KAAAC,GAGAlW,EAAAmW,aAAA,SAAAvsD,GACA,MAAAU,WAAAnB,QAAAgtD,EAAAlvC,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAAhhB,IAAAqsD,KAAAE,GAGAnW,EAAAhkB,MAAA,SAAApyB,GACA,MAAAU,WAAAnB,QAAA6yB,EAAA/U,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAAhhB,IAAAqsD,KAAAj6B,GAGAgkB,EAAA+V,KAAA,WACA,MAAAC,KACA5uC,YACAC,MAAAusB,GACA1sB,SACAgvC,gBACAC,gBACAn6B,UAGAi6B,IAGA,QAAAM,GAAAvW,GACA,GAAA+V,GAAA/V,EAAA+V,IAUA,OARA/V,GAAAphB,QAAAohB,EAAAmW,mBACAnW,GAAAkW,mBACAlW,GAAAmW,aAEAnW,EAAA+V,KAAA,WACA,MAAAQ,GAAAR,MAGA/V,EAGA,QAAArQ,KACA,MAAA4mB,GAAAP,IAAAE,aAAA,IAeA,QAAAM,GAAAvpD,EAAA2Q,GACA,OAAAA,GAAA3Q,MACA,SAAAwa,GAAqB,OAAAA,EAAAxa,GAAA2Q,GACrBiN,EAAAjN,GAGA,QAAA64C,GAAAC,GACA,gBAAAzpD,EAAA2Q,GACA,GAAAsI,GAAAwwC,EAAAzpD,KAAA2Q,KACA,iBAAA6J,GAAwB,MAAAA,IAAAxa,EAAA,EAAAwa,GAAA7J,EAAA,EAAAsI,EAAAuB,KAIxB,QAAAkvC,GAAAC,GACA,gBAAA3pD,EAAA2Q,GACA,GAAAgR,GAAAgoC,EAAA3pD,KAAA2Q,KACA,iBAAAvL,GAAwB,MAAAA,IAAA,EAAApF,EAAAoF,GAAA,EAAAuL,EAAAgR,EAAAvc,KAIxB,QAAAwkD,GAAAzvC,EAAAwsB,EAAA8iB,EAAAE,GACA,GAAAl3B,GAAAtY,EAAA,GAAAuY,EAAAvY,EAAA,GAAA87B,EAAAtP,EAAA,GAAA4f,EAAA5f,EAAA,EAGA,OAFAjU,GAAAD,KAAAg3B,EAAA/2B,EAAAD,GAAAwjB,EAAA0T,EAAApD,EAAAtQ,KACAxjB,EAAAg3B,EAAAh3B,EAAAC,GAAAujB,EAAA0T,EAAA1T,EAAAsQ,IACA,SAAA/rC,GAAsB,MAAAy7B,GAAAxjB,EAAAjY,KAGtB,QAAAqvC,GAAA1vC,EAAAwsB,EAAA8iB,EAAAE,GACA,GAAAjnD,GAAAsX,KAAA2D,IAAAxD,EAAAje,OAAAyqC,EAAAzqC,QAAA,EACA+c,EAAA,GAAAliB,OAAA2L,GACAif,EAAA,GAAA5qB,OAAA2L,GACAvG,GAAA,CAQA,KALAge,EAAAzX,GAAAyX,EAAA,KACAA,IAAAtiB,QAAAmmB,UACA2oB,IAAA9uC,QAAAmmB,aAGA7hB,EAAAuG,GACAuW,EAAA9c,GAAAstD,EAAAtvC,EAAAhe,GAAAge,EAAAhe,EAAA,IACAwlB,EAAAxlB,GAAAwtD,EAAAhjB,EAAAxqC,GAAAwqC,EAAAxqC,EAAA,GAGA,iBAAAqe,GACA,GAAAre,GAAAklC,EAAAhhB,OAAAlG,EAAAK,EAAA,EAAA9X,GAAA,CACA,OAAAif,GAAAxlB,GAAA8c,EAAA9c,GAAAqe,KAIA,QAAAsuC,GAAAn5C,EAAA9R,GACA,MAAAA,GACAsc,OAAAxK,EAAAwK,UACAC,MAAAzK,EAAAyK,SACAkwB,YAAA36B,EAAA26B,eACAwf,MAAAn6C,EAAAm6C,SAKA,QAAAC,GAAAN,EAAAE,GASA,QAAAX,KAGA,MAFAgB,GAAAhwC,KAAA2D,IAAAxD,EAAAje,OAAAyqC,EAAAzqC,QAAA,EAAA2tD,EAAAD,EACAK,EAAAC,EAAA,KACAnX,EAGA,QAAAA,GAAAv4B,GACA,OAAAyvC,MAAAD,EAAA7vC,EAAAwsB,EAAAmjB,EAAAN,EAAAC,KAAAU,MAAA3vC,GAfA,GAIAwvC,GACAC,EACAC,EANA/vC,EAAAiwC,EACAzjB,EAAAyjB,EACAD,EAAA5B,EAAAje,YACAwf,GAAA,CAuCA,OAxBA/W,GAAA3J,OAAA,SAAApmB,GACA,OAAAknC,MAAAF,EAAArjB,EAAAxsB,EAAAovC,EAAAO,EAAAJ,EAAAC,SAAA3mC,IAGA+vB,EAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAie,EAAAkwC,EAAA50D,KAAAkH,EAAAsgB,GAAA+rC,KAAA7uC,EAAAtiB,SAGAk7C,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAyqC,EAAA9uC,EAAApC,KAAAkH,GAAAqsD,KAAAriB,EAAA9uC,SAGAk7C,EAAAsW,WAAA,SAAA1sD,GACA,MAAAgqC,GAAA9uC,EAAApC,KAAAkH,GAAAwtD,EAAA5B,EAAAd,iBAAAuB,KAGAjW,EAAA+W,MAAA,SAAAntD,GACA,MAAAU,WAAAnB,QAAA4tD,IAAAntD,EAAAqsD,KAAAc,GAGA/W,EAAAzI,YAAA,SAAA3tC,GACA,MAAAU,WAAAnB,QAAAiuD,EAAAxtD,EAAAqsD,KAAAmB,GAGAnB,IAgCA,QAAAsB,GAAAvX,GACA,GAAA54B,GAAA44B,EAAA54B,MAmDA,OAjDA44B,GAAAh1B,MAAA,SAAAnD,GACA,GAAA3B,GAAAkB,GACA,OAAAknB,GAAAtjB,MAAA9E,EAAA,GAAAA,IAAA/c,OAAA,SAAA0e,EAAA,GAAAA,IAGAm4B,EAAAwX,WAAA,SAAA3vC,EAAAgU,GACA,MAAA27B,GAAApwC,IAAAS,EAAAgU,IAGAmkB,EAAAyX,KAAA,SAAA5vC,GACA,MAAAA,MAAA,GAEA,IAKAC,GALA5B,EAAAkB,IACAuC,EAAA,EACAC,EAAA1D,EAAA/c,OAAA,EACAuS,EAAAwK,EAAAyD,GACA/B,EAAA1B,EAAA0D,EA8BA,OA3BAhC,GAAAlM,IACAoM,EAAApM,IAAAkM,IAAAE,EACAA,EAAA6B,IAAAC,IAAA9B,GAGAA,EAAAwmB,EAAA3mB,cAAAjM,EAAAkM,EAAAC,GAEAC,EAAA,GACApM,EAAAuL,KAAAgB,MAAAvM,EAAAoM,KACAF,EAAAX,KAAA8D,KAAAnD,EAAAE,KACAA,EAAAwmB,EAAA3mB,cAAAjM,EAAAkM,EAAAC,IACKC,EAAA,IACLpM,EAAAuL,KAAA8D,KAAArP,EAAAoM,KACAF,EAAAX,KAAAgB,MAAAL,EAAAE,KACAA,EAAAwmB,EAAA3mB,cAAAjM,EAAAkM,EAAAC,IAGAC,EAAA,GACA5B,EAAAyD,GAAA1C,KAAAgB,MAAAvM,EAAAoM,KACA5B,EAAA0D,GAAA3C,KAAA8D,KAAAnD,EAAAE,KACAV,EAAAlB,IACK4B,EAAA,IACL5B,EAAAyD,GAAA1C,KAAA8D,KAAArP,EAAAoM,KACA5B,EAAA0D,GAAA3C,KAAAgB,MAAAL,EAAAE,KACAV,EAAAlB,IAGA85B,GAGAA,EAGA,QAAAiP,KACA,GAAAjP,GAAAgX,EAAAR,EAAAhB,EAAAhB,kBAMA,OAJAxU,GAAA+V,KAAA,WACA,MAAAA,GAAA/V,EAAAiP,MAGAsI,EAAAvX,GAGA,QAAAl1B,KAGA,QAAAk1B,GAAAv4B,GACA,OAAAA,EAHA,GAAAL,IAAA,IAgBA,OAVA44B,GAAA3J,OAAA2J,EAEAA,EAAA54B,OAAA44B,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAie,EAAAkwC,EAAA50D,KAAAkH,EAAAsgB,GAAA81B,GAAA54B,EAAAtiB,SAGAk7C,EAAA+V,KAAA,WACA,MAAAjrC,KAAA1D,WAGAmwC,EAAAvX,GAsBA,QAAA0W,GAAAzpD,EAAA2Q,GACA,OAAAA,EAAAqJ,KAAArH,IAAAhC,EAAA3Q,IACA,SAAAwa,GAAqB,MAAAR,MAAArH,IAAA6H,EAAAxa,GAAA2Q,GACrBiN,EAAAjN,GAGA,QAAAg5C,GAAA3pD,EAAA2Q,GACA,MAAA3Q,GAAA,EACA,SAAAoF,GAAqB,OAAA4U,KAAAkB,KAAAvK,EAAAvL,GAAA4U,KAAAkB,KAAAlb,EAAA,EAAAoF,IACrB,SAAAA,GAAqB,MAAA4U,MAAAkB,IAAAvK,EAAAvL,GAAA4U,KAAAkB,IAAAlb,EAAA,EAAAoF,IAGrB,QAAAqlD,GAAAjwC,GACA,MAAAyD,UAAAzD,KAAA,KAAAA,KAAA,IAAAA,EAGA,QAAAkwC,GAAApoD,GACA,YAAAA,EAAAmoD,EACAnoD,IAAA0X,KAAAqK,EAAArK,KAAAk+B,IACA,SAAA19B,GAAqB,MAAAR,MAAAkB,IAAA5Y,EAAAkY,IAGrB,QAAAmwC,GAAAroD,GACA,MAAAA,KAAA0X,KAAAqK,EAAArK,KAAArH,IACA,KAAArQ,GAAA0X,KAAA4wC,OACA,IAAAtoD,GAAA0X,KAAA6wC,OACAvoD,EAAA0X,KAAArH,IAAArQ,GAAA,SAAAkY,GAA8C,MAAAR,MAAArH,IAAA6H,GAAAlY,IAG9C,QAAAwoD,GAAAvxC,GACA,gBAAAiB,GACA,OAAAjB,GAAAiB,IAIA,QAAA7H,KAOA,QAAAq2C,KAGA,MAFA+B,GAAAJ,EAAAroD,GAAA0oD,EAAAN,EAAApoD,GACA6X,IAAA,OAAA4wC,EAAAD,EAAAC,GAAAC,EAAAF,EAAAE,IACAjY,EATA,GAAAA,GAAAgX,EAAAN,EAAAE,GAAAxvC,QAAA,OACAA,EAAA44B,EAAA54B,OACA7X,EAAA,GACAyoD,EAAAJ,EAAA,IACAK,EAAAN,EAAA,GAgFA,OAxEA3X,GAAAzwC,KAAA,SAAA3F,GACA,MAAAU,WAAAnB,QAAAoG,GAAA3F,EAAAqsD,KAAA1mD,GAGAywC,EAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAie,EAAAxd,GAAAqsD,KAAA7uC,KAGA44B,EAAAh1B,MAAA,SAAAnD,GACA,GAGA+G,GAHA1I,EAAAkB,IACA+pB,EAAAjrB,EAAA,GACAxN,EAAAwN,IAAA/c,OAAA,IAGAylB,EAAAlW,EAAAy4B,KAAA/nC,EAAA+nC,IAAAz4B,IAAAtP,EAEA,IAEAvG,GACA4V,EACApG,EAJAjJ,EAAA4uD,EAAA7mB,GACAxhC,EAAAqoD,EAAAt/C,GAIA6Q,EAAA,MAAA1B,EAAA,IAAAA,EACAsI,IAEA,MAAA5gB,EAAA,IAAAI,EAAAvG,EAAAmgB,GAEA,GADAngB,EAAA6d,KAAAC,MAAA9d,GAAA,EAAAuG,EAAAsX,KAAAC,MAAAvX,GAAA,EACAwhC,EAAA,QAAuB/nC,EAAAuG,IAAOvG,EAC9B,IAAAqP,EAAA,EAAA5V,EAAAo1D,EAAA7uD,GAAgCqP,EAAAlJ,IAAUkJ,EAE1C,GADApG,EAAAxP,EAAA4V,IACApG,EAAA8+B,GAAA,CACA,GAAA9+B,EAAAqG,EAAA,KACAyX,GAAAnkB,KAAAqG,QAEO,MAAYjJ,EAAAuG,IAAOvG,EAC1B,IAAAqP,EAAAlJ,EAAA,EAAA1M,EAAAo1D,EAAA7uD,GAAuCqP,GAAA,IAAQA,EAE/C,GADApG,EAAAxP,EAAA4V,IACApG,EAAA8+B,GAAA,CACA,GAAA9+B,EAAAqG,EAAA,KACAyX,GAAAnkB,KAAAqG,QAIA8d,GAAAme,EAAAtjB,MAAA5hB,EAAAuG,EAAAsX,KAAA2D,IAAAjb,EAAAvG,EAAAmgB,IAAA7X,IAAAumD,EAGA,OAAArpC,GAAAuB,EAAAlF,UAAAkF,GAGA6vB,EAAAwX,WAAA,SAAA3vC,EAAAgU,GAGA,GAFA,MAAAA,MAAA,KAAAtsB,EAAA,WACA,kBAAAssB,OAAA45B,EAAA5nC,OAAAgO,IACAhU,IAAA8W,IAAA,MAAA9C,EACA,OAAAhU,MAAA,GACA,IAAApP,GAAAwO,KAAAc,IAAA,EAAAxY,EAAAsY,EAAAm4B,EAAAh1B,QAAA7hB,OACA,iBAAA+c,GACA,GAAA9c,GAAA8c,EAAA+xC,EAAAhxC,KAAAC,MAAA8wC,EAAA9xC,IAEA,OADA9c,GAAAmG,IAAA,KAAAnG,GAAAmG,GACAnG,GAAAqP,EAAAojB,EAAA3V,GAAA,KAIA85B,EAAAyX,KAAA,WACA,MAAArwC,GAAAqwC,EAAArwC,KACAa,MAAA,SAAAR,GAA0B,MAAAwwC,GAAAhxC,KAAAgB,MAAA+vC,EAAAvwC,MAC1BsD,KAAA,SAAAtD,GAAyB,MAAAwwC,GAAAhxC,KAAA8D,KAAAitC,EAAAvwC,UAIzBu4B,EAAA+V,KAAA,WACA,MAAAA,GAAA/V,EAAApgC,IAAArQ,UAGAywC,EAGA,QAAAkY,GAAAzwC,EAAAsV,GACA,MAAAtV,GAAA,GAAAR,KAAAkB,KAAAV,EAAAsV,GAAA9V,KAAAkB,IAAAV,EAAAsV,GAGA,QAAA5U,KAKA,QAAAuuC,GAAAzpD,EAAA2Q,GACA,OAAAA,EAAAs6C,EAAAt6C,EAAAmf,IAAA9vB,EAAAirD,EAAAjrD,EAAA8vB,KACA,SAAAtV,GAAuB,OAAAywC,EAAAzwC,EAAAsV,GAAA9vB,GAAA2Q,GACvBiN,EAAAjN,GAGA,QAAAg5C,GAAA3pD,EAAA2Q,GAEA,MADAA,GAAAs6C,EAAAt6C,EAAAmf,IAAA9vB,EAAAirD,EAAAjrD,EAAA8vB,IACA,SAAA1qB,GAAwB,MAAA6lD,GAAAjrD,EAAA2Q,EAAAvL,EAAA,EAAA0qB,IAZxB,GAAAA,GAAA,EACAijB,EAAAgX,EAAAN,EAAAE,GACAxvC,EAAA44B,EAAA54B,MAqBA,OARA44B,GAAAjjB,SAAA,SAAAnzB,GACA,MAAAU,WAAAnB,QAAA4zB,GAAAnzB,EAAAwd,QAAA2V,GAGAijB,EAAA+V,KAAA,WACA,MAAAA,GAAA/V,EAAA73B,IAAA4U,cAGAw6B,EAAAvX,GAGA,QAAAt1B,KACA,MAAAvC,KAAA4U,SAAA,IAGA,QAAAo7B,KAKA,QAAAlC,KACA,GAAA7sD,GAAA,EAAAmgB,EAAAtC,KAAAc,IAAA,EAAA6rB,EAAAzqC,OAEA,KADA4iB,EAAA,GAAA/nB,OAAAulB,EAAA,KACAngB,EAAAmgB,GAAAwC,EAAA3iB,EAAA,GAAAklC,EAAAtiB,SAAA5E,EAAAhe,EAAAmgB,EACA,OAAAy2B,GAGA,QAAAA,GAAAv4B,GACA,IAAA+C,MAAA/C,MAAA,MAAAmsB,GAAAtF,EAAAhhB,OAAAvB,EAAAtE,IAZA,GAAAL,MACAwsB,KACA7nB,IA2CA,OA9BAi0B,GAAAoY,aAAA,SAAAnoC,GACA,GAAA7mB,GAAAwqC,EAAApqC,QAAAymB,EACA,OAAA7mB,GAAA,GAAAuf,UACAvf,EAAA,EAAA2iB,EAAA3iB,EAAA,GAAAge,EAAA,GACAhe,EAAA2iB,EAAA5iB,OAAA4iB,EAAA3iB,GAAAge,IAAAje,OAAA,KAIA62C,EAAA54B,OAAA,SAAAxd,GACA,IAAAU,UAAAnB,OAAA,MAAAie,GAAAtiB,OACAsiB,KACA,QAAAlB,GAAA9c,EAAA,EAAAmgB,EAAA3f,EAAAT,OAAoCC,EAAAmgB,IAAOngB,EAAA8c,EAAAtc,EAAAR,GAAA,MAAA8c,GAAAsE,MAAAtE,OAAAkB,EAAApb,KAAAka,EAE3C,OADAkB,GAAA+E,KAAAmiB,EAAA5mB,WACAuuC,KAGAjW,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAyqC,EAAA9uC,EAAApC,KAAAkH,GAAAqsD,KAAAriB,EAAA9uC,SAGAk7C,EAAAtY,UAAA,WACA,MAAA3b,GAAAjnB,SAGAk7C,EAAA+V,KAAA,WACA,MAAAoC,KACA/wC,UACAC,MAAAusB,IAGAoM,EAGA,QAAAiU,KAOA,QAAAjU,GAAAv4B,GACA,GAAAA,KAAA,MAAAmsB,GAAAtF,EAAAhhB,OAAAlG,EAAAK,EAAA,EAAA8B,IAGA,QAAA0sC,KACA,GAAA7sD,IAAA,CAEA,KADAge,EAAA,GAAApjB,OAAAulB,KACAngB,EAAAmgB,GAAAnC,EAAAhe,OAAA,GAAAoiB,GAAApiB,EAAAmgB,GAAAgC,IAAAhC,EAAA,EACA,OAAAy2B,GAdA,GAAAz0B,GAAA,EACAC,EAAA,EACAjC,EAAA,EACAnC,GAAA,IACAwsB,GAAA,IAmCA,OAtBAoM,GAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAoiB,GAAA3hB,EAAA,GAAA4hB,GAAA5hB,EAAA,GAAAqsD,MAAA1qC,EAAAC,IAGAw0B,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAogB,GAAAqqB,EAAA9uC,EAAApC,KAAAkH,IAAAT,OAAA,EAAA8sD,KAAAriB,EAAA9uC,SAGAk7C,EAAAoY,aAAA,SAAAnoC,GACA,GAAA7mB,GAAAwqC,EAAApqC,QAAAymB,EACA,OAAA7mB,GAAA,GAAAuf,SACAvf,EAAA,GAAAmiB,EAAAnE,EAAA,IACAhe,GAAAmgB,GAAAnC,EAAAmC,EAAA,GAAAiC,IACApE,EAAAhe,EAAA,GAAAge,EAAAhe,KAGA42C,EAAA+V,KAAA,WACA,MAAA9B,KACA7sC,QAAAmE,EAAAC,IACAnE,MAAAusB,IAGA2jB,EAAAvX,GAGA,QAAAt0B,KAKA,QAAAs0B,GAAAv4B,GACA,GAAAA,KAAA,MAAAmsB,GAAAtF,EAAAhhB,OAAAlG,EAAAK,EAAA,EAAA8B,IALA,GAAAnC,IAAA,IACAwsB,GAAA,KACArqB,EAAA,CAyBA,OAnBAy2B,GAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAie,EAAAtiB,EAAApC,KAAAkH,GAAA2f,EAAAtC,KAAA2D,IAAAxD,EAAAje,OAAAyqC,EAAAzqC,OAAA,GAAA62C,GAAA54B,EAAAtiB,SAGAk7C,EAAA34B,MAAA,SAAAzd,GACA,MAAAU,WAAAnB,QAAAyqC,EAAA9uC,EAAApC,KAAAkH,GAAA2f,EAAAtC,KAAA2D,IAAAxD,EAAAje,OAAAyqC,EAAAzqC,OAAA,GAAA62C,GAAApM,EAAA9uC,SAGAk7C,EAAAoY,aAAA,SAAAnoC,GACA,GAAA7mB,GAAAwqC,EAAApqC,QAAAymB,EACA,QAAA7I,EAAAhe,EAAA,GAAAge,EAAAhe,KAGA42C,EAAA+V,KAAA,WACA,MAAArqC,KACAtE,UACAC,MAAAusB,IAGAoM,EAWA,QAAAxgB,GAAAntB,GACA,UAAAotB,MAAAptB,GAGA,QAAAgmD,GAAAhmD,GACA,MAAAA,aAAAotB,OAAAptB,GAAA,GAAAotB,OAAAptB,GAGA,QAAAimD,GAAAv1B,EAAAL,EAAA61B,EAAA72B,EAAAH,EAAAH,EAAAH,EAAAL,EAAA43B,GAmCA,QAAAhB,GAAAh4B,GACA,OAAAyB,EAAAzB,KAAAi5B,EACAr3B,EAAA5B,KAAAk5B,EACAn3B,EAAA/B,KAAAm5B,EACAj3B,EAAAlC,KAAAo5B,EACAl2B,EAAAlD,KAAA+4B,EAAA/4B,KAAAq5B,EAAAC,EACA/1B,EAAAvD,KAAAu5B,EACAC,GAAAx5B,GAGA,QAAAy5B,GAAA15B,EAAA7jB,EAAAkM,EAAAE,GAMA,GALA,MAAAyX,MAAA,IAKA,gBAAAA,GAAA,CACA,GAAAz0B,GAAAmc,KAAAwB,IAAAb,EAAAlM,GAAA6jB,EACAn2B,EAAAklC,EAAA1lB,SAAA,SAAAxf,GAA4C,MAAAA,GAAA,KAAe8f,MAAAgwC,EAAApuD,EAC3D1B,KAAA8vD,EAAA/vD,QACA2e,EAAAwmB,EAAA/lB,SAAA7M,EAAAy9C,GAAAvxC,EAAAuxC,GAAA55B,GACAA,EAAAwD,GACO35B,GACPA,EAAA8vD,EAAApuD,EAAAouD,EAAA9vD,EAAA,MAAA8vD,EAAA9vD,GAAA,GAAA0B,EAAA1B,EAAA,EAAAA,GACA0e,EAAA1e,EAAA,GACAm2B,EAAAn2B,EAAA,KAEA0e,EAAAwmB,EAAA/lB,SAAA7M,EAAAkM,EAAA2X,GACAA,EAAAqB,GAIA,aAAA9Y,EAAAyX,IAAAO,MAAAhY,GAlEA,GAAAk4B,GAAAgX,EAAAR,EAAAhB,EAAAhB,mBACAne,EAAA2J,EAAA3J,OACAjvB,EAAA44B,EAAA54B,OAEAqxC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,SACAI,EAAAJ,EAAA,SACAK,EAAAL,EAAA,SACAM,EAAAN,EAAA,SACAO,EAAAP,EAAA,MACAQ,EAAAR,EAAA,MAEAU,IACAj4B,EAAA,EAAAH,IACAG,EAAA,IAAAH,IACAG,EAAA,MAAAH,IACAG,EAAA,MAAAH,IACAM,EAAA,EAAAf,IACAe,EAAA,IAAAf,IACAe,EAAA,MAAAf,IACAe,EAAA,MAAAf,IACAkB,EAAA,EAAAR,IACAQ,EAAA,IAAAR,IACAQ,EAAA,IAAAR,IACAQ,EAAA,MAAAR,IACAW,EAAA,EAAAV,IACAU,EAAA,IAAAV,IACAu3B,EAAA,EAAAj4B,IACAoC,EAAA,EAAA02B,KACA12B,EAAA,IAAA02B,KACAr2B,EAAA,EAAAo2B,IAyEA,OAnCAnZ,GAAA3J,OAAA,SAAApmB,GACA,UAAAwP,MAAA4W,EAAApmB,KAGA+vB,EAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,OAAAie,EAAAkwC,EAAA50D,KAAAkH,EAAAyuD,IAAAjxC,IAAA1V,IAAA8tB,IAGAwgB,EAAAh1B,MAAA,SAAAuU,EAAAzX,GACA,GAIAzV,GAJA6T,EAAAkB,IACAoJ,EAAAtK,EAAA,GACAwK,EAAAxK,IAAA/c,OAAA,GACAylB,EAAA8B,EAAAF,CAKA,OAHA5B,KAAAvc,EAAAme,IAAAE,IAAAre,GACAA,EAAA4mD,EAAA15B,EAAA/O,EAAAE,EAAA5I,GACAzV,MAAAgV,MAAAmJ,EAAAE,EAAA,MACA9B,EAAAvc,EAAA4Y,UAAA5Y,GAGA2tC,EAAAwX,WAAA,SAAA3vC,EAAAgU,GACA,aAAAA,EAAA27B,EAAAgB,EAAA38B,IAGAmkB,EAAAyX,KAAA,SAAAl4B,EAAAzX,GACA,GAAA5B,GAAAkB,GACA,QAAAmY,EAAA05B,EAAA15B,EAAArZ,EAAA,GAAAA,IAAA/c,OAAA,GAAA2e,IACAV,EAAAqwC,EAAAvxC,EAAAqZ,IACAygB,GAGAA,EAAA+V,KAAA,WACA,MAAAA,GAAA/V,EAAAsY,EAAAv1B,EAAAL,EAAA61B,EAAA72B,EAAAH,EAAAH,EAAAH,EAAAL,EAAA43B,KAGAxY,EA0CA,QAAAqZ,GAAAzlB,GACA,GAAArqB,GAAAqqB,EAAAzqC,MACA,iBAAAkJ,GACA,MAAAuhC,GAAA3sB,KAAAc,IAAA,EAAAd,KAAA2D,IAAArB,EAAA,EAAAtC,KAAAgB,MAAA5V,EAAAkX,OAYA,QAAA+vC,GAAApF,GAKA,QAAAlU,GAAAv4B,GACA,GAAApV,IAAAoV,EAAA8D,IAAAC,EAAAD,EACA,OAAA2oC,GAAA6C,EAAA9vC,KAAAc,IAAA,EAAAd,KAAA2D,IAAA,EAAAvY,OANA,GAAAkZ,GAAA,EACAC,EAAA,EACAurC,GAAA,CAuBA,OAhBA/W,GAAA54B,OAAA,SAAAxd,GACA,MAAAU,WAAAnB,QAAAoiB,GAAA3hB,EAAA,GAAA4hB,GAAA5hB,EAAA,GAAAo2C,IAAAz0B,EAAAC,IAGAw0B,EAAA+W,MAAA,SAAAntD,GACA,MAAAU,WAAAnB,QAAA4tD,IAAAntD,EAAAo2C,GAAA+W,GAGA/W,EAAAkU,aAAA,SAAAtqD,GACA,MAAAU,WAAAnB,QAAA+qD,EAAAtqD,EAAAo2C,GAAAkU,GAGAlU,EAAA+V,KAAA,WACA,MAAAuD,GAAApF,GAAA9sC,QAAAmE,EAAAC,IAAAurC,UAGAQ,EAAAvX,GAp3BA,GAAA12C,GAAAtF,MAAAa,UAEAyyD,EAAAhuD,EAAAoI,IACA5M,EAAAwE,EAAAxE,MAEAgxD,GAAgBnwD,KAAA,YA+IhBklB,EAAA,SAAApD,GACA,kBACA,MAAAA,KAIAyC,EAAA,SAAAzC,GACA,OAAAA,GAGA4vC,GAAA,KA4GAG,EAAA,SAAApwC,EAAAS,EAAAgU,GACA,GAGAS,GAHA5gB,EAAA0L,EAAA,GACAQ,EAAAR,IAAAje,OAAA,GACA2e,EAAAwmB,EAAA/lB,SAAA7M,EAAAkM,EAAA,MAAAC,EAAA,GAAAA,EAGA,QADAgU,EAAA45B,EAAA75B,gBAAA,MAAAC,EAAA,KAAAA,GACAA,EAAAlpB,MACA,QACA,GAAAxP,GAAA8jB,KAAAc,IAAAd,KAAAwB,IAAA/M,GAAAuL,KAAAwB,IAAAb,GAEA,OADA,OAAAiU,EAAAS,WAAA9R,MAAA8R,EAAAm5B,EAAAz2B,gBAAAlX,EAAA3kB,MAAA04B,EAAAS,aACAm5B,EAAA/4B,aAAAb,EAAA14B,EAEA,QACA,QACA,QACA,QACA,QACA,MAAA04B,EAAAS,WAAA9R,MAAA8R,EAAAm5B,EAAAx2B,eAAAnX,EAAAb,KAAAc,IAAAd,KAAAwB,IAAA/M,GAAAuL,KAAAwB,IAAAb,QAAAiU,EAAAS,aAAA,MAAAT,EAAAlpB,MACA,MAEA,SACA,QACA,MAAAkpB,EAAAS,WAAA9R,MAAA8R,EAAAm5B,EAAA12B,eAAAjX,MAAA+T,EAAAS,YAAA,SAAAT,EAAAlpB,OAIA,MAAA8iD,GAAA5nC,OAAAgO,IAwFA47B,EAAA,SAAArwC,EAAAmY,GACAnY,IAAAtiB,OAEA,IAIAuN,GAJAsX,EAAA,EACAC,EAAAxC,EAAAje,OAAA,EACAoiB,EAAAnE,EAAAuC,GACA6B,EAAApE,EAAAwC,EAUA,OAPA4B,GAAAD,IACAlZ,EAAAsX,IAAAC,IAAAvX,EACAA,EAAAkZ,IAAAC,IAAAnZ,GAGA+U,EAAAuC,GAAA4V,EAAAtX,MAAAsD,GACAnE,EAAAwC,GAAA2V,EAAAxU,KAAAS,GACApE,GA4RA0Z,EAAA,IACAT,EAAA,GAAAS,EACAC,EAAA,GAAAV,EACAW,EAAA,GAAAD,EACAT,EAAA,EAAAU,EACAo4B,GAAA,GAAAp4B,EACAm4B,GAAA,IAAAn4B,EAsHAu4B,GAAA,WACA,MAAAjB,GAAA5C,EAAAvuB,SAAAuuB,EAAAzuB,UAAAyuB,EAAAzvB,SAAAyvB,EAAA3vB,QAAA2vB,EAAA7vB,SAAA6vB,EAAA/vB,WAAA+vB,EAAAnwB,WAAAmwB,EAAAvwB,gBAAAwwB,EAAA6D,YAAApyC,QAAA,GAAAqY,MAAA,YAAAA,MAAA,YAGAg6B,GAAA,WACA,MAAAnB,GAAA5C,EAAA3wB,QAAA2wB,EAAAhxB,SAAAgxB,EAAAruB,QAAAquB,EAAAhyB,OAAAgyB,EAAApyB,QAAAoyB,EAAAxyB,UAAAwyB,EAAAjwB,UAAAiwB,EAAArwB,eAAAswB,EAAA+D,WAAAtyC,QAAAqY,KAAAk6B,IAAA,SAAAl6B,KAAAk6B,IAAA,YAGAxyC,GAAA,SAAAhL,GACA,MAAAA,GAAA5H,MAAA,SAAsB7C,IAAA,SAAA+V,GACtB,UAAAA,KAIAmyC,GAAAzyC,GAAA,gEAEA0yC,GAAA1yC,GAAA,4HAEA2yC,GAAA3yC,GAAA,4HAEA4yC,GAAA5yC,GAAA,4HAEAoqC,GAAAiE,EAAAF,yBAAA1G,EAAAn9B,UAAA,UAAAm9B,EAAAn9B,WAAA,WAEAuoC,GAAAxE,EAAAF,yBAAA1G,EAAAn9B,WAAA,aAAAm9B,EAAAn9B,UAAA,YAEAwoC,GAAAzE,EAAAF,yBAAA1G,EAAAn9B,UAAA,aAAAm9B,EAAAn9B,UAAA,YAEAyoC,GAAAtL,EAAAn9B,YAEA0oC,GAAA,SAAA9nD,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAA4U,KAAAgB,MAAA5V,GACA,IAAA+nD,GAAAnzC,KAAAwB,IAAApW,EAAA,GAIA,OAHA6nD,IAAAlrC,EAAA,IAAA3c,EAAA,IACA6nD,GAAA/9C,EAAA,QAAAi+C,EACAF,GAAAjrC,EAAA,MAAAmrC,EACAF,GAAA,IAUAG,GAAAhB,EAAAlyC,GAAA,qgDAEAmzC,GAAAjB,EAAAlyC,GAAA,qgDAEAozC,GAAAlB,EAAAlyC,GAAA,qgDAEAqzC,GAAAnB,EAAAlyC,GAAA,ogDA+BA7kB,GAAAm4D,UAAAzE,EACA1zD,EAAAo4D,WAAA/qB,EACArtC,EAAAq4D,cAAA7vC,EACAxoB,EAAAs4D,YAAA3L,EACA3sD,EAAAu4D,SAAAj7C,EACAtd,EAAAw4D,aAAAlF,EACAtzD,EAAAy4D,cAAAjF,EACAxzD,EAAA04D,SAAA7yC,EACA7lB,EAAA24D,UAAAvwC,EACApoB,EAAAwhB,cAAAq0C,EACA71D,EAAA44D,cAAAjH,EACA3xD,EAAA64D,eAAAzvC,EACAppB,EAAA84D,UAAA7B,GACAj3D,EAAA+4D,SAAA5B,GACAn3D,EAAAg5D,iBAAA1B,GACAt3D,EAAAi5D,kBAAA1B,GACAv3D,EAAAk5D,kBAAA1B,GACAx3D,EAAAm5D,iBAAA1B,GACAz3D,EAAAo5D,4BAAAnK,GACAjvD,EAAAq5D,mBAAAxB,GACA73D,EAAAs5D,gBAAA5B,GACA13D,EAAAu5D,gBAAA5B,GACA33D,EAAAw5D,mBAAAzB,GACA/3D,EAAAy5D,iBAAAzB,GACAh4D,EAAA05D,mBAAAzB,GACAj4D,EAAA25D,kBAAAzB,GACAl4D,EAAA45D,gBAAA5C,EAEAj1D,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,O5BmmSxC,SAAUZ,EAAQD,EAASH,I6B5/TjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAkB7B,SAAA65D,GAAAx2D,GACA,kBACA,GAAAZ,GAAA9B,KAAAsD,cACA61D,EAAAn5D,KAAAo5D,YACA,OAAAD,KAAAE,GAAAv3D,EAAA0B,gBAAA41D,eAAAC,EACAv3D,EAAAe,cAAAH,GACAZ,EAAAa,gBAAAw2D,EAAAz2D,IAIA,QAAA42D,GAAAC,GACA,kBACA,MAAAv5D,MAAAsD,cAAAX,gBAAA42D,EAAAC,MAAAD,EAAAE,QAaA,QAAAA,KACA,UAAAC,GAGA,QAAAA,KACA15D,KAAA2G,EAAA,OAAAgzD,IAAAvhC,SAAA,IAuDA,QAAAwhC,GAAAC,EAAA3qD,EAAAusB,GAEA,MADAo+B,GAAAC,EAAAD,EAAA3qD,EAAAusB,GACA,SAAAld,GACA,GAAAw7C,GAAAx7C,EAAAy7C,aACAD,SAAA/5D,MAAA,EAAA+5D,EAAAE,wBAAAj6D,QACA65D,EAAAp6D,KAAAO,KAAAue,IAKA,QAAAu7C,GAAAD,EAAA3qD,EAAAusB,GACA,gBAAAy+B,GACA,GAAAC,GAAA96D,EAAAkf,KACAlf,GAAAkf,MAAA27C,CACA,KACAL,EAAAp6D,KAAAO,UAAAo6D,SAAAlrD,EAAAusB,GACK,QACLp8B,EAAAkf,MAAA47C,IAKA,QAAAE,GAAAC,GACA,MAAAA,GAAA9pD,OAAAmC,MAAA,SAAAlE,IAAA,SAAAW,GACA,GAAA1M,GAAA,GAAAyD,EAAAiJ,EAAA7I,QAAA,IAEA,OADAJ,IAAA,IAAAzD,EAAA0M,EAAAvN,MAAAsE,EAAA,GAAAiJ,IAAAvN,MAAA,EAAAsE,KACYuJ,KAAAN,EAAA1M,UAIZ,QAAA63D,GAAAC,GACA,kBACA,GAAAl8C,GAAAte,KAAAy6D,IACA,IAAAn8C,EAAA,CACA,OAAA/H,GAAA7J,EAAA,EAAAvG,GAAA,EAAAzG,EAAA4e,EAAApY,OAA6CwG,EAAAhN,IAAOgN,EACpD6J,EAAA+H,EAAA5R,GAAA8tD,EAAA9qD,MAAA6G,EAAA7G,OAAA8qD,EAAA9qD,MAAA6G,EAAA7T,OAAA83D,EAAA93D,KAGA4b,IAAAnY,GAAAoQ,EAFAvW,KAAAiJ,oBAAAsN,EAAA7G,KAAA6G,EAAAsjD,SAAAtjD,EAAAmkD,WAKAv0D,EAAAmY,EAAApY,OAAAC,QACAnG,MAAAy6D,OAIA,QAAAE,GAAAH,EAAAt6D,EAAAw6D,GACA,GAAAE,GAAAC,GAAAvlD,eAAAklD,EAAA9qD,MAAAkqD,EAAAE,CACA,iBAAA72C,EAAA9c,EAAAs1B,GACA,GAAAllB,GAAA+H,EAAAte,KAAAy6D,KAAAZ,EAAAe,EAAA16D,EAAAiG,EAAAs1B,EACA,IAAAnd,EAAA,OAAA5R,GAAA,EAAAhN,EAAA4e,EAAApY,OAA0CwG,EAAAhN,IAAOgN,EACjD,IAAA6J,EAAA+H,EAAA5R,IAAAgD,OAAA8qD,EAAA9qD,MAAA6G,EAAA7T,OAAA83D,EAAA93D,KAIA,MAHA1C,MAAAiJ,oBAAAsN,EAAA7G,KAAA6G,EAAAsjD,SAAAtjD,EAAAmkD,SACA16D,KAAAkJ,iBAAAqN,EAAA7G,KAAA6G,EAAAsjD,WAAAtjD,EAAAmkD,gBACAnkD,EAAArW,QAIAF,MAAAkJ,iBAAAsxD,EAAA9qD,KAAAmqD,EAAAa,GACAnkD,GAAS7G,KAAA8qD,EAAA9qD,KAAAhN,KAAA83D,EAAA93D,KAAAxC,QAAA25D,WAAAa,WACTp8C,EACAA,EAAAvV,KAAAwN,GADAvW,KAAAy6D,MAAAlkD,IA0BA,QAAAukD,GAAAZ,EAAAL,EAAAkB,EAAA3zD,GACA,GAAA+yD,GAAA96D,EAAAkf,KACA27C,GAAAc,YAAA37D,EAAAkf,MACAlf,EAAAkf,MAAA27C,CACA,KACA,MAAAL,GAAAjtD,MAAAmuD,EAAA3zD,GACG,QACH/H,EAAAkf,MAAA47C,GA8BA,QAAAc,MAuBA,QAAA1yB,KACA,SA8CA,QAAA2yB,GAAAvzD,EAAAwzD,GACAn7D,KAAAsD,cAAAqE,EAAArE,cACAtD,KAAAo5D,aAAAzxD,EAAAyxD,aACAp5D,KAAAo7D,MAAA,KACAp7D,KAAAq7D,QAAA1zD,EACA3H,KAAAo6D,SAAAe,EAmBA,QAAAG,GAAA3zD,EAAA8zB,EAAAqL,EAAAv+B,EAAAgzD,EAAAjnD,GASA,IARA,GACAjR,GADA8C,EAAA,EAEAq1D,EAAA//B,EAAAv1B,OACAu1D,EAAAnnD,EAAApO,OAKQC,EAAAs1D,IAAgBt1D,GACxB9C,EAAAo4B,EAAAt1B,KACA9C,EAAA+2D,SAAA9lD,EAAAnO,GACAoC,EAAApC,GAAA9C,GAEAyjC,EAAA3gC,GAAA,GAAA+0D,GAAAvzD,EAAA2M,EAAAnO,GAKA,MAAQA,EAAAq1D,IAAiBr1D,GACzB9C,EAAAo4B,EAAAt1B,MACAo1D,EAAAp1D,GAAA9C,GAKA,QAAAq4D,GAAA/zD,EAAA8zB,EAAAqL,EAAAv+B,EAAAgzD,EAAAjnD,EAAApT,GACA,GAAAiF,GACA9C,EAKAylC,EAJA6yB,KACAH,EAAA//B,EAAAv1B,OACAu1D,EAAAnnD,EAAApO,OACA01D,EAAA,GAAA76D,OAAAy6D,EAKA,KAAAr1D,EAAA,EAAaA,EAAAq1D,IAAiBr1D,GAC9B9C,EAAAo4B,EAAAt1B,MACAy1D,EAAAz1D,GAAA2iC,EAAA+yB,GAAA36D,EAAAzB,KAAA4D,IAAA+2D,SAAAj0D,EAAAs1B,GACAqN,IAAA6yB,GACAJ,EAAAp1D,GAAA9C,EAEAs4D,EAAA7yB,GAAAzlC,EAQA,KAAA8C,EAAA,EAAaA,EAAAs1D,IAAgBt1D,EAC7B2iC,EAAA+yB,GAAA36D,EAAAzB,KAAAkI,EAAA2M,EAAAnO,KAAAmO,IACAjR,EAAAs4D,EAAA7yB,KACAvgC,EAAApC,GAAA9C,EACAA,EAAA+2D,SAAA9lD,EAAAnO,GACAw1D,EAAA7yB,GAAA,MAEAhC,EAAA3gC,GAAA,GAAA+0D,GAAAvzD,EAAA2M,EAAAnO,GAKA,KAAAA,EAAA,EAAaA,EAAAq1D,IAAiBr1D,GAC9B9C,EAAAo4B,EAAAt1B,KAAAw1D,EAAAC,EAAAz1D,MAAA9C,IACAk4D,EAAAp1D,GAAA9C,GAsGA,QAAAohB,GAAAza,EAAA2Q,GACA,MAAA3Q,GAAA2Q,GAAA,EAAA3Q,EAAA2Q,EAAA,EAAA3Q,GAAA2Q,EAAA,EAAA+K,IAiDA,QAAAo2C,GAAAp5D,GACA,kBACA1C,KAAAgE,gBAAAtB,IAIA,QAAAq5D,GAAAxC,GACA,kBACAv5D,KAAAg8D,kBAAAzC,EAAAC,MAAAD,EAAAE,QAIA,QAAAwC,GAAAv5D,EAAAxC,GACA,kBACAF,KAAA+E,aAAArC,EAAAxC,IAIA,QAAAg8D,GAAA3C,EAAAr5D,GACA,kBACAF,KAAA6E,eAAA00D,EAAAC,MAAAD,EAAAE,MAAAv5D,IAIA,QAAAi8D,GAAAz5D,EAAAxC,GACA,kBACA,GAAAuV,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACA,OAAAoO,EAAAzV,KAAAgE,gBAAAtB,GACA1C,KAAA+E,aAAArC,EAAA+S,IAIA,QAAA2mD,GAAA7C,EAAAr5D,GACA,kBACA,GAAAuV,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACA,OAAAoO,EAAAzV,KAAAg8D,kBAAAzC,EAAAC,MAAAD,EAAAE,OACAz5D,KAAA6E,eAAA00D,EAAAC,MAAAD,EAAAE,MAAAhkD,IA0BA,QAAA4mD,GAAA35D,GACA,kBACA1C,KAAA6D,MAAAy4D,eAAA55D,IAIA,QAAA65D,GAAA75D,EAAAxC,EAAAs8D,GACA,kBACAx8D,KAAA6D,MAAA44D,YAAA/5D,EAAAxC,EAAAs8D,IAIA,QAAAE,GAAAh6D,EAAAxC,EAAAs8D,GACA,kBACA,GAAA/mD,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACA,OAAAoO,EAAAzV,KAAA6D,MAAAy4D,eAAA55D,GACA1C,KAAA6D,MAAA44D,YAAA/5D,EAAA+S,EAAA+mD,IAaA,QAAAG,GAAAt5D,EAAAX,GACA,MAAAW,GAAAQ,MAAAipD,iBAAApqD,IACAkqD,GAAAvpD,GAAAwpD,iBAAAxpD,EAAA,MAAAypD,iBAAApqD,GAGA,QAAAk6D,GAAAl6D,GACA,wBACA1C,MAAA0C,IAIA,QAAAm6D,GAAAn6D,EAAAxC,GACA,kBACAF,KAAA0C,GAAAxC,GAIA,QAAA48D,GAAAp6D,EAAAxC,GACA,kBACA,GAAAuV,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACA,OAAAoO,QAAAzV,MAAA0C,GACA1C,KAAA0C,GAAA+S,GAaA,QAAAsnD,GAAA3N,GACA,MAAAA,GAAA5+C,OAAAmC,MAAA,SAGA,QAAAqqD,GAAA35D,GACA,MAAAA,GAAA25D,WAAA,GAAAC,GAAA55D,GAGA,QAAA45D,GAAA55D,GACArD,KAAAk9D,MAAA75D,EACArD,KAAAm9D,OAAAJ,EAAA15D,EAAAkB,aAAA,cAuBA,QAAA64D,GAAA/5D,EAAAg6D,GAEA,IADA,GAAAr3D,GAAAg3D,EAAA35D,GAAA8C,GAAA,EAAAmgB,EAAA+2C,EAAAn3D,SACAC,EAAAmgB,GAAAtgB,EAAAmM,IAAAkrD,EAAAl3D,IAGA,QAAAm3D,GAAAj6D,EAAAg6D,GAEA,IADA,GAAAr3D,GAAAg3D,EAAA35D,GAAA8C,GAAA,EAAAmgB,EAAA+2C,EAAAn3D,SACAC,EAAAmgB,GAAAtgB,EAAA2G,OAAA0wD,EAAAl3D,IAGA,QAAAo3D,GAAAF,GACA,kBACAD,EAAAp9D,KAAAq9D,IAIA,QAAAG,GAAAH,GACA,kBACAC,EAAAt9D,KAAAq9D,IAIA,QAAAI,GAAAJ,EAAAn9D,GACA,mBACAA,EAAA0M,MAAA5M,KAAAqH,WAAA+1D,EAAAE,GAAAt9D,KAAAq9D,IAmBA,QAAAK,KACA19D,KAAA29D,YAAA,GAGA,QAAAC,GAAA19D,GACA,kBACAF,KAAA29D,YAAAz9D,GAIA,QAAA29D,GAAA39D,GACA,kBACA,GAAAuV,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACArH,MAAA29D,YAAA,MAAAloD,EAAA,GAAAA,GAaA,QAAAqoD,KACA99D,KAAAiD,UAAA,GAGA,QAAA86D,GAAA79D,GACA,kBACAF,KAAAiD,UAAA/C,GAIA,QAAA89D,GAAA99D,GACA,kBACA,GAAAuV,GAAAvV,EAAA0M,MAAA5M,KAAAqH,UACArH,MAAAiD,UAAA,MAAAwS,EAAA,GAAAA,GAaA,QAAAw/C,KACAj1D,KAAA8F,aAAA9F,KAAAqF,WAAA5B,YAAAzD,MAOA,QAAAi+D,KACAj+D,KAAAk+D,iBAAAl+D,KAAAqF,WAAAD,aAAApF,UAAAqF,WAAAQ;CAcA,QAAAs4D,KACA,YAWA,QAAAxxD,KACA,GAAAhF,GAAA3H,KAAAqF,UACAsC,MAAA2G,YAAAtO,MAaA,QAAAo+D,GAAA/6D,EAAAqM,EAAA2uD,GACA,GAAAjnD,GAAAw1C,GAAAvpD,GACAkb,EAAAnH,EAAAknD,WAEA,mBAAA//C,GACAA,EAAA,GAAAA,GAAA7O,EAAA2uD,IAEA9/C,EAAAnH,EAAAtV,SAAAy8D,YAAA,SACAF,GAAA9/C,EAAAigD,UAAA9uD,EAAA2uD,EAAAI,QAAAJ,EAAAK,YAAAngD,EAAAogD,OAAAN,EAAAM,QACApgD,EAAAigD,UAAA9uD,GAAA,OAGArM,EAAA+6D,cAAA7/C,GAGA,QAAAqgD,GAAAlvD,EAAA2uD,GACA,kBACA,MAAAD,GAAAp+D,KAAA0P,EAAA2uD,IAIA,QAAAQ,GAAAnvD,EAAA2uD,GACA,kBACA,MAAAD,GAAAp+D,KAAA0P,EAAA2uD,EAAAzxD,MAAA5M,KAAAqH,aAYA,QAAAy3D,GAAAC,EAAAC,GACAh/D,KAAAi/D,QAAAF,EACA/+D,KAAAk/D,SAAAF,EAGA,QAAA75B,KACA,UAAA25B,KAAAh9D,SAAA0B,kBAAAyB,IA/2BA,GAAAo0D,GAAA,+BAEA8F,IACAC,IAAA,6BACA/F,QACA30D,MAAA,+BACA26D,IAAA,uCACAC,MAAA,iCAGAC,GAAA,SAAA78D,GACA,GAAAu4B,GAAAv4B,GAAA,GAAAyD,EAAA80B,EAAA10B,QAAA,IAEA,OADAJ,IAAA,cAAA80B,EAAAv4B,EAAAb,MAAA,EAAAsE,MAAAzD,IAAAb,MAAAsE,EAAA,IACAg5D,GAAA7pD,eAAA2lB,IAA8Cu+B,MAAA2F,GAAAlkC,GAAAw+B,MAAA/2D,GAAuCA,GAmBrF88D,GAAA,SAAA98D,GACA,GAAA62D,GAAAgG,GAAA78D,EACA,QAAA62D,EAAAE,MACAH,EACAJ,GAAAK,IAGAI,GAAA,CAUAD,GAAA93D,UAAA63D,EAAA73D,WACAmQ,YAAA2nD,EACAtkD,IAAA,SAAA/R,GAEA,IADA,GAAA9D,GAAAS,KAAA2G,IACApH,IAAA8D,KAAA,KAAAA,IAAAgC,YAAA,MACA,OAAAhC,GAAA9D,IAEA8V,IAAA,SAAAhS,EAAAnD,GACA,MAAAmD,GAAArD,KAAA2G,GAAAzG,GAEAyM,OAAA,SAAAtJ,GACA,MAAArD,MAAA2G,IAAAtD,aAAArD,KAAA2G,IAEAyxB,SAAA,WACA,MAAAp4B,MAAA2G,GAIA,IAAA84D,IAAA,SAAA/9D,GACA,kBACA,MAAA1B,MAAA0/D,QAAAh+D,IAIA,uBAAAI,UAAA,CACA,GAAAsjC,IAAAtjC,SAAA0B,eACA,KAAA4hC,GAAAs6B,QAAA,CACA,GAAAC,IAAAv6B,GAAAw6B,uBACAx6B,GAAAy6B,mBACAz6B,GAAA06B,oBACA16B,GAAA26B,gBACAN,IAAA,SAAA/9D,GACA,kBACA,MAAAi+D,IAAAlgE,KAAAO,KAAA0B,MAMA,GAAAs+D,IAAAP,GAEA5E,KAIA,IAFAx7D,EAAAkf,MAAA,KAEA,mBAAAzc,UAAA,CACA,GAAAm+D,IAAAn+D,SAAA0B,eACA,iBAAAy8D,MACApF,IAAoBqF,WAAA,YAAAC,WAAA,aAqEpB,GAAAC,IAAA,SAAA5F,EAAAt6D,EAAAw6D,GACA,GAAAv0D,GAAAiJ,EAAAkrD,EAAAD,EAAAG,EAAA,IAAAl0C,EAAAg0C,EAAAp0D,MAEA,OAAAmB,UAAAnB,OAAA,IAcA,IAFAoY,EAAApe,EAAAy6D,EAAAJ,EACA,MAAAG,OAAA,GACAv0D,EAAA,EAAaA,EAAAmgB,IAAOngB,EAAAnG,KAAA+F,KAAAuY,EAAAg8C,EAAAn0D,GAAAjG,EAAAw6D,GACpB,OAAA16D,MAdA,GAAAse,GAAAte,KAAAqD,OAAAo3D,IACA,IAAAn8C,EAAA,OAAA/H,GAAA7J,EAAA,EAAAhN,EAAA4e,EAAApY,OAA6CwG,EAAAhN,IAAOgN,EACpD,IAAAvG,EAAA,EAAAoQ,EAAA+H,EAAA5R,GAA4BvG,EAAAmgB,IAAOngB,EACnC,IAAAiJ,EAAAkrD,EAAAn0D,IAAAuJ,OAAA6G,EAAA7G,MAAAN,EAAA1M,OAAA6T,EAAA7T,KACA,MAAA6T,GAAArW,QAwBA86D,GAAA,WAEA,IADA,GAAArhD,GAAAmF,EAAAzf,EAAAkf,MACA5E,EAAAmF,EAAAk8C,aAAAl8C,EAAAnF,CACA,OAAAmF,IAGA4tB,GAAA,SAAArpC,EAAAkb,GACA,GAAA6gD,GAAA/7D,EAAAb,iBAAAa,CAEA,IAAA+7D,EAAAiB,eAAA,CACA,GAAA3zB,GAAA0yB,EAAAiB,gBAGA,OAFA3zB,GAAAloB,EAAAjG,EAAA+hD,QAAA5zB,EAAA1f,EAAAzO,EAAAgiD,QACA7zB,IAAA8zB,gBAAAn9D,EAAAo9D,eAAAC,YACAh0B,EAAAloB,EAAAkoB,EAAA1f,GAGA,GAAA2zC,GAAAt9D,EAAAu9D,uBACA,QAAAriD,EAAA+hD,QAAAK,EAAA96C,KAAAxiB,EAAAw9D,WAAAtiD,EAAAgiD,QAAAI,EAAAG,IAAAz9D,EAAA09D,YAGAC,GAAA,SAAA39D,GACA,GAAAkb,GAAAy8C,IAEA,OADAz8C,GAAA0iD,iBAAA1iD,IAAA0iD,eAAA,IACAv0B,GAAArpC,EAAAkb,IAKA7c,GAAA,SAAAA,GACA,aAAAA,EAAAu5D,EAAA,WACA,MAAAj7D,MAAAiC,cAAAP,KAIAw/D,GAAA,SAAA3wD,GACA,kBAAAA,OAAA7O,GAAA6O,GAEA,QAAAwuD,GAAA/+D,KAAAi/D,QAAAv/D,EAAAq/D,EAAA74D,OAAAi7D,EAAA,GAAApgE,OAAArB,GAAAgN,EAAA,EAAqFA,EAAAhN,IAAOgN,EAC5F,OAAArJ,GAAA+9D,EAAA3lC,EAAAsjC,EAAAryD,GAAA4Z,EAAAmV,EAAAv1B,OAAAm7D,EAAAF,EAAAz0D,GAAA,GAAA3L,OAAAulB,GAAAngB,EAAA,EAA+GA,EAAAmgB,IAAOngB,GACtH9C,EAAAo4B,EAAAt1B,MAAAi7D,EAAA7wD,EAAA9Q,KAAA4D,IAAA+2D,SAAAj0D,EAAAs1B,MACA,YAAAp4B,KAAA+9D,EAAAhH,SAAA/2D,EAAA+2D,UACAiH,EAAAl7D,GAAAi7D,EAKA,WAAAtC,GAAAqC,EAAAnhE,KAAAk/D,WAOAoC,GAAA,SAAA5/D,GACA,aAAAA,EAAA6mC,EAAA,WACA,MAAAvoC,MAAA+B,iBAAAL,KAIA6/D,GAAA,SAAAhxD,GACA,kBAAAA,OAAA+wD,GAAA/wD,GAEA,QAAAwuD,GAAA/+D,KAAAi/D,QAAAv/D,EAAAq/D,EAAA74D,OAAAi7D,KAAAnC,KAAAtyD,EAAA,EAAyFA,EAAAhN,IAAOgN,EAChG,OAAArJ,GAAAo4B,EAAAsjC,EAAAryD,GAAA4Z,EAAAmV,EAAAv1B,OAAAC,EAAA,EAA8DA,EAAAmgB,IAAOngB,GACrE9C,EAAAo4B,EAAAt1B,MACAg7D,EAAAp4D,KAAAwH,EAAA9Q,KAAA4D,IAAA+2D,SAAAj0D,EAAAs1B,IACAujC,EAAAj2D,KAAA1F,GAKA,WAAAy7D,GAAAqC,EAAAnC,IAGAwC,GAAA,SAAAlwD,GACA,kBAAAA,OAAA0uD,GAAA1uD,GAEA,QAAAytD,GAAA/+D,KAAAi/D,QAAAv/D,EAAAq/D,EAAA74D,OAAAi7D,EAAA,GAAApgE,OAAArB,GAAAgN,EAAA,EAAqFA,EAAAhN,IAAOgN,EAC5F,OAAArJ,GAAAo4B,EAAAsjC,EAAAryD,GAAA4Z,EAAAmV,EAAAv1B,OAAAm7D,EAAAF,EAAAz0D,MAAAvG,EAAA,EAA4FA,EAAAmgB,IAAOngB,GACnG9C,EAAAo4B,EAAAt1B,KAAAmL,EAAA7R,KAAA4D,IAAA+2D,SAAAj0D,EAAAs1B,IACA4lC,EAAAt4D,KAAA1F,EAKA,WAAAy7D,GAAAqC,EAAAnhE,KAAAk/D,WAGAuC,GAAA,SAAAl5D,GACA,UAAAxH,OAAAwH,EAAArC,SAGAw7D,GAAA,WACA,UAAA5C,GAAA9+D,KAAA2hE,QAAA3hE,KAAAi/D,QAAAxwD,IAAAgzD,IAAAzhE,KAAAk/D,UAWAhE,GAAAt5D,WACAmQ,YAAAmpD,EACAz3D,YAAA,SAAAqK,GAAgC,MAAA9N,MAAAq7D,QAAAj2D,aAAA0I,EAAA9N,KAAAo7D,QAChCh2D,aAAA,SAAA0I,EAAA3I,GAAuC,MAAAnF,MAAAq7D,QAAAj2D,aAAA0I,EAAA3I,IACvClD,cAAA,SAAAP,GAAqC,MAAA1B,MAAAq7D,QAAAp5D,cAAAP,IACrCK,iBAAA,SAAAL,GAAwC,MAAA1B,MAAAq7D,QAAAt5D,iBAAAL,IAGxC,IAAAkmB,IAAA,SAAApD,GACA,kBACA,MAAAA,KAIAq3C,GAAA,IAwEA+F,GAAA,SAAA1hE,EAAAgB,GACA,IAAAhB,EAGA,MAFAoU,GAAA,GAAAvT,OAAAf,KAAAsoC,QAAA57B,GAAA,EACA1M,KAAA+F,KAAA,SAAAkd,GAA2B3O,IAAA5H,GAAAuW,IAC3B3O,CAGA,IAAA1L,GAAA1H,EAAAw6D,EAAAJ,EACA0D,EAAAh/D,KAAAk/D,SACAH,EAAA/+D,KAAAi/D,OAEA,mBAAA/+D,OAAA0nB,GAAA1nB,GAEA,QAAAR,GAAAq/D,EAAA74D,OAAAqC,EAAA,GAAAxH,OAAArB,GAAAonC,EAAA,GAAA/lC,OAAArB,GAAA67D,EAAA,GAAAx6D,OAAArB,GAAAgN,EAAA,EAAsGA,EAAAhN,IAAOgN,EAAA,CAC7G,GAAA/E,GAAAq3D,EAAAtyD,GACA+uB,EAAAsjC,EAAAryD,GACA8uD,EAAA//B,EAAAv1B,OACAoO,EAAApU,EAAAT,KAAAkI,OAAAyyD,SAAA1tD,EAAAsyD,GACAvD,EAAAnnD,EAAApO,OACA27D,EAAA/6B,EAAAp6B,GAAA,GAAA3L,OAAA06D,GACAqG,EAAAv5D,EAAAmE,GAAA,GAAA3L,OAAA06D,GACAsG,EAAAxG,EAAA7uD,GAAA,GAAA3L,OAAAy6D,EAEA5yD,GAAAjB,EAAA8zB,EAAAomC,EAAAC,EAAAC,EAAAztD,EAAApT,EAKA,QAAA8gE,GAAA78D,EAAAuhB,EAAA,EAAAC,EAAA,EAA4CD,EAAA+0C,IAAiB/0C,EAC7D,GAAAs7C,EAAAH,EAAAn7C,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAvhB,EAAA28D,EAAAn7C,SAAA80C,IACAuG,EAAA5G,MAAAj2D,GAAA,MAQA,MAHAoD,GAAA,GAAAu2D,GAAAv2D,EAAAy2D,GACAz2D,EAAAo5D,OAAA76B,EACAv+B,EAAA05D,MAAA1G,EACAhzD,GAGA25D,GAAA,WACA,UAAApD,GAAA9+D,KAAAiiE,OAAAjiE,KAAAi/D,QAAAxwD,IAAAgzD,IAAAzhE,KAAAk/D,WAGAiD,GAAA,SAAAh9B,GAEA,OAAAi9B,GAAApiE,KAAAi/D,QAAAoD,EAAAl9B,EAAA85B,QAAAqD,EAAAF,EAAAl8D,OAAAmmB,EAAAg2C,EAAAn8D,OAAAxG,EAAAskB,KAAA2D,IAAA26C,EAAAj2C,GAAAk2C,EAAA,GAAAxhE,OAAAuhE,GAAA51D,EAAA,EAA8JA,EAAAhN,IAAOgN,EACrK,OAAArJ,GAAAm/D,EAAAJ,EAAA11D,GAAA+1D,EAAAJ,EAAA31D,GAAA4Z,EAAAk8C,EAAAt8D,OAAAojB,EAAAi5C,EAAA71D,GAAA,GAAA3L,OAAAulB,GAAAngB,EAAA,EAAwHA,EAAAmgB,IAAOngB,GAC/H9C,EAAAm/D,EAAAr8D,IAAAs8D,EAAAt8D,MACAmjB,EAAAnjB,GAAA9C,EAKA,MAAQqJ,EAAA41D,IAAQ51D,EAChB61D,EAAA71D,GAAA01D,EAAA11D,EAGA,WAAAoyD,GAAAyD,EAAAviE,KAAAk/D,WAGAwD,GAAA,WAEA,OAAA3D,GAAA/+D,KAAAi/D,QAAAvyD,GAAA,EAAAhN,EAAAq/D,EAAA74D,SAA4DwG,EAAAhN,GAC5D,OAAA2D,GAAAo4B,EAAAsjC,EAAAryD,GAAAvG,EAAAs1B,EAAAv1B,OAAA,EAAAf,EAAAs2B,EAAAt1B,KAA4EA,GAAA,IAC5E9C,EAAAo4B,EAAAt1B,MACAhB,OAAA9B,EAAAyC,aAAAX,EAAAE,WAAAD,aAAA/B,EAAA8B,GACAA,EAAA9B,EAKA,OAAArD,OAGA2iE,GAAA,SAAA/8C,GAGA,QAAAg9C,GAAA54D,EAAA2Q,GACA,MAAA3Q,IAAA2Q,EAAAiL,EAAA5b,EAAAowD,SAAAz/C,EAAAy/C,WAAApwD,GAAA2Q,EAHAiL,MAAAnB,EAMA,QAAAs6C,GAAA/+D,KAAAi/D,QAAAv/D,EAAAq/D,EAAA74D,OAAA28D,EAAA,GAAA9hE,OAAArB,GAAAgN,EAAA,EAAsFA,EAAAhN,IAAOgN,EAAA,CAC7F,OAAArJ,GAAAo4B,EAAAsjC,EAAAryD,GAAA4Z,EAAAmV,EAAAv1B,OAAA48D,EAAAD,EAAAn2D,GAAA,GAAA3L,OAAAulB,GAAAngB,EAAA,EAAwGA,EAAAmgB,IAAOngB,GAC/G9C,EAAAo4B,EAAAt1B,MACA28D,EAAA38D,GAAA9C,EAGAy/D,GAAA55C,KAAA05C,GAGA,UAAA9D,GAAA+D,EAAA7iE,KAAAk/D,UAAA/1B,SAOA45B,GAAA,WACA,GAAAC,GAAA37D,UAAA,EAGA,OAFAA,WAAA,GAAArH,KACAgjE,EAAAp2D,MAAA,KAAAvF,WACArH,MAGAijE,GAAA,WACA,GAAAC,GAAA,GAAAniE,OAAAf,KAAAsoC,QAAAniC,GAAA,CAEA,OADAnG,MAAA+F,KAAA,WAAwBm9D,IAAA/8D,GAAAnG,OACxBkjE,GAGAC,GAAA,WAEA,OAAApE,GAAA/+D,KAAAi/D,QAAAvyD,EAAA,EAAAhN,EAAAq/D,EAAA74D,OAA2DwG,EAAAhN,IAAOgN,EAClE,OAAA+uB,GAAAsjC,EAAAryD,GAAAvG,EAAA,EAAAmgB,EAAAmV,EAAAv1B,OAAwDC,EAAAmgB,IAAOngB,EAAA,CAC/D,GAAA9C,GAAAo4B,EAAAt1B,EACA,IAAA9C,EAAA,MAAAA,GAIA,aAGA+/D,GAAA,WACA,GAAA96B,GAAA,CAEA,OADAtoC,MAAA+F,KAAA,aAAwBuiC,IACxBA,GAGA+6B,GAAA,WACA,OAAArjE,KAAAqD,QAGAigE,GAAA,SAAAN,GAEA,OAAAjE,GAAA/+D,KAAAi/D,QAAAvyD,EAAA,EAAAhN,EAAAq/D,EAAA74D,OAA2DwG,EAAAhN,IAAOgN,EAClE,OAAArJ,GAAAo4B,EAAAsjC,EAAAryD,GAAAvG,EAAA,EAAAmgB,EAAAmV,EAAAv1B,OAA8DC,EAAAmgB,IAAOngB,GACrE9C,EAAAo4B,EAAAt1B,KAAA68D,EAAAvjE,KAAA4D,IAAA+2D,SAAAj0D,EAAAs1B,EAIA,OAAAz7B,OA2CAujE,GAAA,SAAA7gE,EAAAxC,GACA,GAAAq5D,GAAAgG,GAAA78D,EAEA,IAAA2E,UAAAnB,OAAA,GACA,GAAA7C,GAAArD,KAAAqD,MACA,OAAAk2D,GAAAE,MACAp2D,EAAAmgE,eAAAjK,EAAAC,MAAAD,EAAAE,OACAp2D,EAAAkB,aAAAg1D,GAGA,MAAAv5D,MAAA+F,MAAA,MAAA7F,EACAq5D,EAAAE,MAAAsC,EAAAD,EAAA,kBAAA57D,GACAq5D,EAAAE,MAAA2C,EAAAD,EACA5C,EAAAE,MAAAyC,EAAAD,GAAA1C,EAAAr5D,KAGA0sD,GAAA,SAAAvpD,GACA,MAAAA,GAAAC,eAAAD,EAAAC,cAAAspD,aACAvpD,EAAAvB,UAAAuB,GACAA,EAAAupD,aAuBA6W,GAAA,SAAA/gE,EAAAxC,EAAAs8D,GACA,MAAAn1D,WAAAnB,OAAA,EACAlG,KAAA+F,MAAA,MAAA7F,EACAm8D,EAAA,kBAAAn8D,GACAw8D,EACAH,GAAA75D,EAAAxC,EAAA,MAAAs8D,EAAA,GAAAA,IACAG,EAAA38D,KAAAqD,OAAAX,IA4BAghE,GAAA,SAAAhhE,EAAAxC,GACA,MAAAmH,WAAAnB,OAAA,EACAlG,KAAA+F,MAAA,MAAA7F,EACA08D,EAAA,kBAAA18D,GACA48D,EACAD,GAAAn6D,EAAAxC,IACAF,KAAAqD,OAAAX,GAgBAu6D,GAAAr7D,WACAuQ,IAAA,SAAAzP,GACA,GAAAyD,GAAAnG,KAAAm9D,OAAA52D,QAAA7D,EACAyD,GAAA,IACAnG,KAAAm9D,OAAAp0D,KAAArG,GACA1C,KAAAk9D,MAAAn4D,aAAA,QAAA/E,KAAAm9D,OAAAhlD,KAAA,QAGAxL,OAAA,SAAAjK,GACA,GAAAyD,GAAAnG,KAAAm9D,OAAA52D,QAAA7D,EACAyD,IAAA,IACAnG,KAAAm9D,OAAAtwD,OAAA1G,EAAA,GACAnG,KAAAk9D,MAAAn4D,aAAA,QAAA/E,KAAAm9D,OAAAhlD,KAAA,QAGA/R,SAAA,SAAA1D,GACA,MAAA1C,MAAAm9D,OAAA52D,QAAA7D,IAAA,GAgCA,IAAAihE,IAAA,SAAAjhE,EAAAxC,GACA,GAAAm9D,GAAAN,EAAAr6D,EAAA,GAEA,IAAA2E,UAAAnB,OAAA,GAEA,IADA,GAAAF,GAAAg3D,EAAAh9D,KAAAqD,QAAA8C,GAAA,EAAAmgB,EAAA+2C,EAAAn3D,SACAC,EAAAmgB,GAAA,IAAAtgB,EAAAI,SAAAi3D,EAAAl3D,IAAA,QACA,UAGA,MAAAnG,MAAA+F,MAAA,kBAAA7F,GACAu9D,EAAAv9D,EACAq9D,EACAC,GAAAH,EAAAn9D,KAoBA0jE,GAAA,SAAA1jE,GACA,MAAAmH,WAAAnB,OACAlG,KAAA+F,KAAA,MAAA7F,EACAw9D,GAAA,kBAAAx9D,GACA29D,EACAD,GAAA19D,IACAF,KAAAqD,OAAAs6D,aAoBAkG,GAAA,SAAA3jE,GACA,MAAAmH,WAAAnB,OACAlG,KAAA+F,KAAA,MAAA7F,EACA49D,GAAA,kBAAA59D,GACA89D,EACAD,GAAA79D,IACAF,KAAAqD,OAAAJ,WAOA6gE,GAAA,WACA,MAAA9jE,MAAA+F,KAAAkvD,IAOA8O,GAAA,WACA,MAAA/jE,MAAA+F,KAAAk4D,IAGA+F,GAAA,SAAAthE,GACA,GAAA+I,GAAA,kBAAA/I,KAAA88D,GAAA98D,EACA,OAAA1C,MAAAuQ,OAAA,WACA,MAAAvQ,MAAAyD,YAAAgI,EAAAmB,MAAA5M,KAAAqH,eAQA48D,GAAA,SAAAvhE,EAAAwhE,GACA,GAAAz4D,GAAA,kBAAA/I,KAAA88D,GAAA98D,GACA6N,EAAA,MAAA2zD,EAAA/F,EAAA,kBAAA+F,KAAAxiE,GAAAwiE,EACA,OAAAlkE,MAAAuQ,OAAA,WACA,MAAAvQ,MAAAoF,aAAAqG,EAAAmB,MAAA5M,KAAAqH,WAAAkJ,EAAA3D,MAAA5M,KAAAqH,YAAA,SASA88D,GAAA,WACA,MAAAnkE,MAAA+F,KAAA4G,IAGAy3D,GAAA,SAAAlkE,GACA,MAAAmH,WAAAnB,OACAlG,KAAAmoC,SAAA,WAAAjoC,GACAF,KAAAqD,OAAA+2D,UA8BAiK,GAAA,SAAA30D,EAAA2uD,GACA,MAAAr+D,MAAA+F,MAAA,kBAAAs4D,GACAQ,EACAD,GAAAlvD,EAAA2uD,KAGAp5D,IAAA,KAWA65D,GAAAl9D,UAAAujC,EAAAvjC,WACAmQ,YAAA+sD,EACAvuD,OAAA2wD,GACAr6B,UAAA06B,GACA7yD,OAAA8yD,GACAltD,KAAAstD,GACA96B,MAAA46B,GACAnG,KAAA2G,GACA54C,MAAA64C,GACAh5B,MAAAu5B,GACAx5C,KAAAy5C,GACAljE,KAAAsjE,GACAG,MAAAD,GACA5/D,KAAA8/D,GACA76B,KAAA86B,GACA76B,MAAA86B,GACAt9D,KAAAu9D,GACAr4D,KAAAs4D,GACA1/D,MAAA4/D,GACAt7B,SAAAu7B,GACAp/C,QAAAq/C,GACA3yD,KAAA4yD,GACA5gE,KAAA6gE,GACA5O,MAAA6O,GACA7F,MAAA8F,GACAz2D,OAAA02D,GACA52D,OAAA62D,GACAt3D,OAAAw3D,GACAhJ,MAAAiJ,GACA9lD,GAAA8hD,GACAkE,SAAAD,GAGA,IAAA9zD,IAAA,SAAA7O,GACA,sBAAAA,GACA,GAAAo9D,KAAAh9D,SAAAG,cAAAP,MAAAI,SAAA0B,kBACA,GAAAs7D,KAAAp9D,IAAAuD,KAGA4hC,GAAA,SAAAnlC,GACA,sBAAAA,GACA,GAAAo9D,IAAAh9D,SAAAC,iBAAAL,KAAAI,SAAA0B,kBACA,GAAAs7D,IAAA,MAAAp9D,QAAAuD,KAGAs/D,GAAA,SAAAlhE,EAAAmhE,EAAAC,GACAp9D,UAAAnB,OAAA,IAAAu+D,EAAAD,IAAAxJ,KAAAiG,eAEA,QAAAsD,GAAAp+D,EAAA,EAAAmgB,EAAAk+C,IAAAt+D,OAAA,EAA0DC,EAAAmgB,IAAOngB,EACjE,IAAAo+D,EAAAC,EAAAr+D,IAAAs+D,eACA,MAAA/3B,IAAArpC,EAAAkhE,EAIA,cAGAC,GAAA,SAAAnhE,EAAAmhE,GACA,MAAAA,MAAAxJ,KAAAwJ,QAEA,QAAAr+D,GAAA,EAAAmgB,EAAAk+C,IAAAt+D,OAAA,EAAA8tC,EAAA,GAAAjzC,OAAAulB,GAA0EngB,EAAAmgB,IAAOngB,EACjF6tC,EAAA7tC,GAAAumC,GAAArpC,EAAAmhE,EAAAr+D,GAGA,OAAA6tC,GAGA30C,GAAAmgE,WACAngE,EAAAo6D,QACAp6D,EAAAogE,QAAAO,GACA3gE,EAAA2hE,SACA3hE,EAAAkgE,aACAlgE,EAAA8/D,cACA9/D,EAAAkR,UACAlR,EAAAwnC,aACAxnC,EAAA8lC,YACA9lC,EAAAqC,YACArC,EAAAiiE,eACAjiE,EAAAwE,MAAA84D,EACAt9D,EAAAklE,SACAllE,EAAAmlE,WACAnlE,EAAA+X,OAAAw1C,GACAvtD,EAAAy7D,cAEA15D,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,O7BsgUxC,SAAUZ,EAAQD,EAASH,I8Bl9VjC,SAAAY,EAAAC,GACAA,EAAAV,EAAAH,EAAA,KAGCc,KAAA,SAAAX,EAAAozD,GAAmC,YAEpC,SAAAiS,GAAAzhD,GACA,MAAAA,EAAA+J,GAAA/J,EAAA+J,EAAA,KACA,GAAAuP,GAAA,GAAAC,OAAA,EAAAvZ,EAAAvjB,EAAAujB,MAAA0hD,EAAA1hD,EAAA2hD,EAAA3hD,EAAA+sC,EAAA/sC,EAAA4hD,EAEA,OADAtoC,GAAAwD,YAAA9c,EAAA+J,GACAuP,EAEA,UAAAC,MAAAvZ,EAAA+J,EAAA/J,EAAAvjB,EAAAujB,MAAA0hD,EAAA1hD,EAAA2hD,EAAA3hD,EAAA+sC,EAAA/sC,EAAA4hD,GAGA,QAAAC,GAAA7hD,GACA,MAAAA,EAAA+J,GAAA/J,EAAA+J,EAAA,KACA,GAAAuP,GAAA,GAAAC,WAAAk6B,KAAA,EAAAzzC,EAAAvjB,EAAAujB,MAAA0hD,EAAA1hD,EAAA2hD,EAAA3hD,EAAA+sC,EAAA/sC,EAAA4hD,GAEA,OADAtoC,GAAAwF,eAAA9e,EAAA+J,GACAuP,EAEA,UAAAC,WAAAk6B,IAAAzzC,EAAA+J,EAAA/J,EAAAvjB,EAAAujB,MAAA0hD,EAAA1hD,EAAA2hD,EAAA3hD,EAAA+sC,EAAA/sC,EAAA4hD,IAGA,QAAAE,GAAA/3C,GACA,OAAUA,IAAAttB,EAAA,EAAAujB,EAAA,EAAA0hD,EAAA,EAAAC,EAAA,EAAA5U,EAAA,EAAA6U,EAAA,GAGV,QAAAxjD,GAAAmY,GA8GA,QAAAuB,GAAAnC,EAAAosC,GACA,gBAAAzoC,GACA,GAIA58B,GACAslE,EACAr6C,EANAwkC,KACAjpD,GAAA,EACAuG,EAAA,EACA4Z,EAAAsS,EAAA1yB,MAOA,KAFAq2B,YAAAC,QAAAD,EAAA,GAAAC,OAAAD,MAEAp2B,EAAAmgB,GACA,KAAAsS,EAAA2C,WAAAp1B,KACAipD,EAAArmD,KAAA6vB,EAAA/2B,MAAA6K,EAAAvG,IACA,OAAA8+D,EAAAC,GAAAvlE,EAAAi5B,EAAAusC,SAAAh/D,KAAAxG,EAAAi5B,EAAAusC,SAAAh/D,GACA8+D,EAAA,MAAAtlE,EAAA,SACAirB,EAAAo6C,EAAArlE,QAAAirB,EAAA2R,EAAA0oC,IACA7V,EAAArmD,KAAApJ,GACA+M,EAAAvG,EAAA,EAKA,OADAipD,GAAArmD,KAAA6vB,EAAA/2B,MAAA6K,EAAAvG,IACAipD,EAAAj3C,KAAA,KAIA,QAAAitD,GAAAxsC,EAAAysC,GACA,gBAAAjW,GACA,GAAAnsC,GAAA8hD,EAAA,MACA5+D,EAAAm/D,EAAAriD,EAAA2V,EAAAw2B,GAAA,KACA,IAAAjpD,GAAAipD,EAAAlpD,OAAA,WAMA,IAHA,KAAA+c,OAAA0hD,EAAA1hD,EAAA0hD,EAAA,MAAA1hD,EAAArjB,GAGA,KAAAqjB,IAAA,KAAAA,GAAA,CACA,KAAAA,OAAA9J,EAAA,KAAA8J,GAAA,IACA,IAAAwb,GAAA,KAAAxb,GAAA6hD,EAAAC,EAAA9hD,EAAA+J,IAAAyQ,YAAA4nC,EAAAN,EAAA9hD,EAAA+J,IAAAiQ,QACAha,GAAAvjB,EAAA,EACAujB,IAAA,KAAAA,MAAA9J,EAAA,OAAA8J,EAAAsiD,GAAA9mC,EAAA,KAAAxb,EAAA9J,EAAA,EAAA8J,EAAAuiD,GAAA/mC,EAAA,KAKA,WAAAxb,IACAA,EAAA0hD,GAAA1hD,EAAAwiD,EAAA,MACAxiD,EAAA2hD,GAAA3hD,EAAAwiD,EAAA,IACAX,EAAA7hD,IAIAoiD,EAAApiD,IAIA,QAAAqiD,GAAAriD,EAAA2V,EAAAw2B,EAAA1iD,GAOA,IANA,GAGA/M,GACAkqC,EAJA1jC,EAAA,EACAmgB,EAAAsS,EAAA1yB,OACAxG,EAAA0vD,EAAAlpD,OAIAC,EAAAmgB,GAAA,CACA,GAAA5Z,GAAAhN,EAAA,QAEA,IADAC,EAAAi5B,EAAA2C,WAAAp1B,KACA,KAAAxG,GAGA,GAFAA,EAAAi5B,EAAAusC,OAAAh/D,KACA0jC,EAAA67B,GAAA/lE,IAAAulE,IAAAtsC,EAAAusC,OAAAh/D,KAAAxG,IACAkqC,IAAAn9B,EAAAm9B,EAAA5mB,EAAAmsC,EAAA1iD,IAAA,eACO,IAAA/M,GAAAyvD,EAAA7zB,WAAA7uB,KACP,SAIA,MAAAA,GAGA,QAAAi5D,GAAA1iD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAAs/C,GAAAhhE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAArjB,EAAAimE,GAAAv/C,EAAA,GAAA7gB,eAAAU,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA4/D,GAAA7iD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAAy/C,GAAAnhE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAA9J,EAAA6sD,GAAA1/C,EAAA,GAAA7gB,eAAAU,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA+/D,IAAAhjD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4/C,GAAAthE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAA9J,EAAAgtD,GAAA7/C,EAAA,GAAA7gB,eAAAU,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAkgE,IAAAnjD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA+/C,GAAAzhE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAAvjB,EAAA4mE,GAAAhgD,EAAA,GAAA7gB,eAAAU,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAqgE,IAAAtjD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAAkgD,GAAA5hE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAAvjB,EAAA+mE,GAAAngD,EAAA,GAAA7gB,eAAAU,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAwgE,IAAAzjD,EAAAmsC,EAAAjpD,GACA,MAAAm/D,GAAAriD,EAAA0jD,GAAAvX,EAAAjpD,GAGA,QAAAygE,IAAA3jD,EAAAmsC,EAAAjpD,GACA,MAAAm/D,GAAAriD,EAAA4jD,GAAAzX,EAAAjpD,GAGA,QAAA2gE,IAAA7jD,EAAAmsC,EAAAjpD,GACA,MAAAm/D,GAAAriD,EAAA8jD,GAAA3X,EAAAjpD,GAGA,QAAA6gE,IAAA/jD,GACA,MAAAgkD,IAAAhkD,EAAAga,UAGA,QAAAiqC,IAAAjkD,GACA,MAAAkkD,IAAAlkD,EAAAga,UAGA,QAAAmqC,IAAAnkD,GACA,MAAAokD,IAAApkD,EAAA0c,YAGA,QAAAm2B,IAAA7yC,GACA,MAAAqkD,IAAArkD,EAAA0c,YAGA,QAAA4nC,IAAAtkD,GACA,MAAAukD,MAAAvkD,EAAAsb,YAAA,KAGA,QAAAkpC,IAAAxkD,GACA,MAAAgkD,IAAAhkD,EAAAwa,aAGA,QAAAiqC,IAAAzkD,GACA,MAAAkkD,IAAAlkD,EAAAwa,aAGA,QAAAkqC,IAAA1kD,GACA,MAAAokD,IAAApkD,EAAA0e,eAGA,QAAAimC,IAAA3kD,GACA,MAAAqkD,IAAArkD,EAAA0e,eAGA,QAAAkmC,IAAA5kD,GACA,MAAAukD,MAAAvkD,EAAAsd,eAAA,KAvQA,GAAAomC,IAAAntC,EAAAsuC,SACAjB,GAAArtC,EAAA+C,KACAwqC,GAAAvtC,EAAA88B,KACAkR,GAAAhuC,EAAAuuC,QACAZ,GAAA3tC,EAAAkF,KACAuoC,GAAAztC,EAAAwuC,UACAV,GAAA9tC,EAAAqG,OACAwnC,GAAA7tC,EAAAyuC,YAEArC,GAAAsC,EAAAV,IACA3B,GAAAsC,EAAAX,IACAtB,GAAAgC,EAAAf,IACAhB,GAAAgC,EAAAhB,IACApB,GAAAmC,EAAAjB,IACAjB,GAAAmC,EAAAlB,IACAT,GAAA0B,EAAAZ,IACAb,GAAA0B,EAAAb,IACAjB,GAAA6B,EAAAb,IACAf,GAAA6B,EAAAd,IAEArC,IACAh7D,EAAAg9D,GACAzuC,EAAA2uC,GACAvsD,EAAAysD,GACA5uC,EAAAs9B,GACAn2D,EAAA,KACAsjB,EAAAmlD,EACA5gE,EAAA4gE,EACAzD,EAAA0D,EACAp+B,EAAAq+B,EACA57D,EAAA67D,EACA1D,EAAA2D,EACA9oE,EAAA+oE,EACA7D,EAAA8D,EACA9oE,EAAA2nE,GACAvX,EAAA2Y,EACAnD,EAAAoD,EACAzvD,EAAA0vD,EACAtD,EAAAuD,EACAtkD,EAAA,KACAqW,EAAA,KACA7N,EAAA+oC,EACAvd,EAAAuwB,EACAtD,EAAAuD,EACAruC,IAAAsuC,GAGAC,IACAl/D,EAAAy9D,GACAlvC,EAAAmvC,GACA/sD,EAAAgtD,GACAnvC,EAAAovC,GACAjoE,EAAA,KACAsjB,EAAAkmD,EACA3hE,EAAA2hE,EACAxE,EAAAyE,EACAn/B,EAAAo/B,EACA38D,EAAA48D,EACAzE,EAAA0E,EACA7pE,EAAA8pE,EACA5E,EAAA6E,EACA7pE,EAAAioE,GACA7X,EAAA0Z,EACAlE,EAAAmE,EACAxwD,EAAAywD,EACArE,EAAAsE,EACArlD,EAAA,KACAqW,EAAA,KACA7N,EAAA88C,EACAtxB,EAAAuxB,EACAtE,EAAAuE,EACArvC,IAAAsuC,GAGAvD,IACA17D,EAAA87D,EACAvtC,EAAA0tC,GACAtrD,EAAAyrD,GACA5tC,EAAA+tC,GACA5mE,EAAA+mE,GACAzjD,EAAAgnD,EACAziE,EAAAyiE,EACAtF,EAAAuF,EACAjgC,EAAAigC,EACAx9D,EAAAy9D,EACAtF,EAAAuF,EACA1qE,EAAA2qE,EACAzF,EAAA0F,EACA1qE,EAAA+lE,EACA3V,EAAAua,EACA/E,EAAAgF,EACArxD,EAAAsxD,EACAlF,EAAAmF,EACAlmD,EAAAoiD,GACA/rC,EAAAisC,GACA95C,EAAA29C,EACAnyB,EAAAoyB,EACAnF,EAAAoF,EACAlwC,IAAAmwC,EAwKA,OApKA9F,IAAAxgD,EAAAuW,EAAA8rC,GAAA7B,IACAA,GAAAnqC,EAAAE,EAAAgsC,GAAA/B,IACAA,GAAArlE,EAAAo7B,EAAA4rC,GAAA3B,IACAkE,GAAA1kD,EAAAuW,EAAA8rC,GAAAqC,IACAA,GAAAruC,EAAAE,EAAAgsC,GAAAmC,IACAA,GAAAvpE,EAAAo7B,EAAA4rC,GAAAuC,KAgKAt+C,OAAA,SAAAgO,GACA,GAAArV,GAAAwX,EAAAnC,GAAA,GAAAosC,GAEA,OADAzhD,GAAA6U,SAAA,WAA+B,MAAAQ,IAC/BrV,GAEAsmB,MAAA,SAAAjR,GACA,GAAAh5B,GAAAwlE,EAAAxsC,GAAA,GAAA8rC,EAEA,OADA9kE,GAAAw4B,SAAA,WAA+B,MAAAQ,IAC/Bh5B,GAEA62D,UAAA,SAAA79B,GACA,GAAArV,GAAAwX,EAAAnC,GAAA,GAAAswC,GAEA,OADA3lD,GAAA6U,SAAA,WAA+B,MAAAQ,IAC/BrV,GAEAwnD,SAAA,SAAAnyC,GACA,GAAAh5B,GAAAwlE,EAAAxsC,EAAAksC,EAEA,OADAllE,GAAAw4B,SAAA,WAA+B,MAAAQ,IAC/Bh5B,IAUA,QAAAqlE,GAAA/kE,EAAA44B,EAAAK,GACA,GAAAH,GAAA94B,EAAA,SACAkvD,GAAAp2B,GAAA94B,KAAA,GACAgG,EAAAkpD,EAAAlpD,MACA,OAAA8yB,IAAA9yB,EAAAizB,EAAA,GAAAp4B,OAAAo4B,EAAAjzB,EAAA,GAAAiS,KAAA2gB,GAAAs2B,KAGA,QAAA4b,GAAA9xD,GACA,MAAAA,GAAAxS,QAAAukE,GAAA,QAGA,QAAA/C,GAAA7K,GACA,UAAA3jD,QAAA,OAAA2jD,EAAA5uD,IAAAu8D,GAAA7yD,KAAA,cAGA,QAAAgwD,GAAA9K,GAEA,IADA,GAAA5uD,MAActI,GAAA,EAAAmgB,EAAA+2C,EAAAn3D,SACdC,EAAAmgB,GAAA7X,EAAA4uD,EAAAl3D,GAAAV,eAAAU,CACA,OAAAsI,GAGA,QAAAg8D,GAAAxnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA9J,GAAAmN,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAskE,GAAAvnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAAuiD,GAAAl/C,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAwkE,GAAAznD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,GACA,OAAAmgB,IAAArD,EAAAsiD,GAAAj/C,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA0kE,GAAA3nD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA+J,GAAA1G,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAykE,GAAA1nD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA+J,GAAA1G,EAAA,KAAAA,EAAA,gBAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA2kE,GAAA5nD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA,gCAAA1hB,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAAwiD,EAAAn/C,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAmkE,GAAApnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAAvjB,EAAA4mB,EAAA,KAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA+jE,GAAAhnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,KAAAqD,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAikE,GAAAlnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAAvjB,EAAA,EAAAujB,KAAAqD,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAgkE,GAAAjnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA0hD,GAAAr+C,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAokE,GAAArnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA2hD,GAAAt+C,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAqkE,GAAAtnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA+sC,GAAA1pC,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAAkkE,GAAAnnD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA4kD,GAAAtmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,IAAArD,EAAA4hD,GAAAv+C,EAAA,GAAAngB,EAAAmgB,EAAA,GAAApgB,SAAA,EAGA,QAAA4kE,GAAA7nD,EAAAmsC,EAAAjpD,GACA,GAAAmgB,GAAA6kD,GAAAvmE,KAAAwqD,EAAAvtD,MAAAsE,IAAA,GACA,OAAAmgB,GAAAngB,EAAAmgB,EAAA,GAAApgB,QAAA,EAGA,QAAAkiE,GAAAnlD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA+Z,UAAAp9B,EAAA,GAGA,QAAAyoE,GAAAplD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAsb,WAAA3+B,EAAA,GAGA,QAAA0oE,GAAArlD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAsb,WAAA,OAAA3+B,EAAA,GAGA,QAAA2oE,GAAAtlD,EAAArjB,GACA,MAAAqlE,GAAA,EAAAxS,EAAA3vB,QAAAle,MAAA6tC,EAAAvuB,SAAAjhB,MAAArjB,EAAA,GAGA,QAAA4oE,GAAAvlD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAmoD,kBAAAxrE,EAAA,GAGA,QAAA6oE,GAAAxlD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA0c,WAAA,EAAA//B,EAAA,GAGA,QAAA8oE,GAAAzlD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAmb,aAAAx+B,EAAA,GAGA,QAAA+oE,GAAA1lD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAooD,aAAAzrE,EAAA,GAGA,QAAAgpE,GAAA3lD,EAAArjB,GACA,MAAAqlE,GAAAxS,EAAAvvB,WAAAte,MAAA6tC,EAAAvuB,SAAAjhB,MAAArjB,EAAA,GAGA,QAAAipE,GAAA5lD,GACA,MAAAA,GAAAga,SAGA,QAAA6rC,GAAA7lD,EAAArjB,GACA,MAAAqlE,GAAAxS,EAAArvB,WAAAxe,MAAA6tC,EAAAvuB,SAAAjhB,MAAArjB,EAAA,GAGA,QAAAm2D,GAAA9yC,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA2c,cAAA,IAAAhgC,EAAA,GAGA,QAAAmpE,GAAA9lD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA2c,cAAA,IAAAhgC,EAAA,GAGA,QAAAopE,GAAA/lD,GACA,GAAAiK,GAAAjK,EAAAka,mBACA,QAAAjQ,EAAA,OAAAA,IAAA,QACA+3C,EAAA/3C,EAAA,YACA+3C,EAAA/3C,EAAA,UAGA,QAAAi8C,GAAAlmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAua,aAAA59B,EAAA,GAGA,QAAAwpE,GAAAnmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAsd,cAAA3gC,EAAA,GAGA,QAAAypE,GAAApmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAsd,cAAA,OAAA3gC,EAAA,GAGA,QAAA0pE,GAAArmD,EAAArjB,GACA,MAAAqlE,GAAA,EAAAxS,EAAAhyB,OAAA7b,MAAA6tC,EAAA3wB,QAAA7e,MAAArjB,EAAA,GAGA,QAAA2pE,GAAAtmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAqoD,qBAAA1rE,EAAA,GAGA,QAAA4pE,GAAAvmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA0e,cAAA,EAAA/hC,EAAA,GAGA,QAAA6pE,GAAAxmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAkd,gBAAAvgC,EAAA,GAGA,QAAA8pE,GAAAzmD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAAgb,gBAAAr+B,EAAA,GAGA,QAAA+pE,GAAA1mD,EAAArjB,GACA,MAAAqlE,GAAAxS,EAAA9xB,UAAA/b,MAAA6tC,EAAA3wB,QAAA7e,MAAArjB,EAAA,GAGA,QAAAgqE,GAAA3mD,GACA,MAAAA,GAAAwa,YAGA,QAAAosC,GAAA5mD,EAAArjB,GACA,MAAAqlE,GAAAxS,EAAA7xB,UAAAhc,MAAA6tC,EAAA3wB,QAAA7e,MAAArjB,EAAA,GAGA,QAAAkqE,GAAA7mD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA2e,iBAAA,IAAAhiC,EAAA,GAGA,QAAAmqE,GAAA9mD,EAAArjB,GACA,MAAAqlE,GAAAhiD,EAAA2e,iBAAA,IAAAhiC,EAAA,GAGA,QAAAoqE,KACA,cAGA,QAAAf,KACA,UAoBA,QAAA1vC,GAAA9O,GAMA,MALA8gD,IAAAlqD,EAAAoJ,GACAprB,EAAAk3D,WAAAgV,GAAA3gD,OACAvrB,EAAAmsE,UAAAD,GAAA1hC,MACAxqC,EAAAo3D,UAAA8U,GAAA9U,UACAp3D,EAAA0rE,SAAAQ,GAAAR,SACAQ,GAKA,QAAAE,IAAAlvC,GACA,MAAAA,GAAAmvC,cAOA,QAAAC,IAAAvc,GACA,GAAA7yB,GAAA,GAAAC,MAAA4yB,EACA,OAAA7nC,OAAAgV,GAAA,KAAAA,EA7PA,GAuNAgvC,IAvNArG,IAAY0G,IAAA,GAAAjlE,EAAA,IAAAklE,EAAA,KACZX,GAAA,UACAC,GAAA,KACAF,GAAA,iCA0NA1xC,IACAuuC,SAAA,SACAvrC,KAAA,aACA+5B,KAAA,eACAyR,SAAA,WACArpC,MAAA,wEACAspC,WAAA,2CACAnoC,QAAA,+GACAooC,aAAA,0EAYA,IAAA6D,IAAA,wBAMAC,GAAAvvC,KAAA56B,UAAA8pE,YACAD,GACApsE,EAAAo3D,UAAAqV,IAOAE,IAAA,GAAAxvC,MAAA,4BACAmvC,GACAtsE,EAAA0rE,SAAAe,GAEAzsE,GAAA4sE,wBAAA1yC,EACAl6B,EAAA6sE,iBAAA7qD,EACAhiB,EAAA8sE,UAAAJ,GACA1sE,EAAA+sE,SAAAJ,GAEA5qE,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA,O9B49VxC,SAAUZ,EAAQD,KAMlB,SAAUC,EAAQD,G+B3iXxBC,EAAAD,SACAS,QACAsnC,aAAA,OACAilC,aACAC,MAAA,IACAC,OAAA,IACAC,MAAA,S/BojXM,SAAUltE,EAAQD,GgC1jXxBC,EAAAD,SACAqllB,WACAxK,OACA,qBACA,uBAEAC,WACA,kBACA,mBAGAn6B,SACA6pD,UACAh9D,KAAA,qBACAozC,aAEA2pB,OAEA,EACA,IAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,OAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,KAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,EACA,KAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,wBAIAF,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,oBAIAF,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAGA,GACA,GACA,KAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,iBAIAF,OAEA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,2BAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,UAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,0BAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,wBAIAF,QAEA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,GACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,wBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,sBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,YAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,GACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,qBAIAF,QAEA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,GACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,YAIAF,OAEA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,iBAIAF,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,yBAIAF,OAEA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,UAIAF,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,QAGA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,QAKA,OAIA/8D,KAAA,eACA8T,YACAC,IAAA,QACAkpD,IAAA,yBAIAF,QAEA,EACA,KACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,EACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,YAIAF,QAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,uBAIAF,SAGA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,QAKA,IACA,IACA,OAIA/8D,KAAA,eACA8T,YACAC,IAAA,QACAkpD,IAAA,8BAIAF,OAEA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,UAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gCAIAF,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,UAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,OAEA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,UAIAF,OAEA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,sBAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,YAIAF,OAEA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,QAEA,GACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,GACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,mBAIAF,QAEA,GACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,QAEA,GACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,GACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gBAIAF,OAEA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,oBAIAF,QAEA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,sBAIAF,OAEA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,QAEA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,GACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,qBAIAF,QAEA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,KACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,OAEA,KACA,IACA,KACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,sBAIAF,OAEA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,QAEA,GACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,GACA,KACA,GACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,QAEA,IACA,KACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,uBAIAF,QAEA,GACA,KACA,GACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,gBAIAF,QAEA,IACA,KACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,cAIAF,QAEA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,MAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,WAIAF,OAEA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,KACA,OAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,aAIAF,QAEA,IACA,MACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,OAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,qBAIAF,OAEA,MACA,GACA,MACA,GACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,GACA,MACA,KAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,QAEA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,GACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,OAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,eAIAF,QAEA,IACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,OAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,yBAIAF,QAEA,IACA,MACA,IACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,KACA,MACA,IACA,KACA,MACA,IACA,KACA,KACA,KACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,KACA,MACA,KACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,MACA,IACA,OAGA/8D,KAAA,UACA8T,YACAC,IAAA,QACAkpD,IAAA,yBAMAC,KACAl9D,KAAA,OACA8T,YACA9gB,KAAA,oChCmkXM,SAAUpD,EAAQD,GiCpw5BxBC,EAAAD,QAAA,mkQjC0w5BM,SAAUC,EAAQD,EAASH,IkCzw5BjC,SAAAY,EAAAC,GACAA,EAAAV,IAGCW,KAAA,SAAAX,GAA4B,YAyE7B,SAAAwtE,GAAAC,EAAAv2D,GACA,GAAAhX,GAAAgX,EAAAhX,GACAwtE,EAAAx2D,EAAAw2D,KACAvpD,EAAA,MAAAjN,EAAAiN,cAA4CjN,EAAAiN,WAC5C0oB,EAAAvE,EAAAmlC,EAAAv2D,EACA,cAAAhX,GAAA,MAAAwtE,GAAuCr9D,KAAA,UAAA8T,aAAA0oB,YACvC,MAAA6gC,GAAwBr9D,KAAA,UAAAnQ,KAAAikB,aAAA0oB,aACfx8B,KAAA,UAAAnQ,KAAAwtE,OAAAvpD,aAAA0oB,YAGT,QAAAvE,GAAAmlC,EAAAv2D,GAIA,QAAA4tC,GAAAh+C,EAAA6tC,GACAA,EAAA9tC,QAAA8tC,EAAArrB,KACA,QAAA3e,GAAAyiE,EAAAtmE,EAAA,GAAAA,KAAAqP,EAAA,EAAA8Q,EAAAtc,EAAA9D,OAA2DsP,EAAA8Q,IAAO9Q,EAClEw+B,EAAAjrC,KAAAikE,EAAAhjE,EAAAwL,MAEArP,GAAA,GAAA6hB,EAAAgsB,EAAA1tB,GAGA,QAAAomB,GAAA9sC,GACA,MAAAotE,GAAAptE,GAGA,QAAA0jD,GAAAmpB,GAEA,OADAz4B,MACA7tC,EAAA,EAAAmgB,EAAAmmD,EAAAvmE,OAAoCC,EAAAmgB,IAAOngB,EAAAg+C,EAAAsoB,EAAAtmE,GAAA6tC,EAE3C,OADAA,GAAA9tC,OAAA,GAAA8tC,EAAAjrC,KAAAirC,EAAA,IACAA,EAGA,QAAAmB,GAAAs3B,GAEA,IADA,GAAAz4B,GAAAsP,EAAAmpB,GACAz4B,EAAA9tC,OAAA,GAAA8tC,EAAAjrC,KAAAirC,EAAA,GACA,OAAAA,GAGA,QAAAiB,GAAAw3B,GACA,MAAAA,GAAAh+D,IAAA0mC,GAGA,QAAAjJ,GAAA31B,GACA,GAAA+1B,GAAA58B,EAAA6G,EAAA7G,IACA,QAAAA,GACA,gCAAyCA,OAAAozC,WAAAvsC,EAAAusC,WAAAr0C,IAAAy9B,GACzC,aAAAI,EAAAI,EAAAn2B,EAAA+1B,YAAuD,MACvD,kBAAAA,EAAA/1B,EAAA+1B,YAAA79B,IAAAi+B,EAAgE,MAChE,kBAAAJ,EAAAgX,EAAA/sC,EAAAk2D,KAAoD,MACpD,uBAAAngC,EAAA/1B,EAAAk2D,KAAAh+D,IAAA60C,EAA6D,MAC7D,eAAAhX,EAAA2I,EAAA1+B,EAAAk2D,KAAoD,MACpD,oBAAAngC,EAAA/1B,EAAAk2D,KAAAh+D,IAAAwmC,EAA6D,MAC7D,qBAEA,OAAYvlC,OAAA48B,eA5CZ,GAAA0gC,GAAAzlB,EAAAulB,EAAAvlB,WACAklB,EAAAK,EAAAL,IA8CA,OAAAvgC,GAAA31B,GAiFA,QAAA02D,GAAAH,EAAAI,EAAAx+D,GACA,GAAA+9D,GAAAtmE,EAAAmgB,CACA,IAAAjf,UAAAnB,OAAA,EAAAumE,EAAAU,EAAAL,EAAAI,EAAAx+D,OACA,KAAAvI,EAAA,EAAAsmE,EAAA,GAAA1rE,OAAAulB,EAAAwmD,EAAAL,KAAAvmE,QAA8DC,EAAAmgB,IAAOngB,EAAAsmE,EAAAtmE,IACrE,QAAUuJ,KAAA,kBAAA+8D,KAAAW,EAAAN,EAAAL,IAGV,QAAAU,GAAAL,EAAAI,EAAAx+D,GAKA,QAAA2+D,GAAAlnE,GACA,GAAAuG,GAAAvG,EAAA,GAAAA,KACAmnE,EAAA5gE,KAAA4gE,EAAA5gE,QAAA3D,MAAkD5C,IAAA6M,EAAAu6D,IAGlD,QAAAC,GAAAf,GACAA,EAAAz2D,QAAAq3D,GAGA,QAAAI,GAAAhB,GACAA,EAAAz2D,QAAAw3D,GAGA,QAAAE,GAAAjB,GACAA,EAAAz2D,QAAAy3D,GAGA,QAAAvhC,GAAA31B,GACA,OAAAg3D,EAAAh3D,IAAA7G,MACA,yBAAA6G,EAAAusC,WAAA9sC,QAAAk2B,EAAgE,MAChE,kBAAAshC,EAAAj3D,EAAAk2D,KAA0C,MAC1C,qCAAAgB,EAAAl3D,EAAAk2D,KAA+D,MAC/D,oBAAAiB,EAAAn3D,EAAAk2D,OA1BA,GAEAc,GAFAd,KACAa,IAmCA,OANAphC,GAAAghC,GAEAI,EAAAt3D,QAAA,MAAAtH,EACA,SAAAi/D,GAAyBlB,EAAA1jE,KAAA4kE,EAAA,GAAAxnE,IACzB,SAAAwnE,GAAyBj/D,EAAAi/D,EAAA,GAAA36D,EAAA26D,IAAAznE,OAAA,GAAA8M,IAAAy5D,EAAA1jE,KAAA4kE,EAAA,GAAAxnE,KAEzBsmE,EAGA,QAAAmB,GAAAz4B,GAEA,IADA,GAAAnrC,GAAA7D,GAAA,EAAAmgB,EAAA6uB,EAAAjvC,OAAAyU,EAAAw6B,EAAA7uB,EAAA,GAAA28B,EAAA,IACA98C,EAAAmgB,GAAAtc,EAAA2Q,IAAAw6B,EAAAhvC,GAAA88C,GAAAj5C,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,EACA,OAAAqJ,MAAAwB,IAAAy9B,GAOA,QAAA4qB,GAAAf,EAAAjqD,GAOA,QAAAqpB,GAAA31B,GACA,OAAAA,EAAA7G,MACA,yBAAA6G,EAAAusC,WAAA9sC,QAAAk2B,EAAgE,MAChE,eAAA4hC,EAAAv3D,EAAAk2D,KAAsC,MACtC,oBAAAl2D,EAAAk2D,KAAAz2D,QAAA83D,IAIA,QAAAA,GAAA74B,GACAA,EAAAj/B,QAAA,SAAAm/B,GACAA,EAAAn/B,QAAA,SAAAmuC,IACA4pB,EAAA5pB,IAAA,GAAAA,OAAA4pB,EAAA5pB,QAAAp7C,KAAAksC,OAGA+4B,EAAAjlE,KAAAksC,GAGA,QAAAgO,GAAA9N,GACA,MAAAy4B,GAAAjmC,EAAAmlC,GAA4Cp9D,KAAA,UAAA+8D,MAAAt3B,KAA8B7I,YAAA,IAxB1E,GAAAyhC,MACAC,KACAjP,IAmDA,OAjDAl8C,GAAA7M,QAAAk2B,GAuBA8hC,EAAAh4D,QAAA,SAAAi/B,GACA,IAAAA,EAAAtuC,EAAA,CACA,GAAA80B,MACAwyC,GAAAh5B,EAGA,KAFAA,EAAAtuC,EAAA,EACAo4D,EAAAh2D,KAAA0yB,GACAwZ,EAAAg5B,EAAAtlD,OACA8S,EAAA1yB,KAAAksC,GACAA,EAAAj/B,QAAA,SAAAm/B,GACAA,EAAAn/B,QAAA,SAAAmuC,GACA4pB,EAAA5pB,EAAA,GAAAA,KAAAnuC,QAAA,SAAAi/B,GACAA,EAAAtuC,IACAsuC,EAAAtuC,EAAA,EACAsnE,EAAAllE,KAAAksC,aASA+4B,EAAAh4D,QAAA,SAAAi/B,SACAA,GAAAtuC,KAIA+I,KAAA,eACA+8D,KAAA1N,EAAAtwD,IAAA,SAAAu/D,GACA,GAAA1nD,GAAAmmD,IAmBA,IAhBAuB,EAAAh4D,QAAA,SAAAi/B,GACAA,EAAAj/B,QAAA,SAAAm/B,GACAA,EAAAn/B,QAAA,SAAAmuC,GACA4pB,EAAA5pB,EAAA,GAAAA,KAAAj+C,OAAA,GACAumE,EAAA1jE,KAAAo7C,SAOAsoB,EAAAW,EAAAN,EAAAL,IAKAnmD,EAAAmmD,EAAAvmE,QAAA,EACA,OAAAgoE,GAAA9+D,EAAAjJ,EAAA,EAAAqP,EAAAytC,EAAAwpB,EAAA,IAAiDtmE,EAAAmgB,IAAOngB,GACxD+nE,EAAAjrB,EAAAwpB,EAAAtmE,KAAAqP,IACApG,EAAAq9D,EAAA,GAAAA,EAAA,GAAAA,EAAAtmE,GAAAsmE,EAAAtmE,GAAAiJ,EAAAoG,EAAA04D,EAKA,OAAAzB,MAkeA,QAAA0B,GAAA9nE,EAAAoS,EAAAO,EAAA2jB,GACAyxC,EAAA/nE,EAAAoS,EAAAO,GACAo1D,EAAA/nE,EAAAoS,IAAAkkB,GACAyxC,EAAA/nE,EAAAoS,EAAAkkB,EAAA3jB,GAGA,QAAAo1D,GAAA/nE,EAAAoS,EAAAO,GACA,OAAA5J,GAAA4W,EAAAvN,GAAAO,KAAAP,GAAA,GAAmDA,EAAAuN,IAAavN,IAAAO,EAChE5J,EAAA/I,EAAAoS,GAAApS,EAAAoS,GAAApS,EAAA2S,GAAA3S,EAAA2S,GAAA5J,EAuSA,QAAAi/D,GAAAna,GACA,aAAAA,GAA0BxkD,KAAA,OAC1B,sBAAAwkD,EAAAxkD,KAAA4+D,EACA,YAAApa,EAAAxkD,KAAA6+D,EACAC,GAAAta,GAGA,QAAAoa,GAAApa,GACA,GAAAD,IAAgBvkD,KAAA,qBAAAozC,WAAAoR,EAAA5wC,SAAA7U,IAAA8/D,GAEhB,OADA,OAAAra,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,MACA9Y,EAGA,QAAAsa,GAAAra,GACA,GAAAhzD,GAAA+yD,EAAAua,EAAAta,EAAAhoB,SACA,OAAAgoB,EAAA30D,KAAA00D,EAAA10D,GAAA20D,EAAA30D,IACA,MAAA20D,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,KACA,KAAA7rE,IAAAgzD,GAAA1wC,WAAA,CAAiCywC,EAAAzwC,WAAA0wC,EAAA1wC,UAAsC,OACvE,MAAAywC,GAGA,QAAAua,GAAAta,GACA,SAAAA,EAAA,OAA6BxkD,KAAA,KAC7B,IAAAukD,GAAA,uBAAAC,EAAAxkD,MAAsDA,KAAA,qBAAAozC,WAAAoR,EAAApR,WAAAr0C,IAAA+/D,IACtD,UAAAta,EAAAxkD,MAAA,eAAAwkD,EAAAxkD,MAAiEA,KAAAwkD,EAAAxkD,KAAA48B,YAAA4nB,EAAA5nB,cACxD58B,KAAAwkD,EAAAxkD,KAAA+8D,KAAAvY,EAAA5nB,YAET,OADA,OAAA4nB,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,MACA9Y,EAmIA,QAAAwa,GAAAtqB,GACA,GAAA/0C,GAAAjJ,EAAAg+C,EAAA,GAAAz3C,EAAAy3C,EAAA,EAEA,OADAz3C,GAAAvG,IAAAiJ,EAAAjJ,IAAAuG,IAAA0C,GACAjJ,EAAA,GAAAuG,EAGA,QAAAgiE,GAAAC,EAAAC,GACA,GACAx/D,GADAy/D,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GACAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,EAGA,OAFAE,GAAAD,IAAAz/D,EAAAy/D,IAAAC,IAAA1/D,GACA4/D,EAAAD,IAAA3/D,EAAA2/D,IAAAC,IAAA5/D,GACAy/D,IAAAE,GAAAD,IAAAE,EAyHA,QAAAC,KACA,SAGA,QAAAC,GAAA1qD,GACA,MAAAA,GAGA,QAAA2qD,GAAAjjC,GACA,aAAAA,EAAAx8B,KA0CA,QAAA0/D,GAAAC,GACA,GAAArlE,GAAAqlE,EAAA,GAAA10D,EAAA00D,EAAA,GAAA1vE,EAAA0vE,EAAA,EACA,OAAArrD,MAAAwB,KAAAxb,EAAA,GAAArK,EAAA,KAAAgb,EAAA,GAAA3Q,EAAA,KAAAA,EAAA,GAAA2Q,EAAA,KAAAhb,EAAA,GAAAqK,EAAA,OAGA,QAAAslE,GAAAn6B,GAEA,IADA,GAAAnrC,GAAA7D,GAAA,EAAAmgB,EAAA6uB,EAAAjvC,OAAAyU,EAAAw6B,EAAA7uB,EAAA,GAAA28B,EAAA,IACA98C,EAAAmgB,GAAAtc,EAAA2Q,IAAAw6B,EAAAhvC,GAAA88C,GAAAj5C,EAAA,GAAA2Q,EAAA,GAAA3Q,EAAA,GAAA2Q,EAAA,EACA,OAAAqJ,MAAAwB,IAAAy9B,GAAA,EAqBA,QAAAr9B,GAAA5b,EAAA2Q,GACA,MAAA3Q,GAAA,MAAA2Q,EAAA,MAsDA,QAAAm4C,GAAApmB,GACA,OAAAA,EAAA,GAAAA,EAAA,MAyFA,QAAAwoB,GAAA7uD,EAAAzG,GACA,GAAA0mB,EAAAjgB,EAAAH,OAAA,CACA,IAAAtG,OAAA,GAAA0mB,EAAA,QAAAjgB,GAAA,EACA,IAAAzG,GAAA,QAAAyG,GAAAigB,EAAA,EACA,IAAAA,GACAyF,GAAAzF,EAAA,GAAA1mB,EACAuG,EAAA6d,KAAAgB,MAAA+G,GACA/hB,EAAA3D,EAAAF,GACAwU,EAAAtU,EAAAF,EAAA,EACA,OAAA6D,IAAA2Q,EAAA3Q,IAAA+hB,EAAA5lB,IAGA,QAAA6gB,GAAAhd,EAAA2Q,GACA,MAAAA,GAAA3Q,EAyCA,QAAAulE,GAAAp6B,EAAA5I,GAUA,IATA,GAIAkB,GAEAC,EACAE,EAPAznC,EAAA,EACAmgB,EAAA6uB,EAAAjvC,OACAohB,EAAA,EACAolB,EAAAyI,EAAA5I,EAAApmC,IAAAmgB,EAAA,GACA0oB,EAAAtC,EAAA,GAAAc,GACA0B,EAAAxC,EAAA,GAAAc,GAAA,EAAAG,GACA2O,EAAA3vB,GAAAuiB,GACA8U,EAAAp3B,GAAAsiB,GAEQ/oC,EAAAmgB,IAAOngB,EAAA,CACfumC,EAAAyI,EAAAhvC,GACAsnC,EAAAuB,IAAAtC,EAAA,GAAAc,GACA0B,EAAAxC,EAAA,GAAAc,GAAA,EAAAG,GACAD,EAAA4O,IAAA3vB,GAAAuiB,GACAtB,EAAAoW,IAAAp3B,GAAAsiB,EAMA,IAAArB,GAAAmB,EAAAvB,EACAK,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAr4B,EAAAo4B,EAAAoW,EACA9V,EAAAR,EAAA4O,EAAA9mC,EAAAmX,GAAAohB,GACAt4B,EAAAD,EAAAs4B,EAAAlhB,GAAAmhB,EACAzmB,IAAAsG,GAAAnY,EAAAy4B,GAGA,MAAA5mB,GAGA,QAAAkoD,GAAAr6B,EAAAs6B,GACA,GAAAnoD,GAAAioD,EAAAp6B,GAAA,EAEA,OADAs6B,KAAAnoD,IAAA,GACA,GAAAA,EAAA,EAAAorB,GAAAprB,KAGA,QAAAooD,GAAAtgE,GACA,GAAAkY,GAAAioD,EAAAngE,GAAA,EACA,WAAAkY,EAAA,EAAAorB,GAAAprB,KAltDA,GAAAO,GAAA,SAAArD,GACA,MAAAA,IAGA+iC,EAAA,SAAAA,GACA,SAAAA,EAAA,MAAA1/B,EACA,IAAAS,GACA+oB,EACAmQ,EAAA+F,EAAAxK,MAAA,GACA0E,EAAA8F,EAAAxK,MAAA,GACA5E,EAAAoP,EAAAvK,UAAA,GACA/E,EAAAsP,EAAAvK,UAAA,EACA,iBAAAkX,EAAA/tD,GACAA,IAAAmiB,EAAA+oB,EAAA,EACA,IAAA3kC,GAAA,EAAA4Z,EAAA4tC,EAAAhuD,OAAA+tD,EAAA,GAAAlzD,OAAAulB,EAGA,KAFA2tC,EAAA,IAAA3rC,GAAA4rC,EAAA,IAAA1S,EAAArJ,EACA8b,EAAA,IAAA5iB,GAAA6iB,EAAA,IAAAzS,EAAAxJ,EACAvrC,EAAA4Z,GAAA2tC,EAAAvnD,GAAAwnD,EAAAxnD,MACA,OAAAunD,KAIA8Y,EAAA,SAAAD,GAIA,QAAA6C,GAAA/vE,GACAA,EAAAwP,EAAAxP,GACAA,EAAA,GAAA0oB,MAAA1oB,EAAA,IACAA,EAAA,GAAA2oB,MAAA3oB,EAAA,IACAA,EAAA,GAAAyxC,MAAAzxC,EAAA,IACAA,EAAA,GAAAy0C,MAAAz0C,EAAA,IAGA,QAAAgwE,GAAAr5D,GACA,OAAAA,EAAA7G,MACA,yBAAA6G,EAAAusC,WAAA9sC,QAAA45D,EAAoE,MACpE,aAAAD,EAAAp5D,EAAA+1B,YAA6C,MAC7C,kBAAA/1B,EAAA+1B,YAAAt2B,QAAA25D,IAfA,GAAAzuE,GAAAkO,EAAAm4C,EAAAulB,EAAAvlB,WACAj/B,EAAAoT,IAAA2V,EAAA/oB,EAAAC,GAAAD,EAAA+rB,GAAA/rB,CAkBAwkD,GAAAL,KAAAz2D,QAAA,SAAAmuC,GAEA,IADA,GAAAvkD,GAAAuG,GAAA,EAAAmgB,EAAA69B,EAAAj+C,SACAC,EAAAmgB,GACA1mB,EAAAwP,EAAA+0C,EAAAh+C,MACAvG,EAAA,GAAA0oB,MAAA1oB,EAAA,IACAA,EAAA,GAAA2oB,MAAA3oB,EAAA,IACAA,EAAA,GAAAyxC,MAAAzxC,EAAA,IACAA,EAAA,GAAAy0C,MAAAz0C,EAAA,KAIA,KAAAsB,IAAA4rE,GAAAjqD,QACA+sD,EAAA9C,EAAAjqD,QAAA3hB,GAGA,QAAAonB,EAAA+oB,EAAA9oB,EAAA8rB,IAGArsB,EAAA,SAAA3hB,EAAAigB,GAEA,IADA,GAAAlX,GAAA1C,EAAArG,EAAAH,OAAAC,EAAAuG,EAAA4Z,EACAngB,IAAAuG,GAAA0C,EAAA/I,EAAAF,GAAAE,EAAAF,KAAAE,EAAAqG,GAAArG,EAAAqG,GAAA0C,GAGAwT,EAAA,SAAAkqD,EAAAv2D,GACA,6BAAAA,EAAA7G,MACSA,KAAA,oBAAA4T,SAAA/M,EAAAusC,WAAAr0C,IAAA,SAAA8H,GAAmE,MAAAs2D,GAAAC,EAAAv2D,MAC5Es2D,EAAAC,EAAAv2D,IAgEA62D,EAAA,SAAAN,EAAAL,GAiDA,QAAAoD,GAAA1pE,GACA,GAAA09C,GAAAM,EAAA2oB,EAAAL,KAAAtmE,EAAA,GAAAA,KAAAipC,EAAA+U,EAAA,EAGA,OAFA2oB,GAAAvlB,WAAA1D,GAAA,KAAAM,EAAAnuC,QAAA,SAAA85D,GAAmEjsB,EAAA,IAAAisB,EAAA,GAAAjsB,EAAA,IAAAisB,EAAA,MACnEjsB,EAAAM,IAAAj+C,OAAA,GACAC,EAAA,GAAA09C,EAAAzU,MAAAyU,GAGA,QAAAksB,GAAAC,EAAAC,GACA,OAAAz6D,KAAAw6D,GAAA,CACA,GAAAzsD,GAAAysD,EAAAx6D,SACAy6D,GAAA1sD,EAAA9K,aACA8K,GAAA9K,YACA8K,GAAAvK,IACAuK,EAAAvN,QAAA,SAAA7P,GAA6B+pE,EAAA/pE,EAAA,GAAAA,KAAA,IAC7BgqE,EAAApnE,KAAAwa,IA9DA,GAAA2sD,MACAD,KACAD,KACAG,KACAC,GAAA,CAkEA,OA/DA3D,GAAAz2D,QAAA,SAAA7P,EAAAuG,GACA,GAAA0C,GAAA+0C,EAAA2oB,EAAAL,KAAAtmE,EAAA,GAAAA,IACAg+C,GAAAj+C,OAAA,IAAAi+C,EAAA,QAAAA,EAAA,QACA/0C,EAAAq9D,IAAA2D,GAAA3D,EAAA2D,GAAAjqE,EAAAsmE,EAAA//D,GAAA0C,KAIAq9D,EAAAz2D,QAAA,SAAA7P,GACA,GAGAod,GAAAvQ,EAHAxL,EAAAqoE,EAAA1pE,GACAsS,EAAAjR,EAAA,GACAwR,EAAAxR,EAAA,EAGA,IAAA+b,EAAAysD,EAAAv3D,GAIA,SAHAu3D,GAAAzsD,EAAAvK,KACAuK,EAAAxa,KAAA5C,GACAod,EAAAvK,MACAhG,EAAAi9D,EAAAj3D,GAAA,OACAi3D,GAAAj9D,EAAAyF,MACA,IAAA43D,GAAAr9D,IAAAuQ,MAAAtO,OAAAjC,EACAi9D,GAAAI,EAAA53D,MAAA8K,EAAA9K,OAAAu3D,EAAAK,EAAAr3D,IAAAhG,EAAAgG,KAAAq3D,MAEAJ,GAAA1sD,EAAA9K,OAAAu3D,EAAAzsD,EAAAvK,KAAAuK,MAEK,IAAAA,EAAA0sD,EAAAj3D,GAIL,SAHAi3D,GAAA1sD,EAAA9K,OACA8K,EAAA+sD,QAAAnqE,GACAod,EAAA9K,QACAzF,EAAAg9D,EAAAv3D,GAAA,OACAu3D,GAAAh9D,EAAAgG,IACA,IAAAu3D,GAAAv9D,IAAAuQ,IAAAvQ,EAAAiC,OAAAsO,EACA0sD,GAAAM,EAAA93D,MAAAzF,EAAAyF,OAAAu3D,EAAAO,EAAAv3D,IAAAuK,EAAAvK,KAAAu3D,MAEAN,GAAA1sD,EAAA9K,OAAAu3D,EAAAzsD,EAAAvK,KAAAuK,MAGAA,IAAApd,GACA8pE,EAAA1sD,EAAA9K,SAAAu3D,EAAAzsD,EAAAvK,OAAAuK,IAsBAwsD,EAAAC,EAAAC,GACAF,EAAAE,EAAAD,GACAvD,EAAAz2D,QAAA,SAAA7P,GAA4B+pE,EAAA/pE,EAAA,GAAAA,MAAAgqE,EAAApnE,MAAA5C,MAE5BgqE,GAGAK,EAAA,SAAA1D,GACA,MAAAnlC,GAAAmlC,EAAAG,EAAArgE,MAAA5M,KAAAqH,aAwDAiiB,EAAA,SAAAwjD,GACA,MAAAnlC,GAAAmlC,EAAAe,EAAAjhE,MAAA5M,KAAAqH,aA4FAgjB,EAAA,SAAArgB,EAAAwa,GAEA,IADA,GAAAsB,GAAA,EAAAC,EAAA/b,EAAA9D,OACA4f,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACA/b,GAAAgc,GAAAxB,EAAAsB,EAAAE,EAAA,EACAD,EAAAC,EAEA,MAAAF,IAGAmoD,EAAA,SAAAprD,GAIA,QAAAygC,GAAAmpB,EAAAtmE,GACAsmE,EAAAz2D,QAAA,SAAAhM,GACAA,EAAA,IAAAA,KACA,IAAAuM,GAAAk6D,EAAAzmE,EACAuM,KAAAxN,KAAA5C,GACAsqE,EAAAzmE,IAAA7D,KAIA,QAAA8uC,GAAAw3B,EAAAtmE,GACAsmE,EAAAz2D,QAAA,SAAAmuC,GAAgCb,EAAAa,EAAAh+C,KAGhC,QAAA+lC,GAAA31B,EAAApQ,GACA,uBAAAoQ,EAAA7G,KAAA6G,EAAAusC,WAAA9sC,QAAA,SAAAO,GAA2E21B,EAAA31B,EAAApQ,KAC3EoQ,EAAA7G,OAAAghE,MAAAn6D,EAAA7G,MAAA6G,EAAAk2D,KAAAtmE,GAlBA,GAAAsqE,MACAxC,EAAAprD,EAAApU,IAAA,WAA0C,WAoB1CiiE,GACAjuB,WAAAa,EACAZ,gBAAAzN,EACA0N,QAAA1N,EACA2N,aAAA,SAAA6pB,EAAAtmE,GAAqCsmE,EAAAz2D,QAAA,SAAAmuC,GAA6BlP,EAAAkP,EAAAh+C,MAGlE0c,GAAA7M,QAAAk2B,EAEA,QAAA/lC,KAAAsqE,GACA,OAAA/mD,GAAA+mD,EAAAtqE,GAAAzG,EAAAgqB,EAAAxjB,OAAAwG,EAAA,EAAkEA,EAAAhN,IAAOgN,EACzE,OAAA8I,GAAA9I,EAAA,EAAyB8I,EAAA9V,IAAO8V,EAAA,CAChC,GAAA8Q,GAAAqqD,EAAAjnD,EAAAhd,GAAAkkE,EAAAlnD,EAAAlU,IACA8Q,EAAA2nD,EAAA0C,IAAAxqE,EAAAkkB,EAAA/D,EAAAsqD,SAAAtqD,EAAAzZ,OAAA1G,EAAA,EAAAyqE,IACAtqD,EAAA2nD,EAAA2C,IAAAzqE,EAAAkkB,EAAA/D,EAAAqqD,SAAArqD,EAAAzZ,OAAA1G,EAAA,EAAAwqE,GAKA,MAAA1C,IAGA4C,EAAA,SAAAtpB,GACA,SAAAA,EAAA,MAAA1/B,EACA,IAAAS,GACA+oB,EACAmQ,EAAA+F,EAAAxK,MAAA,GACA0E,EAAA8F,EAAAxK,MAAA,GACA5E,EAAAoP,EAAAvK,UAAA,GACA/E,EAAAsP,EAAAvK,UAAA,EACA,iBAAAkX,EAAA/tD,GACAA,IAAAmiB,EAAA+oB,EAAA,EACA,IAAA3kC,GAAA,EACA4Z,EAAA4tC,EAAAhuD,OACA+tD,EAAA,GAAAlzD,OAAAulB,GACAiC,EAAAvE,KAAAC,OAAAiwC,EAAA,GAAA/b,GAAAqJ,GACAnN,EAAArwB,KAAAC,OAAAiwC,EAAA,GAAAjc,GAAAwJ,EAGA,KAFAwS,EAAA,GAAA1rC,EAAAD,IAAAC,EACA0rC,EAAA,GAAA5f,EAAAhD,IAAAgD,EACA3nC,EAAA4Z,GAAA2tC,EAAAvnD,GAAAwnD,EAAAxnD,MACA,OAAAunD,KAIAjD,EAAA,SAAA8b,EAAAvlB,GAcA,QAAAupB,GAAApkC,GACA,MAAAt9B,GAAAs9B,GAGA,QAAAqkC,GAAA7c,GACA,GAAAD,EACA,QAAAC,EAAAxkD,MACA,yBAAAukD,GAA2CvkD,KAAA,qBAAAozC,WAAAoR,EAAApR,WAAAr0C,IAAAsiE,GAAgF,MAC3H,aAAA9c,GAA8BvkD,KAAA,QAAA48B,YAAAwkC,EAAA5c,EAAA5nB,aAA8D,MAC5F,kBAAA2nB,GAAmCvkD,KAAA,aAAA48B,YAAA4nB,EAAA5nB,YAAA79B,IAAAqiE,GAAuE,MAC1G,eAAA5c,GAKA,MAHA,OAAAA,EAAA30D,KAAA00D,EAAA10D,GAAA20D,EAAA30D,IACA,MAAA20D,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,MACA,MAAA7Y,EAAA1wC,aAAAywC,EAAAzwC,WAAA0wC,EAAA1wC,YACAywC,EAGA,QAAA+c,GAAA9c,GACA,GAAAt0D,GAAAuG,EAAA,EAAAuG,EAAA,EAAA4Z,EAAA4tC,EAAAhuD,OAAA+tD,EAAA,GAAAlzD,OAAAulB,EAEA,KADA2tC,EAAA,GAAA7kD,EAAA8kD,EAAA,QACA/tD,EAAAmgB,KAAA1mB,EAAAwP,EAAA8kD,EAAA/tD,OAAA,IAAAvG,EAAA,MAAAq0D,EAAAvnD,KAAA9M,EAGA,OAFA,KAAA8M,IAAAunD,EAAAvnD,MAAA,MACAunD,EAAA/tD,OAAAwG,EACAunD,EArCA,GAAA6Y,EAAAvlB,UAAA,SAAAl0C,OAAA,oBAEA,IAAAk0C,KAAAxK,MAMAk0B,EAAAnE,EAAAC,SANA,CACA,MAAAzmD,EAAAtC,KAAAgB,MAAAuiC,KAAA,YAAAl0C,OAAA,eACA49D,GAAAnE,EAAAC,QAAAD,EACA,IAAAxmD,GAAAgC,EAAA2oD,EAAA,GAAA5/B,EAAA4/B,EAAA,GAAA1oD,EAAA0oD,EAAA,GAAA58B,EAAA48B,EAAA,EACA1pB,IAAiBxK,OAAAx0B,EAAAD,GAAAC,EAAAD,IAAAhC,EAAA,KAAA+tB,EAAAhD,GAAAgD,EAAAhD,IAAA/qB,EAAA,MAAA02B,WAAA10B,EAAA+oB,IAKjB,GAAA4/B,GAAA/vE,EAAAkO,EAAAyhE,EAAAtpB,GAAA2pB,EAAApE,EAAAjqD,QAAAsuD,IA6BA,KAAAjwE,IAAAgwE,GAAAC,EAAAjwE,GAAA6vE,EAAAG,EAAAhwE,GAEA,QACAwO,KAAA,WACAq9D,KAAAkE,EACA1pB,YACA1kC,QAAAsuD,EACA1E,KAAAK,EAAAL,KAAAh+D,IAAAuiE,KAKA9tB,EAAA,SAAArgC,GAMA,QAAAuuD,GAAAllC,GACA,MAAAA,GAAAmlC,EAAA/7D,eAAA42B,EAAAx8B,OAAA2hE,EAAAnlC,EAAAx8B,MAAAw8B,GAaA,QAAAolC,GAAAhlC,GACA,GAAA9nB,GAAA8nB,EAAA,GACAtf,EAAAsf,EAAA,EACA9nB,GAAA8D,MAAA9D,GACAA,EAAA+D,MAAA/D,GACAwI,EAAAqkB,MAAArkB,GACAA,EAAAqnB,MAAArnB,GAGA,QAAAukD,GAAAjlC,GACAA,EAAAt2B,QAAAs7D,GAGA,QAAAE,GAAAllC,GACAA,EAAAt2B,QAAAu7D,GAjCA,GAAAjpD,GAAAoT,IACA2V,EAAA3V,IACAnT,IAAAmT,KACA2Y,IAAA3Y,KAMA21C,GACAxuB,mBAAA,SAAAtsC,GAAqCA,EAAAusC,WAAA9sC,QAAAo7D,IACrC7uB,MAAA,SAAAhsC,GAAwB+6D,EAAA/6D,EAAA+1B,cACxBkW,WAAA,SAAAjsC,GAA6BA,EAAA+1B,YAAAt2B,QAAAs7D,IAC7B7uB,WAAA,SAAAlsC,GAA6Bg7D,EAAAh7D,EAAAk2D,OAC7B/pB,gBAAA,SAAAnsC,GAAkCA,EAAAk2D,KAAAz2D,QAAAu7D,IAClC5uB,QAAA,SAAApsC,GAA0BA,EAAAk2D,KAAAz2D,QAAAu7D,IAC1B3uB,aAAA,SAAArsC,GAA+BA,EAAAk2D,KAAAz2D,QAAAw7D,IAoB/B,QAAAtwE,KAAA2hB,GACAuuD,EAAAvuD,EAAA3hB,GAGA,OAAAqnB,IAAAD,GAAA+rB,GAAAhD,GAAA/oB,EAAA+oB,EAAA9oB,EAAA8rB,GAAAh9B,QAGAo6D,EAAA,SAAAnpC,EAAAopC,EAAAC,EAAAjiE,EAAA64B,GAaA,QAAAp2B,GAAAjS,GAIA,IAHA,GAAAgP,GAAAwiE,EAAAxxE,GAAA0xE,EACAtgE,EAAA4B,EAAAhE,GACA2iE,EAAA,EACAvgE,GAAAi3B,GAAA,CACA,GAAAopC,EAAArgE,EAAApR,GAAA,QACA,MAAA2xE,GAAAvpC,EAAA,SAAAj1B,OAAA,eACA/B,GAAA4B,EAAAhE,IAAA,EAAA0iE,GAGA,MADA1+D,GAAAhE,GAAAhP,GACA,EAGA,QAAAgoC,GAAAhoC,GAIA,IAHA,GAAAgP,GAAAwiE,EAAAxxE,GAAA0xE,EACAtgE,EAAA4B,EAAAhE,GACA2iE,EAAA,EACAvgE,GAAAi3B,GAAA,CACA,GAAAopC,EAAArgE,EAAApR,GAAA,QACA,MAAA2xE,GAAAvpC,EAAA,KACAh3B,GAAA4B,EAAAhE,IAAA,EAAA0iE,GAEA,SAGA,QAAA7qD,KAEA,OADAA,MACA5gB,EAAA,EAAAmgB,EAAApT,EAAAhN,OAAqCC,EAAAmgB,IAAOngB,EAAA,CAC5C,GAAAmL,GAAA4B,EAAA/M,EACAmL,IAAAi3B,GAAAxhB,EAAAhe,KAAAuI,GAEA,MAAAyV,GA3CA,IAAA1f,UAAAnB,SACAwJ,EAAA3O,MACAwnC,EAAA,KAMA,QAHAr1B,GAAA,GAAAxD,GAAA44B,EAAA,GAAAtkB,KAAAc,IAAA,EAAAd,KAAA8D,KAAA9D,KAAArH,IAAA2rB,GAAAtkB,KAAAmE,OACAypD,EAAAtpC,EAAA,EAEAniC,EAAA,EAAiBA,EAAAmiC,IAAUniC,EAC3B+M,EAAA/M,GAAAoiC,CAqCA,QACAp2B,MACA+1B,MACAnhB,WAIA+qD,EAAA,SAAAxpC,EAAAopC,EAAAC,EAAAI,EAAAC,EAAAC,GAcA,QAAA58D,GAAAnU,EAAAhB,GAIA,IAHA,GAAAgP,GAAAwiE,EAAAxwE,GAAA0wE,EACAM,EAAAC,EAAAjjE,GACA2iE,EAAA,EACAK,GAAAF,GAAA,CACA,GAAAL,EAAAO,EAAAhxE,GAAA,MAAAkxE,GAAAljE,GAAAhP,CACA,MAAA2xE,GAAAvpC,EAAA,SAAAj1B,OAAA,eACA6+D,GAAAC,EAAAjjE,IAAA,EAAA0iE,GAIA,MAFAO,GAAAjjE,GAAAhO,EACAkxE,EAAAljE,GAAAhP,EACAA,EAGA,QAAAmyE,GAAAnxE,EAAAhB,GAIA,IAHA,GAAAgP,GAAAwiE,EAAAxwE,GAAA0wE,EACAM,EAAAC,EAAAjjE,GACA2iE,EAAA,EACAK,GAAAF,GAAA,CACA,GAAAL,EAAAO,EAAAhxE,GAAA,MAAAkxE,GAAAljE,EACA,MAAA2iE,GAAAvpC,EAAA,SAAAj1B,OAAA,eACA6+D,GAAAC,EAAAjjE,IAAA,EAAA0iE,GAIA,MAFAO,GAAAjjE,GAAAhO,EACAkxE,EAAAljE,GAAAhP,EACAA,EAGA,QAAAkV,GAAAlU,EAAAoxE,GAIA,IAHA,GAAApjE,GAAAwiE,EAAAxwE,GAAA0wE,EACAM,EAAAC,EAAAjjE,GACA2iE,EAAA,EACAK,GAAAF,GAAA,CACA,GAAAL,EAAAO,EAAAhxE,GAAA,MAAAkxE,GAAAljE,EACA,MAAA2iE,GAAAvpC,EAAA,KACA4pC,GAAAC,EAAAjjE,IAAA,EAAA0iE,GAEA,MAAAU,GAGA,QAAApuE,KAEA,OADAA,MACAiC,EAAA,EAAAmgB,EAAA6rD,EAAAjsE,OAAwCC,EAAAmgB,IAAOngB,EAAA,CAC/C,GAAA+rE,GAAAC,EAAAhsE,EACA+rE,IAAAF,GAAA9tE,EAAA6E,KAAAmpE,GAEA,MAAAhuE,GA3DA,IAAAmD,UAAAnB,SACA6rE,EAAAE,EAAAlxE,MACAixE,EAAA,KAOA,QAJAG,GAAA,GAAAJ,GAAAzpC,EAAA,GAAAtkB,KAAAc,IAAA,EAAAd,KAAA8D,KAAA9D,KAAArH,IAAA2rB,GAAAtkB,KAAAmE,OACAiqD,EAAA,GAAAH,GAAA3pC,GACAspC,EAAAtpC,EAAA,EAEAniC,EAAA,EAAiBA,EAAAmiC,IAAUniC,EAC3BgsE,EAAAhsE,GAAA6rE,CAoDA,QACA38D,MACAg9D,WACAj9D,MACAlR,SAIAquE,EAAA,SAAAC,EAAAC,GACA,MAAAD,GAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IAKAC,EAAA,GAAAC,aAAA,IACAC,EAAA,GAAAC,cAAAH,GACAI,EAAA,GAAAC,aAAAL,GAEAM,EAAA,SAAAtmC,GACAkmC,EAAA,GAAAlmC,EAAA,GACAkmC,EAAA,GAAAlmC,EAAA,EACA,IAAAglC,GAAAoB,EAAA,GAAAA,EAAA,EAEA,OADApB,MAAA,EAAAA,GAAA,EAAAoB,EAAA,GAAAA,EAAA,GACA,WAAApB,GAiBAv5D,EAAA,SAAA20D,GAiDA,QAAAmG,GAAA9sE,EAAA+sE,EAAAC,EAAAC,GACA,GAAAC,EAAAF,KAAAhtE,EAAA,CACAktE,EAAAF,GAAAhtE,CACA,IAAAmtE,GAAAC,EAAAJ,EACA,IAAAG,GAAA,GACA,GAAAE,GAAAC,EAAAN,EACAG,KAAAJ,GAAAM,IAAAJ,GACAE,IAAAF,GAAAI,IAAAN,MACAQ,EAAAC,EAAAR,GAAA,OAGAI,GAAAJ,GAAAD,EACAO,EAAAN,GAAAC,GAIA,QAAAlkE,KAIA,OAHA0kE,GAAA9B,EAAA,IAAAxlC,EAAApmC,OAAA2tE,EAAAC,EAAAC,YAAA,EAAAA,YACArqD,EAAA,GAAAqqD,YAAAznC,EAAApmC,QAEAC,EAAA,EAAAmgB,EAAAgmB,EAAApmC,OAA2CC,EAAAmgB,IAAOngB,EAClDujB,EAAAvjB,GAAAytE,EAAAvB,SAAAlsE,IAGA,OAAAujB,GAGA,QAAAmqD,GAAA1tE,GACA,MAAA6sE,GAAA1mC,EAAAnmC,IAGA,QAAA2tE,GAAA3tE,EAAAuG,GACA,MAAA6lE,GAAAjmC,EAAAnmC,GAAAmmC,EAAA5/B,IAhFA,GASAvG,GAAAmgB,EACA4sD,EACAC,EACAC,EAZA9mC,EAAAwgC,EAAAxgC,YACA+L,EAAAy0B,EAAAz0B,MACA27B,EAAAlH,EAAAkH,MACAtqD,EAAAxa,IACAmkE,EAAA,GAAAU,YAAAznC,EAAApmC,QACAqtE,EAAA,GAAAQ,YAAAznC,EAAApmC,QACAutE,EAAA,GAAAM,YAAAznC,EAAApmC,QACAytE,EAAA,GAAAM,WAAA3nC,EAAApmC,QACAwtE,EAAA,CAMA,KAAAvtE,EAAA,EAAAmgB,EAAAgmB,EAAApmC,OAAqCC,EAAAmgB,IAAOngB,EAC5CktE,EAAAltE,GAAAotE,EAAAptE,GAAAstE,EAAAttE,IAAA,CAGA,KAAAA,EAAA,EAAAmgB,EAAA+xB,EAAAnyC,OAA+BC,EAAAmgB,IAAOngB,EAAA,CACtC,GAAAm9C,GAAAjL,EAAAlyC,GACAsmC,EAAA6W,EAAA,GACA3W,EAAA2W,EAAA,EAIA,KAHA6vB,EAAAzpD,EAAA+iB,GACA2mC,EAAA1pD,IAAA+iB,KACAinC,EAAAC,EAAAR,GAAA,IACA1mC,GAAAE,GACAsmC,EAAA9sE,EAAA+sE,EAAAC,IAAAC,IAAA1pD,EAAA+iB,MAEAinC,EAAAC,EAAAP,GAAA,EAGA,IAAAjtE,EAAA,EAAAmgB,EAAAgmB,EAAApmC,OAAqCC,EAAAmgB,IAAOngB,EAC5CktE,EAAAltE,IAAA,CAGA,KAAAA,EAAA,EAAAmgB,EAAA0tD,EAAA9tE,OAA+BC,EAAAmgB,IAAOngB,EAAA,CACtC,GAAAgvC,GAAA6+B,EAAA7tE,GACAi4C,EAAAjJ,EAAA,KACAmJ,EAAAnJ,EAAA,EAKA,KAJA+9B,EAAAxpD,EAAA40B,EAAA,GACA60B,EAAAzpD,EAAA00B,EAAA,GACAg1B,EAAA1pD,EAAA00B,GACA60B,EAAA9sE,EAAA+sE,EAAAC,EAAAC,KACAh1B,GAAAE,GACA20B,EAAA9sE,EAAA+sE,EAAAC,IAAAC,IAAA1pD,EAAA00B,IAuCAi1B,EAAAE,EAAAE,EAAA,IAEA,IAAA/mE,GAAAwnE,EAAAzC,EAAA,IAAAiC,EAAAV,EAAAT,EAGA,KAAApsE,EAAA,EAAAmgB,EAAAgmB,EAAApmC,OAAqCC,EAAAmgB,IAAOngB,EAC5CwtE,EAAAjnE,EAAAgd,EAAAvjB,KACA+tE,EAAA/hE,IAAAm6B,EAAA5/B,GAIA,OAAAwnE,IAMAC,EAAA,SAAArH,GACA,GAIA3nE,GACAgB,EAAAmgB,EALA8tD,EAAAj8D,EAAA20D,GACAxgC,EAAAwgC,EAAAxgC,YACA+L,EAAAy0B,EAAAz0B,MACA27B,EAAAlH,EAAAkH,KAIA,KAAA7tE,EAAA,EAAAmgB,EAAA+xB,EAAAnyC,OAA+BC,EAAAmgB,IAAOngB,EAItC,IAHA,GAAAm9C,GAAAjL,EAAAlyC,GACAkuE,EAAA/wB,EAAA,GACA3W,EAAA2W,EAAA,KACA+wB,EAAA1nC,GACAynC,EAAAlsC,IAAAoE,EAAA+nC,MACAlvE,GAAgB0mE,EAAAwI,EAAAC,EAAAhxB,EAAA,IAChBA,EAAA,GAAA+wB,EACA/wB,IAAAn+C,OAKA,KAAAgB,EAAA,EAAAmgB,EAAA0tD,EAAA9tE,OAA+BC,EAAAmgB,IAAOngB,EAMtC,IALA,GAAAgvC,GAAA6+B,EAAA7tE,GACAi4C,EAAAjJ,EAAA,GACAo/B,EAAAn2B,EACAE,EAAAnJ,EAAA,GACAq/B,EAAAJ,EAAAlsC,IAAAoE,EAAA8R,MACAm2B,EAAAj2B,GACA81B,EAAAlsC,IAAAoE,EAAAioC,MACAC,GACArvE,GAAkB0mE,EAAA0I,EAAAD,EAAAn/B,EAAA,IAClBA,EAAA,GAAAo/B,EACAp/B,IAAAhwC,SAEAgpE,EAAA7hC,EAAA8R,EAAAE,IAAAi2B,GACAjoC,EAAAgS,GAAAhS,EAAA8R,GACAo2B,GAAA,EACAD,EAAAn2B,GAMA,OAAA0uB,IAgBA2H,EAAA,SAAA3H,GAuCA,QAAA4H,GAAAvwB,GACA,GAAAwwB,GACAC,EACAC,EAAAC,EACAC,EAAAC,EACA7uE,EAAAmgB,CAGA,IAAAuuD,EAAAI,EAAA7/D,IAAAu/D,EAAAroC,EAAA6X,EAAA,KACA,IAAAh+C,EAAA,EAAAmgB,EAAAuuD,EAAA3uE,OAAuCC,EAAAmgB,IAAOngB,EAE9C,GADA2uE,EAAAD,EAAA1uE,GACA+uE,EAAAJ,EAAA3wB,GAGA,MAFAA,GAAA,GAAA2wB,EAAA,QACA3wB,EAAA,GAAA2wB,EAAA,GAOA,IAAAC,EAAAE,EAAA7/D,IAAAw/D,EAAAtoC,EAAA6X,EAAA,KACA,IAAAh+C,EAAA,EAAAmgB,EAAAyuD,EAAA7uE,OAAqCC,EAAAmgB,IAAOngB,EAE5C,GADA6uE,EAAAD,EAAA5uE,GACAgvE,EAAAH,EAAA7wB,GAGA,MAFAA,GAAA,GAAA6wB,EAAA,QACA7wB,EAAA,GAAA6wB,EAAA,GAMAH,KAAA9rE,KAAAo7C,GAAuC8wB,EAAA5/D,IAAAs/D,GAAAxwB,IACvC4wB,IAAAhsE,KAAAo7C,GAAmC8wB,EAAA5/D,IAAAu/D,GAAAzwB,IACnCsoB,EAAA1jE,KAAAo7C,GAGA,QAAAixB,GAAAjxB,GACA,GAAAywB,GACAG,EACAC,EACA7uE,EAAAmgB,CAIA,IAAAyuD,EAAAE,EAAA7/D,IAAAw/D,EAAAtoC,EAAA6X,EAAA,KACA,IAAAh+C,EAAA,EAAAmgB,EAAAyuD,EAAA7uE,OAAqCC,EAAAmgB,IAAOngB,EAAA,CAE5C,GADA6uE,EAAAD,EAAA5uE,GACAkvE,EAAAL,EAAA7wB,GAGA,MAFAA,GAAA,GAAA6wB,EAAA,QACA7wB,EAAA,GAAA6wB,EAAA,GAGA,IAAAM,EAAAN,EAAA7wB,GAGA,MAFAA,GAAA,GAAA6wB,EAAA,QACA7wB,EAAA,GAAA6wB,EAAA,IAOA,GAAAD,EAAAE,EAAA7/D,IAAAw/D,EAAAtoC,EAAA6X,EAAA,GAAAoxB,EAAApxB,KACA,IAAAh+C,EAAA,EAAAmgB,EAAAyuD,EAAA7uE,OAAqCC,EAAAmgB,IAAOngB,EAAA,CAE5C,GADA6uE,EAAAD,EAAA5uE,GACAkvE,EAAAL,EAAA7wB,GAGA,MAFAA,GAAA,GAAA6wB,EAAA,QACA7wB,EAAA,GAAA6wB,EAAA,GAGA,IAAAM,EAAAN,EAAA7wB,GAGA,MAFAA,GAAA,GAAA6wB,EAAA,QACA7wB,EAAA,GAAA6wB,EAAA,IAMAD,IAAAhsE,KAAAo7C,GAAmC8wB,EAAA5/D,IAAAu/D,GAAAzwB,IACnCsoB,EAAA1jE,KAAAo7C,GAGA,QAAA+wB,GAAAvG,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,EACA,IAAAC,EAAAC,IAAAC,EAAAC,EAAA,QACA,MAAUH,GAAAC,IAAUD,IAAAE,EAAA,IAAAwD,EAAAjmC,EAAAuiC,GAAAviC,EAAAyiC,IAAA,QACpB,UAGA,QAAAoG,GAAAxG,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,EACA,IAAAC,EAAAC,IAAAC,EAAAC,EAAA;AACA,KAAUH,GAAAC,IAAUD,IAAAG,EAAA,IAAAuD,EAAAjmC,EAAAuiC,GAAAviC,EAAA0iC,IAAA,QACpB,UAGA,QAAAqG,GAAA1G,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,GACAtoD,EAAAwoD,EAAAD,CACA,IAAAvoD,IAAA0oD,EAAAD,EAAA,QAGA,QAFAyG,GAAAD,EAAA5G,GACA8G,EAAAF,EAAA3G,GACAzoE,EAAA,EAAmBA,EAAAmgB,IAAOngB,EAC1B,IAAAosE,EAAAjmC,EAAAuiC,GAAA1oE,EAAAqvE,GAAAlvD,GAAAgmB,EAAAyiC,GAAA5oE,EAAAsvE,GAAAnvD,IAAA,QAEA,UAGA,QAAAgvD,GAAA3G,EAAAC,GACA,GAAAC,GAAAF,EAAA,GAAAI,EAAAH,EAAA,GACAE,EAAAH,EAAA,GAAAK,EAAAJ,EAAA,GACAtoD,EAAAwoD,EAAAD,CACA,IAAAvoD,IAAA0oD,EAAAD,EAAA,QAGA,QAFAyG,GAAAD,EAAA5G,GACA8G,EAAAnvD,EAAAivD,EAAA3G,GACAzoE,EAAA,EAAmBA,EAAAmgB,IAAOngB,EAC1B,IAAAosE,EAAAjmC,EAAAuiC,GAAA1oE,EAAAqvE,GAAAlvD,GAAAgmB,EAAA0iC,GAAA7oE,EAAAsvE,GAAAnvD,IAAA,QAEA,UAKA,QAAAivD,GAAApxB,GAMA,IALA,GAAA1rC,GAAA0rC,EAAA,GACAnrC,EAAAmrC,EAAA,GACAn+B,EAAAvN,EACAi9D,EAAA1vD,EACA2vD,EAAArpC,EAAAtmB,KACAA,EAAAhN,GAAA,CACA,GAAA0zB,GAAAJ,EAAAtmB,IACA0mB,EAAA,GAAAipC,EAAA,IAAAjpC,EAAA,KAAAipC,EAAA,IAAAjpC,EAAA,GAAAipC,EAAA,MACAD,EAAA1vD,EACA2vD,EAAAjpC,GAGA,MAAAgpC,GAAAj9D,EAhLA,GACA6qC,GACAnO,EAEAhvC,EAAAmgB,EAJAgmB,EAAAwgC,EAAAxgC,YACA+L,EAAAy0B,EAAAz0B,MACA27B,EAAAlH,EAAAkH,MACA4B,EAAAv9B,EAAAnyC,OAAA8tE,EAAA9tE,MAOA,WAJA4mE,GAAAz0B,YACAy0B,GAAAkH,MAGA7tE,EAAA,EAAAmgB,EAAA+xB,EAAAnyC,OAA+BC,EAAAmgB,IAAOngB,EAClB,IAApBm9C,EAAAjL,EAAAlyC,GAAoBm9C,IAAAn+C,QAAAywE,CAEpB,KAAAzvE,EAAA,EAAAmgB,EAAA0tD,EAAA9tE,OAA+BC,EAAAmgB,IAAOngB,EAClB,IAApBgvC,EAAA6+B,EAAA7tE,GAAoBgvC,IAAAhwC,QAAAywE,CAGpB,IAAAX,GAAAnD,EAAA,EAAA8D,EAAA,IAAA5C,EAAAT,GACA9F,EAAAK,EAAAL,OAEA,KAAAtmE,EAAA,EAAAmgB,EAAA+xB,EAAAnyC,OAA+BC,EAAAmgB,IAAOngB,EAAA,CACtCm9C,EAAAjL,EAAAlyC,EACA,GACAuuE,GAAApxB,SACKA,IAAAn+C,MAGL,IAAAgB,EAAA,EAAAmgB,EAAA0tD,EAAA9tE,OAA+BC,EAAAmgB,IAAOngB,EAEtC,GADAgvC,EAAA6+B,EAAA7tE,GACAgvC,EAAAhwC,MACA,EACAuvE,GAAAv/B,SACOA,IAAAhwC,UAEPiwE,GAAAjgC,EAiJA,OAAA23B,IAMA1lD,EAAA,SAAAqlD,GAIA,IAHA,GAAAtmE,IAAA,EACAmgB,EAAAmmD,EAAAvmE,SAEAC,EAAAmgB,GAAA,CAWA,IAVA,GAOAiC,GACA8rB,EARA8P,EAAAsoB,EAAAtmE,GACAuG,EAAA,EACA8I,EAAA,EACA9V,EAAAykD,EAAAj+C,OACAwmC,EAAAyX,EAAA,GACA77B,EAAAokB,EAAA,GACA2E,EAAA3E,EAAA,KAIAhgC,EAAAhN,GACAgtC,EAAAyX,EAAAz3C,GAAA6b,EAAAmkB,EAAA,GAAA2H,EAAA3H,EAAA,GACAnkB,IAAAD,GAAA+rB,IAAAhD,IAAA8S,EAAA3uC,MAAA+S,EAAAD,EAAA+rB,EAAAhD,GAAA/oB,EAAAC,EAAA8oB,EAAAgD,EAGA,KAAA7+B,IAAA2uC,EAAA3uC,MAAA,MAEA2uC,EAAAj+C,OAAAsP,EAGA,MAAAi3D,IAoBAqB,EAAA,SAAAjrD,GAMA,QAAAgzD,GAAA3pC,GACAA,GAAA4pC,EAAAxgE,eAAA42B,EAAAx8B,OAAAomE,EAAA5pC,EAAAx8B,MAAAw8B,GAWA,QAAA6pC,GAAAzyB,GACA,OAAAn9C,GAAA,EAAAmgB,EAAAg9B,EAAAp9C,OAAoCC,EAAAmgB,IAAOngB,EAAAmmC,IAAAp9B,GAAAo0C,EAAAn9C,EAC3C,IAAAg+C,IAAe0nB,EAAA38D,EAAAoX,EAAA,EAAAguD,EAAAplE,EAEf,OADAmpC,GAAAtvC,KAAAo7C,GACAA,EAGA,QAAA6xB,GAAA7gC,GACA,OAAAhvC,GAAA,EAAAmgB,EAAA6uB,EAAAjvC,OAAoCC,EAAAmgB,IAAOngB,EAAAmmC,IAAAp9B,GAAAimC,EAAAhvC,EAC3C,IAAAg+C,IAAe0nB,EAAA38D,EAAAoX,EAAA,EAAAguD,EAAAplE,EAEf,OADA8kE,GAAAjrE,KAAAo7C,GACAA,EAGA,QAAA8xB,GAAAjC,GACA,MAAAA,GAAAvlE,IAAAunE,GAhCA,GAAA9mE,IAAA,EACAmpC,KACA27B,KACA1nC,KAMAwpC,GACAjzB,mBAAA,SAAAtsC,GAAqCA,EAAAusC,WAAA9sC,QAAA6/D,IACrCpzB,WAAA,SAAAlsC,GAA6BA,EAAAk2D,KAAAsJ,EAAAx/D,EAAAk2D,OAC7B/pB,gBAAA,SAAAnsC,GAAkCA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAsnE,IAClCpzB,QAAA,SAAApsC,GAA0BA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAunE,IAC1BpzB,aAAA,SAAArsC,GAA+BA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAwnE,IAqB/B,QAAA/0E,KAAA2hB,GACAgzD,EAAAhzD,EAAA3hB,GAGA,QACAwO,KAAA,WACA48B,cACA+L,QACA27B,QACAnxD,YAQAqpB,EAAA,SAAAglC,GACA,GAAkBhwE,GAAlBiwE,IACA,KAAAjwE,IAAAgwE,GAAAC,EAAAjwE,GAAAmtE,EAAA6C,EAAAhwE,GACA,OAAAiwE,IAiCA+E,EAAA,SAAArzD,EAAAkqD,EAAAzmD,GAQA,QAAAwqD,GAAA5c,GACA,OAAAlwC,KAAAC,OAAAiwC,EAAA,GAAA5rC,GAAAk5B,GAAAx9B,KAAAC,OAAAiwC,EAAA,GAAA7iB,GAAAoQ,IAGA,QAAA00B,GAAAjiB,EAAAx0D,GAWA,IAVA,GAIAksC,GACAwqC,EACAC,EACA7xD,EACAwI,EARA7mB,GAAA,EACAuG,EAAA,EACA4Z,EAAA4tC,EAAAhuD,OACA+tD,EAAA,GAAAlzD,OAAAulB,KAOAngB,EAAAmgB,GACAslB,EAAAsoB,EAAA/tD,GACAqe,EAAAR,KAAAC,OAAA2nB,EAAA,GAAAtjB,GAAAk5B,GACAx0B,EAAAhJ,KAAAC,OAAA2nB,EAAA,GAAAyF,GAAAoQ,GACAj9B,IAAA4xD,GAAAppD,IAAAqpD,IAAApiB,EAAAvnD,MAAA0pE,EAAA5xD,EAAA6xD,EAAArpD,GAIA,KADAinC,EAAA/tD,OAAAwG,EACAA,EAAAhN,GAAAgN,EAAAunD,EAAAlrD,MAAAkrD,EAAA,MAAAA,EAAA,OACA,OAAAA,GAGA,QAAAqiB,GAAApiB,GACA,MAAAiiB,GAAAjiB,EAAA,GAGA,QAAAqiB,GAAAriB,GACA,MAAAiiB,GAAAjiB,EAAA,GAGA,QAAAsiB,GAAAtiB,GACA,MAAAA,GAAAzlD,IAAA8nE,GAGA,QAAAxF,GAAAx6D,GACA,MAAAA,GAAAkgE,EAAAnhE,eAAAiB,EAAA7G,OAAA+mE,EAAAlgE,EAAA7G,MAAA6G,GA/CA,GAAA+R,GAAAykD,EAAA,GACA17B,EAAA07B,EAAA,GACAxkD,EAAAwkD,EAAA,GACA14B,EAAA04B,EAAA,GACAvrB,EAAAj5B,EAAAD,GAAAhC,EAAA,IAAAiC,EAAAD,GAAA,EACAm5B,EAAApN,EAAAhD,GAAA/qB,EAAA,IAAA+tB,EAAAhD,GAAA,EA6CAolC,GACA5zB,mBAAA,SAAAtsC,GAAqCA,EAAAusC,WAAA9sC,QAAA+6D,IACrCxuB,MAAA,SAAAhsC,GAAwBA,EAAA+1B,YAAAwkC,EAAAv6D,EAAA+1B,cACxBkW,WAAA,SAAAjsC,GAA6BA,EAAA+1B,YAAA/1B,EAAA+1B,YAAA79B,IAAAqiE,IAC7BruB,WAAA,SAAAlsC,GAA6BA,EAAAk2D,KAAA6J,EAAA//D,EAAAk2D,OAC7B/pB,gBAAA,SAAAnsC,GAAkCA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAA6nE,IAClC3zB,QAAA,SAAApsC,GAA0BA,EAAAk2D,KAAA+J,EAAAjgE,EAAAk2D,OAC1B7pB,aAAA,SAAArsC,GAA+BA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAA+nE,IAG/B,QAAAt1E,KAAA2hB,GACAkuD,EAAAluD,EAAA3hB,GAGA,QACA67C,OAAA,EAAAyE,EAAA,EAAAC,GACAzE,WAAA10B,EAAA+oB,KAOAy7B,GAAA,SAAAjqD,EAAA6zD,GAiBA,QAAAC,GAAAC,GACAA,GAAAC,EAAAvhE,eAAAshE,EAAAlnE,OAAAmnE,EAAAD,EAAAlnE,MAAAknE,GAWA,QAAAE,GAAA3yB,GACA,GAAAz6B,KACA,IACA,GAAAxa,GAAA6nE,EAAA3hE,IAAA+uC,EACAz6B,GAAA3gB,KAAAo7C,EAAA,GAAAA,EAAA,GAAAj1C,YACKi1C,IAAAh/C,KACL,OAAAukB,GAGA,QAAAstD,GAAAvK,GACA,MAAAA,GAAAh+D,IAAAqoE,GAtCA,GAAA/J,GAAA7pB,EAAArgC,EAAAqpB,EAAArpB,IACA0kC,EAAAmvB,EAAA,GAAA3J,GAAAmJ,EAAArzD,EAAAkqD,EAAA2J,GACA5J,EAAA2H,EAAAN,EAAArG,EAAAjrD,KACAypB,EAAAwgC,EAAAxgC,YACAyqC,EAAAjF,EAAA,IAAAhF,EAAAL,KAAAvmE,OAAAuoE,EAAAC,EAEA7rD,GAAAiqD,EAAAjqD,QACAiqD,EAAAC,OACAD,EAAAL,KAAAK,EAAAL,KAAAh+D,IAAA,SAAA01C,EAAAh+C,GAEA,MADA4wE,GAAA1hE,IAAA8uC,EAAAh+C,GACAmmC,EAAAzqC,MAAAsiD,EAAA,GAAAA,EAAA,cAGA2oB,GAAAxgC,YACAA,EAAA,IAMA,IAAAuqC,IACAh0B,mBAAA,SAAAtsC,GAAqCA,EAAAusC,WAAA9sC,QAAA2gE,IACrCl0B,WAAA,SAAAlsC,GAA6BA,EAAAk2D,KAAAqK,EAAAvgE,EAAAk2D,OAC7B/pB,gBAAA,SAAAnsC,GAAkCA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAqoE,IAClCn0B,QAAA,SAAApsC,GAA0BA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAqoE,IAC1Bl0B,aAAA,SAAArsC,GAA+BA,EAAAk2D,KAAAl2D,EAAAk2D,KAAAh+D,IAAAuoE,IAgB/B,QAAA91E,KAAA2hB,GACA8zD,EAAA9zD,EAAA3hB,GAQA,OALAqmD,KACAulB,EAAAvlB,YACAulB,EAAAL,KAAArlD,EAAA0lD,EAAAL,OAGAK,GAiBAmK,GAAA,SAAAnK,GASA,QAAAoK,GAAAhjB,GACA,GAAAD,EACA,QAAAC,EAAAxkD,MACA,yBAAAukD,GAA2CvkD,KAAA,qBAAAozC,WAAAoR,EAAApR,WAAAr0C,IAAAyoE,GAA6E,MACxH,kBAAAjjB,GAAmCvkD,KAAA,aAAA+8D,KAAA0K,EAAAjjB,EAAAuY,MAAiD,MACpF,uBAAAxY,GAAwCvkD,KAAA,kBAAA+8D,KAAAvY,EAAAuY,KAAAh+D,IAAA0oE,GAA0D,MAClG,eAAAljB,GAAgCvkD,KAAA,UAAA+8D,KAAAvY,EAAAuY,KAAAh+D,IAAA0oE,GAAkD,MAClF,oBAAAljB,GAAqCvkD,KAAA,eAAA+8D,KAAAvY,EAAAuY,KAAAh+D,IAAA2oE,GAA4D,MACjG,eAAAljB,GAKA,MAHA,OAAAA,EAAA30D,KAAA00D,EAAA10D,GAAA20D,EAAA30D,IACA,MAAA20D,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,MACA,MAAA7Y,EAAA1wC,aAAAywC,EAAAzwC,WAAA0wC,EAAA1wC,YACAywC,EAGA,QAAAojB,GAAAzgE,GACA,GAAA0gE,GAAAC,EAAA3gE,EAAA,IAAAA,MAAA,EAQA,OALA,QAAA0gE,EAAAE,EAAA5gE,MACA4gE,EAAA5gE,GAAA0gE,IAAAG,EACAC,EAAAJ,GAAAK,EAAA/gE,IAGA2gE,GAAAD,IAGA,QAAAH,GAAA1K,GACA,MAAAA,GAAAh+D,IAAA4oE,GAGA,QAAAD,GAAA3K,GACA,MAAAA,GAAAh+D,IAAA0oE,GAzCA,GAMAj2E,GANA02E,EAAA9K,EAAAjqD,QACAg1D,KACAF,EAAA7K,EAAAL,KACAiL,KACAD,GAAA,EACAD,EAAA,GAAAz2E,OAAA42E,EAAAzxE,OAuCA,KAAAhF,IAAA02E,GACAC,EAAA32E,GAAAg2E,EAAAU,EAAA12E,GAGA,QACAwO,KAAA,WACAq9D,KAAAD,EAAAC,KACAxlB,UAAAulB,EAAAvlB,UACA1kC,QAAAg1D,EACApL,KAAAiL,IAIAhpE,GAAA,SAAAo+D,EAAAp+D,GAOA,QAAAopE,GAAA5jB,GACA,GAAAD,GAAAwY,CACA,QAAAvY,EAAAxkD,MACA,cACA+8D,EAAAsL,EAAA7jB,EAAAuY,MACAxY,EAAAwY,GAAyB/8D,KAAA,UAAA+8D,SAAgC/8D,KAAA,KACzD,MAEA,oBACA+8D,EAAAvY,EAAAuY,KAAAh+D,IAAAspE,GAAArpE,OAAAwgE,GACAjb,EAAAwY,EAAAvmE,QAAgCwJ,KAAA,eAAA+8D,SAAqC/8D,KAAA,KACrE,MAEA,0BACA+8D,EAAAvY,EAAApR,WAAAr0C,IAAAqpE,GAAAppE,OAAAygE,GACAlb,EAAAwY,EAAAvmE,QAAgCwJ,KAAA,qBAAAozC,WAAA2pB,IAAiD/8D,KAAA,KACjF,MAEA,eAAAwkD,GAKA,MAHA,OAAAA,EAAA30D,KAAA00D,EAAA10D,GAAA20D,EAAA30D,IACA,MAAA20D,EAAA6Y,OAAA9Y,EAAA8Y,KAAA7Y,EAAA6Y,MACA,MAAA7Y,EAAA1wC,aAAAywC,EAAAzwC,WAAA0wC,EAAA1wC,YACAywC,EAGA,QAAA8jB,GAAAtL,GACA,MAAAA,GAAAvmE,QAAA8xE,EAAAvL,EAAA,KACAA,EAAA,IAAAx3D,OAAAw3D,EAAA5qE,MAAA,GAAA6M,OAAAupE,IACA,KAGA,QAAAD,GAAA7iC,GACA,MAAAzmC,GAAAymC,GAAA,GAGA,QAAA8iC,GAAA9iC,GACA,MAAAzmC,GAAAymC,GAAA,GA3CA,GAEAj0C,GAFA02E,EAAA9K,EAAAjqD,QACAg1D,IAGA,OAAAnpE,MAAAugE,EA0CA,KAAA/tE,IAAA02E,GACAC,EAAA32E,GAAA42E,EAAAF,EAAA12E,GAGA,OAAA+1E,KACAvnE,KAAA,WACAq9D,KAAAD,EAAAC,KACAxlB,UAAAulB,EAAAvlB,UACA1kC,QAAAg1D,EACApL,KAAAK,EAAAL,QAgBAyL,GAAA,SAAApL,GAKA,QAAAqL,GAAA5hE,GACA,OAAAA,EAAA7G,MACA,yBAAA6G,EAAAusC,WAAA9sC,QAAAmiE,EAAoE,MACpE,eAAAC,EAAA7hE,EAAAk2D,KAAuC,MACvC,oBAAAl2D,EAAAk2D,KAAAz2D,QAAAoiE,IAIA,QAAAA,GAAA3L,GACA,OAAAtmE,GAAA,EAAAmgB,EAAAmmD,EAAAvmE,OAAoCC,EAAAmgB,IAAOngB,IAAAkyE,EAC3C,OAAAljC,GAAAs3B,EAAAtmE,GAAAuG,EAAA,EAAAhN,EAAAy1C,EAAAjvC,OAAsDwG,EAAAhN,IAAOgN,EAAA,CAC7D,GAAAy3C,GAAAhP,EAAAzoC,EACAy3C,GAAA,IAAAA,KACA,IAAAm0B,GAAAC,EAAAp0B,EACAm0B,IAAA,GAAAA,IAAAD,EAAAE,EAAAp0B,IAAA,EACAo0B,EAAAp0B,GAAAk0B,GAnBA,GAEA31E,GAFA61E,KACAF,EAAA,CAuBA,KAAA31E,IAAAoqE,GAAAjqD,QACAs1D,EAAArL,EAAAjqD,QAAAngB,GAGA,iBAAAyyC,GACA,OAAAgP,GAAAz3C,EAAA,EAAAhN,EAAAy1C,EAAAjvC,OAAyCwG,EAAAhN,IAAOgN,EAChD,GAAAy3C,EAAAhP,EAAAzoC,GAAA6rE,EAAAp0B,EAAA,GAAAA,KAAA,EACA,QAGA,YAeAq0B,GAAA,SAAA1L,EAAA2L,EAAAC,GAKA,MAJAD,GAAA,MAAAA,EAAAE,OAAAC,WAAAH,EAEA,MAAAC,MAAApJ,GAEA,SAAAn6B,EAAAs6B,GACA,MAAAiJ,GAAA91D,EAAAkqD,GAAqCp9D,KAAA,UAAA+8D,MAAAt3B,KAA8BjJ,SAAAI,YAAA,GAAAmjC,IAAAgJ,IAInEI,GAAA,SAAA/L,EAAA2L,EAAAC,GACA,GAAA1uE,GAAAkuE,GAAApL,GACA3zD,EAAAq/D,GAAA1L,EAAA2L,EAAAC,EACA,iBAAAvjC,EAAAs6B,GACA,MAAAzlE,GAAAmrC,EAAAs6B,IAAAt2D,EAAAg8B,EAAAs6B,KAQAqJ,GAAA,WAwBA,QAAAC,GAAApxC,EAAAxhC,GACA,KAAAA,EAAA,IACA,GAAAuG,IAAAvG,EAAA,QACAwB,EAAAtB,EAAAqG,EACA,IAAAkZ,EAAA+hB,EAAAhgC,IAAA,OACAtB,GAAAsB,EAAAhB,EAAAR,GAAAwB,EACAtB,EAAAshC,EAAAhhC,EAAAR,EAAAuG,GAAAi7B,GAIA,QAAAqxC,GAAArxC,EAAAxhC,GACA,QACA,GAAAwlB,GAAAxlB,EAAA,KACA6lB,EAAAL,EAAA,EACAjf,EAAAvG,EACA2H,EAAAzH,EAAAqG,EAGA,IAFAsf,EAAAsc,GAAA1iB,EAAAvf,EAAA2lB,GAAAle,GAAA,IAAAA,EAAAzH,EAAAqG,EAAAsf,IACAL,EAAA2c,GAAA1iB,EAAAvf,EAAAslB,GAAA7d,GAAA,IAAAA,EAAAzH,EAAAqG,EAAAif,IACAjf,IAAAvG,EAAA,KACAE,GAAAyH,EAAAnH,EAAAR,GAAA2H,EACAzH,EAAAshC,EAAAhhC,EAAAR,EAAAuG,GAAAi7B,GA3CA,GAAAsxC,MACA5yE,KACAiiC,EAAA,CA6CA,OA3CA2wC,GAAAlwE,KAAA,SAAA4+B,GAEA,MADAoxC,GAAA1yE,EAAAshC,EAAAhhC,EAAA2hC,GAAAX,EAAAW,KACAA,GAGA2wC,EAAAtwD,IAAA,WACA,KAAA2f,GAAA,IACA,GAAAX,GAAAuxC,EAAA7yE,EAAA,EAEA,SADAiiC,EAAA,IAAAX,EAAAthC,EAAAiiC,GAAA0wC,EAAA3yE,EAAAshC,EAAAhhC,EAAA,GAAAghC,EAAA,IACAuxC,IAGAD,EAAAtsE,OAAA,SAAAusE,GACA,GAAAvxC,GAAAxhC,EAAA+yE,EAAAvyE,CACA,IAAAN,EAAAF,KAAA+yE,EAEA,MADA/yE,OAAAmiC,IAAAX,EAAAthC,EAAAiiC,IAAA1iB,EAAA+hB,EAAAuxC,GAAA,EAAAH,EAAAC,GAAA3yE,EAAAshC,EAAAhhC,EAAAR,GAAAwhC,EAAAxhC,IACAA,GA2BA8yE,GAOAE,GAAA,SAAArM,EAAA4L,GA0DA,QAAAnwE,GAAA8mE,GACA4J,EAAAtsE,OAAA0iE,GACAA,EAAA,MAAAqJ,EAAArJ,GACA4J,EAAAlwE,KAAAsmE,GA5DA,GAAA3iC,GAAAogC,EAAAvlB,YAAAulB,EAAAvlB,WAAAuL,EACAmmB,EAAAH,IAEA,OAAAJ,MAAAtJ,EAEA,IAAA3C,GAAAK,EAAAL,KAAAh+D,IAAA,SAAA01C,GACA,GAEAkrB,GACAlpE,EACAmgB,EAJA8yD,KACAC,EAAA,CAOA,KAFAl1B,IAAA11C,IAAAi+B,GAEAvmC,EAAA,EAAAmgB,EAAA69B,EAAAj+C,OAAA,EAAmCC,EAAAmgB,IAAOngB,EAC1CkpE,GAAAlrB,EAAAh+C,EAAA,GAAAg+C,EAAAh+C,GAAAg+C,EAAAh+C,EAAA,IACAkpE,EAAA,MAAAqJ,EAAArJ,GACA+J,EAAArwE,KAAAsmE,GACA4J,EAAAlwE,KAAAsmE,EAMA,KAFAlrB,EAAA,MAAAA,EAAA79B,GAAA,GAAAoV,IAEAv1B,EAAA,EAAAmgB,EAAA8yD,EAAAlzE,OAAqCC,EAAAmgB,IAAOngB,EAC5CkpE,EAAA+J,EAAAjzE,GACAkpE,EAAArN,SAAAoX,EAAAjzE,EAAA,GACAkpE,EAAAlqE,KAAAi0E,EAAAjzE,EAAA,EAGA,MAAAkpE,EAAA4J,EAAAtwD,OAAA,CACA,GAAAq5C,GAAAqN,EAAArN,SACA78D,EAAAkqE,EAAAlqE,IAMAkqE,GAAA,MAAAgK,EAAAhK,EAAA,MAAAgK,EACAA,EAAAhK,EAAA,MAEArN,IACAA,EAAA78D,OACA68D,EAAA,GAAAqN,EAAA,GACA9mE,EAAAy5D,IAGA78D,IACAA,EAAA68D,WACA78D,EAAA,GAAAkqE,EAAA,GACA9mE,EAAApD,IAIA,MAAAg/C,IASA,QACAz0C,KAAA,WACAq9D,KAAAD,EAAAC,KACAlqD,QAAAiqD,EAAAjqD,QACA4pD,SAIA1jD,GAAA,SAAA+jD,EAAAltE,GACA,GAAAyG,KAUA,OARAymE,GAAAL,KAAAz2D,QAAA,SAAAmuC,GACAA,EAAAnuC,QAAA,SAAA02B,GACAzkB,SAAAykB,EAAA,KACArmC,EAAA0C,KAAA2jC,EAAA,QAKArmC,EAAAH,QAAAgvD,EAAA7uD,EAAA6iB,KAAAlC,GAAApnB,IAmBA05E,GAAA,SAAAxM,EAAA2L,GACAA,EAAA,MAAAA,EAAAE,OAAAC,WAAAH,CAGA,IAAAhM,GAAAK,EAAAL,KAAAh+D,IAAA,SAAAylD,GAOA,IANA,GAIAxnB,GAJAvmC,GAAA,EACAuG,EAAA,EACA4Z,EAAA4tC,EAAAhuD,OACA+tD,EAAA,GAAAlzD,OAAAulB,KAGAngB,EAAAmgB,IACAomB,EAAAwnB,EAAA/tD,IAAA,IAAAsyE,IACAxkB,EAAAvnD,MAAAggC,EAAA,GAAAA,EAAA,IAKA,OADAunB,GAAA/tD,OAAAwG,EACAunD,GAGA,QACAvkD,KAAA,WACA63C,UAAAulB,EAAAvlB,UACAwlB,KAAAD,EAAAC,KACAlqD,QAAAiqD,EAAAjqD,QACA4pD,SAIA7gC,GAAA5nB,KAAAqU,GACAqa,GAAA,EAAA9G,GACA+B,GAAA/B,GAAA,EACA4B,GAAA5B,GAAA,IACAhe,GAAA5J,KAAA4J,MACAjB,GAAA3I,KAAA2I,IACAC,GAAA5I,KAAA4I,GA8CAvtB,GAAA0tE,OACA1tE,EAAAujB,UACAvjB,EAAAmxE,OACAnxE,EAAA4tE,WACA5tE,EAAAiqB,QACAjqB,EAAAwuE,YACAxuE,EAAA4uE,YACA5uE,EAAA2xD,WACA3xD,EAAAkoD,YACAloD,EAAAwxE,cACAxxE,EAAAytE,YACAztE,EAAAqP,UACArP,EAAA64E,kBACA74E,EAAAw5E,wBACAx5E,EAAAm5E,gBACAn5E,EAAAuuE,eAAA0B,EACAjwE,EAAA+vE,qBACA/vE,EAAA85E,eACA95E,EAAA0pB,YACA1pB,EAAAi6E,YACAj6E,EAAAmwE,oBACAnwE,EAAAqwE,wBAEAtuE,OAAA0F,eAAAzH,EAAA,cAA8Ca,OAAA","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(19);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {/* Riot v3.6.1, @license MIT */\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.riot = global.riot || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar __TAGS_CACHE = [];\n\tvar __TAG_IMPL = {};\n\tvar GLOBAL_MIXIN = '__global_mixin';\n\tvar ATTRS_PREFIX = 'riot-';\n\tvar REF_DIRECTIVES = ['ref', 'data-ref'];\n\tvar IS_DIRECTIVE = 'data-is';\n\tvar CONDITIONAL_DIRECTIVE = 'if';\n\tvar LOOP_DIRECTIVE = 'each';\n\tvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\n\tvar SHOW_DIRECTIVE = 'show';\n\tvar HIDE_DIRECTIVE = 'hide';\n\tvar RIOT_EVENTS_KEY = '__riot-events__';\n\tvar T_STRING = 'string';\n\tvar T_OBJECT = 'object';\n\tvar T_UNDEF  = 'undefined';\n\tvar T_FUNCTION = 'function';\n\tvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\tvar SVG_NS = 'http://www.w3.org/2000/svg';\n\tvar XLINK_REGEX = /^xlink:(\\w+)/;\n\tvar WIN = typeof window === T_UNDEF ? undefined : window;\n\tvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\n\tvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\n\tvar RE_EVENTS_PREFIX = /^on/;\n\tvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\n\tvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\n\tvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\n\tvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\n\tvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\t\n\t/**\n\t * Check Check if the passed argument is undefined\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBoolAttr(value) {\n\t  return RE_BOOL_ATTRS.test(value)\n\t}\n\t\n\t/**\n\t * Check if passed argument is a function\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isFunction(value) {\n\t  return typeof value === T_FUNCTION\n\t}\n\t\n\t/**\n\t * Check if passed argument is an object, exclude null\n\t * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isObject(value) {\n\t  return value && typeof value === T_OBJECT // typeof null is 'object'\n\t}\n\t\n\t/**\n\t * Check if passed argument is undefined\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isUndefined(value) {\n\t  return typeof value === T_UNDEF\n\t}\n\t\n\t/**\n\t * Check if passed argument is a string\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isString(value) {\n\t  return typeof value === T_STRING\n\t}\n\t\n\t/**\n\t * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n\t * @param { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isBlank(value) {\n\t  return isUndefined(value) || value === null || value === ''\n\t}\n\t\n\t/**\n\t * Check if passed argument is a kind of array\n\t * @param   { * } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isArray(value) {\n\t  return Array.isArray(value) || value instanceof Array\n\t}\n\t\n\t/**\n\t * Check whether object's property could be overridden\n\t * @param   { Object }  obj - source object\n\t * @param   { String }  key - object property\n\t * @returns { Boolean } -\n\t */\n\tfunction isWritable(obj, key) {\n\t  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n\t  return isUndefined(obj[key]) || descriptor && descriptor.writable\n\t}\n\t\n\t/**\n\t * Check if passed argument is a reserved name\n\t * @param   { String } value -\n\t * @returns { Boolean } -\n\t */\n\tfunction isReservedName(value) {\n\t  return RE_RESERVED_NAMES.test(value)\n\t}\n\t\n\tvar check = Object.freeze({\n\t\tisBoolAttr: isBoolAttr,\n\t\tisFunction: isFunction,\n\t\tisObject: isObject,\n\t\tisUndefined: isUndefined,\n\t\tisString: isString,\n\t\tisBlank: isBlank,\n\t\tisArray: isArray,\n\t\tisWritable: isWritable,\n\t\tisReservedName: isReservedName\n\t});\n\t\n\t/**\n\t * Shorter and fast way to select multiple nodes in the DOM\n\t * @param   { String } selector - DOM selector\n\t * @param   { Object } ctx - DOM node where the targets of our search will is located\n\t * @returns { Object } dom nodes found\n\t */\n\tfunction $$(selector, ctx) {\n\t  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Shorter and fast way to select a single node in the DOM\n\t * @param   { String } selector - unique dom selector\n\t * @param   { Object } ctx - DOM node where the target of our search will is located\n\t * @returns { Object } dom node found\n\t */\n\tfunction $(selector, ctx) {\n\t  return (ctx || document).querySelector(selector)\n\t}\n\t\n\t/**\n\t * Create a document fragment\n\t * @returns { Object } document fragment\n\t */\n\tfunction createFrag() {\n\t  return document.createDocumentFragment()\n\t}\n\t\n\t/**\n\t * Create a document text node\n\t * @returns { Object } create a text node to use as placeholder\n\t */\n\tfunction createDOMPlaceholder() {\n\t  return document.createTextNode('')\n\t}\n\t\n\t/**\n\t * Check if a DOM node is an svg tag\n\t * @param   { HTMLElement }  el - node we want to test\n\t * @returns {Boolean} true if it's an svg node\n\t */\n\tfunction isSvg(el) {\n\t  return !!el.ownerSVGElement\n\t}\n\t\n\t/**\n\t * Create a generic DOM node\n\t * @param   { String } name - name of the DOM node we want to create\n\t * @param   { Boolean } isSvg - true if we need to use an svg node\n\t * @returns { Object } DOM node just created\n\t */\n\tfunction mkEl(name) {\n\t  return name === 'svg' ? document.createElementNS(SVG_NS, name) : document.createElement(name)\n\t}\n\t\n\t/**\n\t * Set the inner html of any DOM node SVGs included\n\t * @param { Object } container - DOM node where we'll inject new html\n\t * @param { String } html - html to inject\n\t */\n\t/* istanbul ignore next */\n\tfunction setInnerHTML(container, html) {\n\t  if (!isUndefined(container.innerHTML))\n\t    { container.innerHTML = html; }\n\t    // some browsers do not support innerHTML on the SVGs tags\n\t  else {\n\t    var doc = new DOMParser().parseFromString(html, 'application/xml');\n\t    var node = container.ownerDocument.importNode(doc.documentElement, true);\n\t    container.appendChild(node);\n\t  }\n\t}\n\t\n\t/**\n\t * Toggle the visibility of any DOM node\n\t * @param   { Object }  dom - DOM node we want to hide\n\t * @param   { Boolean } show - do we want to show it?\n\t */\n\t\n\tfunction toggleVisibility(dom, show) {\n\t  dom.style.display = show ? '' : 'none';\n\t  dom['hidden'] = show ? false : true;\n\t}\n\t\n\t/**\n\t * Remove any DOM attribute from a node\n\t * @param   { Object } dom - DOM node we want to update\n\t * @param   { String } name - name of the property we want to remove\n\t */\n\tfunction remAttr(dom, name) {\n\t  dom.removeAttribute(name);\n\t}\n\t\n\t/**\n\t * Convert a style object to a string\n\t * @param   { Object } style - style object we need to parse\n\t * @returns { String } resulting css string\n\t * @example\n\t * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n\t */\n\tfunction styleObjectToString(style) {\n\t  return Object.keys(style).reduce(function (acc, prop) {\n\t    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n\t  }, '')\n\t}\n\t\n\t/**\n\t * Get the value of any DOM attribute on a node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { String } name - name of the attribute we want to get\n\t * @returns { String | undefined } name of the node attribute whether it exists\n\t */\n\tfunction getAttr(dom, name) {\n\t  return dom.getAttribute(name)\n\t}\n\t\n\t/**\n\t * Set any DOM attribute\n\t * @param { Object } dom - DOM node we want to update\n\t * @param { String } name - name of the property we want to set\n\t * @param { String } val - value of the property we want to set\n\t */\n\tfunction setAttr(dom, name, val) {\n\t  var xlink = XLINK_REGEX.exec(name);\n\t  if (xlink && xlink[1])\n\t    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n\t  else\n\t    { dom.setAttribute(name, val); }\n\t}\n\t\n\t/**\n\t * Insert safely a tag to fix #1962 #1649\n\t * @param   { HTMLElement } root - children container\n\t * @param   { HTMLElement } curr - node to insert\n\t * @param   { HTMLElement } next - node that should preceed the current node inserted\n\t */\n\tfunction safeInsert(root, curr, next) {\n\t  root.insertBefore(curr, next.parentNode && next);\n\t}\n\t\n\t/**\n\t * Minimize risk: only zero or one _space_ between attr & value\n\t * @param   { String }   html - html string we want to parse\n\t * @param   { Function } fn - callback function to apply on any attribute found\n\t */\n\tfunction walkAttrs(html, fn) {\n\t  if (!html)\n\t    { return }\n\t  var m;\n\t  while (m = RE_HTML_ATTRS.exec(html))\n\t    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n\t}\n\t\n\t/**\n\t * Walk down recursively all the children tags starting dom node\n\t * @param   { Object }   dom - starting node where we will start the recursion\n\t * @param   { Function } fn - callback to transform the child node just found\n\t * @param   { Object }   context - fn can optionally return an object, which is passed to children\n\t */\n\tfunction walkNodes(dom, fn, context) {\n\t  if (dom) {\n\t    var res = fn(dom, context);\n\t    var next;\n\t    // stop the recursion\n\t    if (res === false) { return }\n\t\n\t    dom = dom.firstChild;\n\t\n\t    while (dom) {\n\t      next = dom.nextSibling;\n\t      walkNodes(dom, fn, res);\n\t      dom = next;\n\t    }\n\t  }\n\t}\n\t\n\tvar dom = Object.freeze({\n\t\t$$: $$,\n\t\t$: $,\n\t\tcreateFrag: createFrag,\n\t\tcreateDOMPlaceholder: createDOMPlaceholder,\n\t\tisSvg: isSvg,\n\t\tmkEl: mkEl,\n\t\tsetInnerHTML: setInnerHTML,\n\t\ttoggleVisibility: toggleVisibility,\n\t\tremAttr: remAttr,\n\t\tstyleObjectToString: styleObjectToString,\n\t\tgetAttr: getAttr,\n\t\tsetAttr: setAttr,\n\t\tsafeInsert: safeInsert,\n\t\twalkAttrs: walkAttrs,\n\t\twalkNodes: walkNodes\n\t});\n\t\n\tvar styleNode;\n\tvar cssTextProp;\n\tvar byName = {};\n\tvar remainder = [];\n\tvar needsInject = false;\n\t\n\t// skip the following code on the server\n\tif (WIN) {\n\t  styleNode = (function () {\n\t    // create a new style element with the correct type\n\t    var newNode = mkEl('style');\n\t    setAttr(newNode, 'type', 'text/css');\n\t\n\t    // replace any user node or insert the new one into the head\n\t    var userNode = $('style[type=riot]');\n\t    /* istanbul ignore next */\n\t    if (userNode) {\n\t      if (userNode.id) { newNode.id = userNode.id; }\n\t      userNode.parentNode.replaceChild(newNode, userNode);\n\t    }\n\t    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\t\n\t    return newNode\n\t  })();\n\t  cssTextProp = styleNode.styleSheet;\n\t}\n\t\n\t/**\n\t * Object that will be used to inject and manage the css of every tag instance\n\t */\n\tvar styleManager = {\n\t  styleNode: styleNode,\n\t  /**\n\t   * Save a tag style to be later injected into DOM\n\t   * @param { String } css - css string\n\t   * @param { String } name - if it's passed we will map the css to a tagname\n\t   */\n\t  add: function add(css, name) {\n\t    if (name) { byName[name] = css; }\n\t    else { remainder.push(css); }\n\t    needsInject = true;\n\t  },\n\t  /**\n\t   * Inject all previously saved tag styles into DOM\n\t   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n\t   */\n\t  inject: function inject() {\n\t    if (!WIN || !needsInject) { return }\n\t    needsInject = false;\n\t    var style = Object.keys(byName)\n\t      .map(function(k) { return byName[k] })\n\t      .concat(remainder).join('\\n');\n\t    /* istanbul ignore next */\n\t    if (cssTextProp) { cssTextProp.cssText = style; }\n\t    else { styleNode.innerHTML = style; }\n\t  }\n\t};\n\t\n\t/**\n\t * The riot template engine\n\t * @version v3.0.8\n\t */\n\t\n\tvar skipRegex = (function () { //eslint-disable-line no-unused-vars\n\t\n\t  var beforeReChars = '[{(,;:?=|&!^~>%*/';\n\t\n\t  var beforeReWords = [\n\t    'case',\n\t    'default',\n\t    'do',\n\t    'else',\n\t    'in',\n\t    'instanceof',\n\t    'prefix',\n\t    'return',\n\t    'typeof',\n\t    'void',\n\t    'yield'\n\t  ];\n\t\n\t  var wordsLastChar = beforeReWords.reduce(function (s, w) {\n\t    return s + w.slice(-1)\n\t  }, '');\n\t\n\t  var RE_REGEX = /^\\/(?=[^*>/])[^[/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\/]*)*?\\/[gimuy]*/;\n\t  var RE_VN_CHAR = /[$\\w]/;\n\t\n\t  function prev (code, pos) {\n\t    while (--pos >= 0 && /\\s/.test(code[pos])){  }\n\t    return pos\n\t  }\n\t\n\t  function _skipRegex (code, start) {\n\t\n\t    var re = /.*/g;\n\t    var pos = re.lastIndex = start++;\n\t    var match = re.exec(code)[0].match(RE_REGEX);\n\t\n\t    if (match) {\n\t      var next = pos + match[0].length;\n\t\n\t      pos = prev(code, pos);\n\t      var c = code[pos];\n\t\n\t      if (pos < 0 || ~beforeReChars.indexOf(c)) {\n\t        return next\n\t      }\n\t\n\t      if (c === '.') {\n\t\n\t        if (code[pos - 1] === '.') {\n\t          start = next;\n\t        }\n\t\n\t      } else if (c === '+' || c === '-') {\n\t\n\t        if (code[--pos] !== c ||\n\t            (pos = prev(code, pos)) < 0 ||\n\t            !RE_VN_CHAR.test(code[pos])) {\n\t          start = next;\n\t        }\n\t\n\t      } else if (~wordsLastChar.indexOf(c)) {\n\t\n\t        var end = pos + 1;\n\t\n\t        while (--pos >= 0 && RE_VN_CHAR.test(code[pos])){  }\n\t        if (~beforeReWords.indexOf(code.slice(pos + 1, end))) {\n\t          start = next;\n\t        }\n\t      }\n\t    }\n\t\n\t    return start\n\t  }\n\t\n\t  return _skipRegex\n\t\n\t})();\n\t\n\t/**\n\t * riot.util.brackets\n\t *\n\t * - `brackets    ` - Returns a string or regex based on its parameter\n\t * - `brackets.set` - Change the current riot brackets\n\t *\n\t * @module\n\t */\n\t\n\t/* global riot */\n\t\n\t/* istanbul ignore next */\n\tvar brackets = (function (UNDEF) {\n\t\n\t  var\n\t    REGLOB = 'g',\n\t\n\t    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\t\n\t    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\t\n\t    S_QBLOCKS = R_STRINGS.source + '|' +\n\t      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n\t      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?([^<]\\/)[gim]*/.source,\n\t\n\t    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\t\n\t    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\t\n\t    S_QBLOCK2 = R_STRINGS.source + '|' + /(\\/)(?![*\\/])/.source,\n\t\n\t    FINDBRACES = {\n\t      '(': RegExp('([()])|'   + S_QBLOCK2, REGLOB),\n\t      '[': RegExp('([[\\\\]])|' + S_QBLOCK2, REGLOB),\n\t      '{': RegExp('([{}])|'   + S_QBLOCK2, REGLOB)\n\t    },\n\t\n\t    DEFAULT = '{ }';\n\t\n\t  var _pairs = [\n\t    '{', '}',\n\t    '{', '}',\n\t    /{[^}]*}/,\n\t    /\\\\([{}])/g,\n\t    /\\\\({)|{/g,\n\t    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCK2, REGLOB),\n\t    DEFAULT,\n\t    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n\t    /(^|[^\\\\]){=[\\S\\s]*?}/\n\t  ];\n\t\n\t  var\n\t    cachedBrackets = UNDEF,\n\t    _regex,\n\t    _cache = [],\n\t    _settings;\n\t\n\t  function _loopback (re) { return re }\n\t\n\t  function _rewrite (re, bp) {\n\t    if (!bp) { bp = _cache; }\n\t    return new RegExp(\n\t      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n\t    )\n\t  }\n\t\n\t  function _create (pair) {\n\t    if (pair === DEFAULT) { return _pairs }\n\t\n\t    var arr = pair.split(' ');\n\t\n\t    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n\t      throw new Error('Unsupported brackets \"' + pair + '\"')\n\t    }\n\t    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\t\n\t    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n\t    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n\t    arr[6] = _rewrite(_pairs[6], arr);\n\t    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCK2, REGLOB);\n\t    arr[8] = pair;\n\t    return arr\n\t  }\n\t\n\t  function _brackets (reOrIdx) {\n\t    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n\t  }\n\t\n\t  _brackets.split = function split (str, tmpl, _bp) {\n\t    // istanbul ignore next: _bp is for the compiler\n\t    if (!_bp) { _bp = _cache; }\n\t\n\t    var\n\t      parts = [],\n\t      match,\n\t      isexpr,\n\t      start,\n\t      pos,\n\t      re = _bp[6];\n\t\n\t    var qblocks = [];\n\t    var prevStr = '';\n\t    var mark, lastIndex;\n\t\n\t    isexpr = start = re.lastIndex = 0;\n\t\n\t    while ((match = re.exec(str))) {\n\t\n\t      lastIndex = re.lastIndex;\n\t      pos = match.index;\n\t\n\t      if (isexpr) {\n\t\n\t        if (match[2]) {\n\t\n\t          var ch = match[2];\n\t          var rech = FINDBRACES[ch];\n\t          var ix = 1;\n\t\n\t          rech.lastIndex = lastIndex;\n\t          while ((match = rech.exec(str))) {\n\t            if (match[1]) {\n\t              if (match[1] === ch) { ++ix; }\n\t              else if (!--ix) { break }\n\t            } else {\n\t              rech.lastIndex = pushQBlock(match.index, rech.lastIndex, match[2]);\n\t            }\n\t          }\n\t          re.lastIndex = ix ? str.length : rech.lastIndex;\n\t          continue\n\t        }\n\t\n\t        if (!match[3]) {\n\t          re.lastIndex = pushQBlock(pos, lastIndex, match[4]);\n\t          continue\n\t        }\n\t      }\n\t\n\t      if (!match[1]) {\n\t        unescapeStr(str.slice(start, pos));\n\t        start = re.lastIndex;\n\t        re = _bp[6 + (isexpr ^= 1)];\n\t        re.lastIndex = start;\n\t      }\n\t    }\n\t\n\t    if (str && start < str.length) {\n\t      unescapeStr(str.slice(start));\n\t    }\n\t\n\t    parts.qblocks = qblocks;\n\t\n\t    return parts\n\t\n\t    function unescapeStr (s) {\n\t      if (prevStr) {\n\t        s = prevStr + s;\n\t        prevStr = '';\n\t      }\n\t      if (tmpl || isexpr) {\n\t        parts.push(s && s.replace(_bp[5], '$1'));\n\t      } else {\n\t        parts.push(s);\n\t      }\n\t    }\n\t\n\t    function pushQBlock(_pos, _lastIndex, slash) { //eslint-disable-line\n\t      if (slash) {\n\t        _lastIndex = skipRegex(str, _pos);\n\t      }\n\t\n\t      if (tmpl && _lastIndex > _pos + 2) {\n\t        mark = '\\u2057' + qblocks.length + '~';\n\t        qblocks.push(str.slice(_pos, _lastIndex));\n\t        prevStr += str.slice(start, _pos) + mark;\n\t        start = _lastIndex;\n\t      }\n\t      return _lastIndex\n\t    }\n\t  };\n\t\n\t  _brackets.hasExpr = function hasExpr (str) {\n\t    return _cache[4].test(str)\n\t  };\n\t\n\t  _brackets.loopKeys = function loopKeys (expr) {\n\t    var m = expr.match(_cache[9]);\n\t\n\t    return m\n\t      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n\t      : { val: expr.trim() }\n\t  };\n\t\n\t  _brackets.array = function array (pair) {\n\t    return pair ? _create(pair) : _cache\n\t  };\n\t\n\t  function _reset (pair) {\n\t    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n\t      _cache = _create(pair);\n\t      _regex = pair === DEFAULT ? _loopback : _rewrite;\n\t      _cache[9] = _regex(_pairs[9]);\n\t    }\n\t    cachedBrackets = pair;\n\t  }\n\t\n\t  function _setSettings (o) {\n\t    var b;\n\t\n\t    o = o || {};\n\t    b = o.brackets;\n\t    Object.defineProperty(o, 'brackets', {\n\t      set: _reset,\n\t      get: function () { return cachedBrackets },\n\t      enumerable: true\n\t    });\n\t    _settings = o;\n\t    _reset(b);\n\t  }\n\t\n\t  Object.defineProperty(_brackets, 'settings', {\n\t    set: _setSettings,\n\t    get: function () { return _settings }\n\t  });\n\t\n\t  /* istanbul ignore next: in the browser riot is always in the scope */\n\t  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n\t  _brackets.set = _reset;\n\t  _brackets.skipRegex = skipRegex;\n\t\n\t  _brackets.R_STRINGS = R_STRINGS;\n\t  _brackets.R_MLCOMMS = R_MLCOMMS;\n\t  _brackets.S_QBLOCKS = S_QBLOCKS;\n\t  _brackets.S_QBLOCK2 = S_QBLOCK2;\n\t\n\t  return _brackets\n\t\n\t})();\n\t\n\t/**\n\t * @module tmpl\n\t *\n\t * tmpl          - Root function, returns the template value, render with data\n\t * tmpl.hasExpr  - Test the existence of a expression inside a string\n\t * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n\t */\n\t\n\t/* istanbul ignore next */\n\tvar tmpl = (function () {\n\t\n\t  var _cache = {};\n\t\n\t  function _tmpl (str, data) {\n\t    if (!str) { return str }\n\t\n\t    return (_cache[str] || (_cache[str] = _create(str))).call(\n\t      data, _logErr.bind({\n\t        data: data,\n\t        tmpl: str\n\t      })\n\t    )\n\t  }\n\t\n\t  _tmpl.hasExpr = brackets.hasExpr;\n\t\n\t  _tmpl.loopKeys = brackets.loopKeys;\n\t\n\t  // istanbul ignore next\n\t  _tmpl.clearCache = function () { _cache = {}; };\n\t\n\t  _tmpl.errorHandler = null;\n\t\n\t  function _logErr (err, ctx) {\n\t\n\t    err.riotData = {\n\t      tagName: ctx && ctx.__ && ctx.__.tagName,\n\t      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n\t    };\n\t\n\t    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n\t    else if (\n\t      typeof console !== 'undefined' &&\n\t      typeof console.error === 'function'\n\t    ) {\n\t      console.error(err.message);\n\t      console.log('<%s> %s', err.riotData.tagName || 'Unknown tag', this.tmpl); // eslint-disable-line\n\t      console.log(this.data); // eslint-disable-line\n\t    }\n\t  }\n\t\n\t  function _create (str) {\n\t    var expr = _getTmpl(str);\n\t\n\t    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\t\n\t    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n\t  }\n\t\n\t  var RE_DQUOTE = /\\u2057/g;\n\t  var RE_QBMARK = /\\u2057(\\d+)~/g;\n\t\n\t  function _getTmpl (str) {\n\t    var parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n\t    var qstr = parts.qblocks;\n\t    var expr;\n\t\n\t    if (parts.length > 2 || parts[0]) {\n\t      var i, j, list = [];\n\t\n\t      for (i = j = 0; i < parts.length; ++i) {\n\t\n\t        expr = parts[i];\n\t\n\t        if (expr && (expr = i & 1\n\t\n\t            ? _parseExpr(expr, 1, qstr)\n\t\n\t            : '\"' + expr\n\t                .replace(/\\\\/g, '\\\\\\\\')\n\t                .replace(/\\r\\n?|\\n/g, '\\\\n')\n\t                .replace(/\"/g, '\\\\\"') +\n\t              '\"'\n\t\n\t          )) { list[j++] = expr; }\n\t\n\t      }\n\t\n\t      expr = j < 2 ? list[0]\n\t           : '[' + list.join(',') + '].join(\"\")';\n\t\n\t    } else {\n\t\n\t      expr = _parseExpr(parts[1], 0, qstr);\n\t    }\n\t\n\t    if (qstr.length) {\n\t      expr = expr.replace(RE_QBMARK, function (_, pos) {\n\t        return qstr[pos]\n\t          .replace(/\\r/g, '\\\\r')\n\t          .replace(/\\n/g, '\\\\n')\n\t      });\n\t    }\n\t    return expr\n\t  }\n\t\n\t  var RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/;\n\t  var\n\t    RE_BREND = {\n\t      '(': /[()]/g,\n\t      '[': /[[\\]]/g,\n\t      '{': /[{}]/g\n\t    };\n\t\n\t  function _parseExpr (expr, asText, qstr) {\n\t\n\t    expr = expr\n\t      .replace(/\\s+/g, ' ').trim()\n\t      .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\t\n\t    if (expr) {\n\t      var\n\t        list = [],\n\t        cnt = 0,\n\t        match;\n\t\n\t      while (expr &&\n\t            (match = expr.match(RE_CSNAME)) &&\n\t            !match.index\n\t        ) {\n\t        var\n\t          key,\n\t          jsb,\n\t          re = /,|([[{(])|$/g;\n\t\n\t        expr = RegExp.rightContext;\n\t        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\t\n\t        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\t\n\t        jsb  = expr.slice(0, match.index);\n\t        expr = RegExp.rightContext;\n\t\n\t        list[cnt++] = _wrapExpr(jsb, 1, key);\n\t      }\n\t\n\t      expr = !cnt ? _wrapExpr(expr, asText)\n\t           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n\t    }\n\t    return expr\n\t\n\t    function skipBraces (ch, re) {\n\t      var\n\t        mm,\n\t        lv = 1,\n\t        ir = RE_BREND[ch];\n\t\n\t      ir.lastIndex = re.lastIndex;\n\t      while (mm = ir.exec(expr)) {\n\t        if (mm[0] === ch) { ++lv; }\n\t        else if (!--lv) { break }\n\t      }\n\t      re.lastIndex = lv ? expr.length : ir.lastIndex;\n\t    }\n\t  }\n\t\n\t  // istanbul ignore next: not both\n\t  var // eslint-disable-next-line max-len\n\t    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n\t    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n\t    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\t\n\t  function _wrapExpr (expr, asText, key) {\n\t    var tb;\n\t\n\t    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n\t      if (mvar) {\n\t        pos = tb ? 0 : pos + match.length;\n\t\n\t        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n\t          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n\t          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n\t        } else if (pos) {\n\t          tb = !JS_NOPROPS.test(s.slice(pos));\n\t        }\n\t      }\n\t      return match\n\t    });\n\t\n\t    if (tb) {\n\t      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n\t    }\n\t\n\t    if (key) {\n\t\n\t      expr = (tb\n\t          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n\t        ) + '?\"' + key + '\":\"\"';\n\t\n\t    } else if (asText) {\n\t\n\t      expr = 'function(v){' + (tb\n\t          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n\t        ) + ';return v||v===0?v:\"\"}.call(this)';\n\t    }\n\t\n\t    return expr\n\t  }\n\t\n\t  _tmpl.version = brackets.version = 'v3.0.8';\n\t\n\t  return _tmpl\n\t\n\t})();\n\t\n\t/* istanbul ignore next */\n\tvar observable$1 = function(el) {\n\t\n\t  /**\n\t   * Extend the original object or create a new empty one\n\t   * @type { Object }\n\t   */\n\t\n\t  el = el || {};\n\t\n\t  /**\n\t   * Private variables\n\t   */\n\t  var callbacks = {},\n\t    slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Public Api\n\t   */\n\t\n\t  // extend the el object adding the observable methods\n\t  Object.defineProperties(el, {\n\t    /**\n\t     * Listen to the given `event` ands\n\t     * execute the `callback` each time an event is triggered.\n\t     * @param  { String } event - event id\n\t     * @param  { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    on: {\n\t      value: function(event, fn) {\n\t        if (typeof fn == 'function')\n\t          { (callbacks[event] = callbacks[event] || []).push(fn); }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Removes the given `event` listeners\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    off: {\n\t      value: function(event, fn) {\n\t        if (event == '*' && !fn) { callbacks = {}; }\n\t        else {\n\t          if (fn) {\n\t            var arr = callbacks[event];\n\t            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n\t              if (cb == fn) { arr.splice(i--, 1); }\n\t            }\n\t          } else { delete callbacks[event]; }\n\t        }\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Listen to the given `event` and\n\t     * execute the `callback` at most once\n\t     * @param   { String } event - event id\n\t     * @param   { Function } fn - callback function\n\t     * @returns { Object } el\n\t     */\n\t    one: {\n\t      value: function(event, fn) {\n\t        function on() {\n\t          el.off(event, on);\n\t          fn.apply(el, arguments);\n\t        }\n\t        return el.on(event, on)\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    },\n\t\n\t    /**\n\t     * Execute all callback functions that listen to\n\t     * the given `event`\n\t     * @param   { String } event - event id\n\t     * @returns { Object } el\n\t     */\n\t    trigger: {\n\t      value: function(event) {\n\t        var arguments$1 = arguments;\n\t\n\t\n\t        // getting the arguments\n\t        var arglen = arguments.length - 1,\n\t          args = new Array(arglen),\n\t          fns,\n\t          fn,\n\t          i;\n\t\n\t        for (i = 0; i < arglen; i++) {\n\t          args[i] = arguments$1[i + 1]; // skip first argument\n\t        }\n\t\n\t        fns = slice.call(callbacks[event] || [], 0);\n\t\n\t        for (i = 0; fn = fns[i]; ++i) {\n\t          fn.apply(el, args);\n\t        }\n\t\n\t        if (callbacks['*'] && event != '*')\n\t          { el.trigger.apply(el, ['*', event].concat(args)); }\n\t\n\t        return el\n\t      },\n\t      enumerable: false,\n\t      writable: false,\n\t      configurable: false\n\t    }\n\t  });\n\t\n\t  return el\n\t\n\t};\n\t\n\t/**\n\t * Specialized function for looping an array-like collection with `each={}`\n\t * @param   { Array } list - collection of items\n\t * @param   {Function} fn - callback function\n\t * @returns { Array } the array looped\n\t */\n\tfunction each(list, fn) {\n\t  var len = list ? list.length : 0;\n\t  var i = 0;\n\t  for (; i < len; ++i) {\n\t    fn(list[i], i);\n\t  }\n\t  return list\n\t}\n\t\n\t/**\n\t * Check whether an array contains an item\n\t * @param   { Array } array - target array\n\t * @param   { * } item - item to test\n\t * @returns { Boolean } -\n\t */\n\tfunction contains(array, item) {\n\t  return array.indexOf(item) !== -1\n\t}\n\t\n\t/**\n\t * Convert a string containing dashes to camel case\n\t * @param   { String } str - input string\n\t * @returns { String } my-string -> myString\n\t */\n\tfunction toCamel(str) {\n\t  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n\t}\n\t\n\t/**\n\t * Faster String startsWith alternative\n\t * @param   { String } str - source string\n\t * @param   { String } value - test string\n\t * @returns { Boolean } -\n\t */\n\tfunction startsWith(str, value) {\n\t  return str.slice(0, value.length) === value\n\t}\n\t\n\t/**\n\t * Helper function to set an immutable property\n\t * @param   { Object } el - object where the new property will be set\n\t * @param   { String } key - object key where the new property will be stored\n\t * @param   { * } value - value of the new property\n\t * @param   { Object } options - set the propery overriding the default options\n\t * @returns { Object } - the initial object\n\t */\n\tfunction defineProperty(el, key, value, options) {\n\t  Object.defineProperty(el, key, extend({\n\t    value: value,\n\t    enumerable: false,\n\t    writable: false,\n\t    configurable: true\n\t  }, options));\n\t  return el\n\t}\n\t\n\t/**\n\t * Extend any object with other properties\n\t * @param   { Object } src - source object\n\t * @returns { Object } the resulting extended object\n\t *\n\t * var obj = { foo: 'baz' }\n\t * extend(obj, {bar: 'bar', foo: 'bar'})\n\t * console.log(obj) => {bar: 'bar', foo: 'bar'}\n\t *\n\t */\n\tfunction extend(src) {\n\t  var obj, args = arguments;\n\t  for (var i = 1; i < args.length; ++i) {\n\t    if (obj = args[i]) {\n\t      for (var key in obj) {\n\t        // check if this property of the source object could be overridden\n\t        if (isWritable(src, key))\n\t          { src[key] = obj[key]; }\n\t      }\n\t    }\n\t  }\n\t  return src\n\t}\n\t\n\tvar misc = Object.freeze({\n\t\teach: each,\n\t\tcontains: contains,\n\t\ttoCamel: toCamel,\n\t\tstartsWith: startsWith,\n\t\tdefineProperty: defineProperty,\n\t\textend: extend\n\t});\n\t\n\tvar settings$1 = extend(Object.create(brackets.settings), {\n\t  skipAnonymousTags: true,\n\t  // handle the auto updates on any DOM event\n\t  autoUpdate: true\n\t});\n\t\n\t/**\n\t * Trigger DOM events\n\t * @param   { HTMLElement } dom - dom element target of the event\n\t * @param   { Function } handler - user function\n\t * @param   { Object } e - event object\n\t */\n\tfunction handleEvent(dom, handler, e) {\n\t  var ptag = this.__.parent,\n\t    item = this.__.item;\n\t\n\t  if (!item)\n\t    { while (ptag && !item) {\n\t      item = ptag.__.item;\n\t      ptag = ptag.__.parent;\n\t    } }\n\t\n\t  // override the event properties\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n\t  /* istanbul ignore next */\n\t  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\t\n\t  e.item = item;\n\t\n\t  handler.call(this, e);\n\t\n\t  // avoid auto updates\n\t  if (!settings$1.autoUpdate) { return }\n\t\n\t  if (!e.preventUpdate) {\n\t    var p = getImmediateCustomParentTag(this);\n\t    // fixes #2083\n\t    if (p.isMounted) { p.update(); }\n\t  }\n\t}\n\t\n\t/**\n\t * Attach an event to a DOM node\n\t * @param { String } name - event name\n\t * @param { Function } handler - event callback\n\t * @param { Object } dom - dom node\n\t * @param { Tag } tag - tag instance\n\t */\n\tfunction setEventHandler(name, handler, dom, tag) {\n\t  var eventName,\n\t    cb = handleEvent.bind(tag, dom, handler);\n\t\n\t  // avoid to bind twice the same event\n\t  // possible fix for #2332\n\t  dom[name] = null;\n\t\n\t  // normalize event name\n\t  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\t\n\t  // cache the listener into the listeners array\n\t  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n\t  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n\t  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\t\n\t  dom[RIOT_EVENTS_KEY][name] = cb;\n\t  dom.addEventListener(eventName, cb, false);\n\t}\n\t\n\t/**\n\t * Update dynamically created data-is tags with changing expressions\n\t * @param { Object } expr - expression tag and expression info\n\t * @param { Tag }    parent - parent for tag creation\n\t * @param { String } tagName - tag implementation we want to use\n\t */\n\tfunction updateDataIs(expr, parent, tagName) {\n\t  var conf, isVirtual, head, ref;\n\t\n\t  if (expr.tag && expr.tagName === tagName) {\n\t    expr.tag.update();\n\t    return\n\t  }\n\t\n\t  isVirtual = expr.dom.tagName === 'VIRTUAL';\n\t  // sync _parent to accommodate changing tagnames\n\t  if (expr.tag) {\n\t    // need placeholder before unmount\n\t    if(isVirtual) {\n\t      head = expr.tag.__.head;\n\t      ref = createDOMPlaceholder();\n\t      head.parentNode.insertBefore(ref, head);\n\t    }\n\t\n\t    expr.tag.unmount(true);\n\t  }\n\t\n\t  if (!isString(tagName)) { return }\n\t\n\t  expr.impl = __TAG_IMPL[tagName];\n\t  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n\t  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n\t  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n\t  expr.tagName = tagName;\n\t  expr.tag.mount();\n\t  if (isVirtual)\n\t    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\t\n\t  // parent is the placeholder tag, not the dynamic tag so clean up\n\t  parent.__.onUnmount = function() {\n\t    var delName = expr.tag.opts.dataIs,\n\t      tags = expr.tag.parent.tags,\n\t      _tags = expr.tag.__.parent.tags;\n\t    arrayishRemove(tags, delName, expr.tag);\n\t    arrayishRemove(_tags, delName, expr.tag);\n\t    expr.tag.unmount();\n\t  };\n\t}\n\t\n\t/**\n\t * Nomalize any attribute removing the \"riot-\" prefix\n\t * @param   { String } attrName - original attribute name\n\t * @returns { String } valid html attribute name\n\t */\n\tfunction normalizeAttrName(attrName) {\n\t  if (!attrName) { return null }\n\t  attrName = attrName.replace(ATTRS_PREFIX, '');\n\t  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n\t  return attrName\n\t}\n\t\n\t/**\n\t * Update on single tag expression\n\t * @this Tag\n\t * @param { Object } expr - expression logic\n\t * @returns { undefined }\n\t */\n\tfunction updateExpression(expr) {\n\t  if (this.root && getAttr(this.root,'virtualized')) { return }\n\t\n\t  var dom = expr.dom,\n\t    // remove the riot- prefix\n\t    attrName = normalizeAttrName(expr.attr),\n\t    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n\t    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n\t    parent = dom && (expr.parent || dom.parentNode),\n\t    // detect the style attributes\n\t    isStyleAttr = attrName === 'style',\n\t    isClassAttr = attrName === 'class',\n\t    hasValue,\n\t    isObj,\n\t    value;\n\t\n\t  // if it's a tag we could totally skip the rest\n\t  if (expr._riot_id) {\n\t    if (expr.isMounted) {\n\t      expr.update();\n\t    // if it hasn't been mounted yet, do that now.\n\t    } else {\n\t      expr.mount();\n\t      if (isVirtual) {\n\t        makeReplaceVirtual(expr, expr.root);\n\t      }\n\t    }\n\t    return\n\t  }\n\t  // if this expression has the update method it means it can handle the DOM changes by itself\n\t  if (expr.update) { return expr.update() }\n\t\n\t  // ...it seems to be a simple expression so we try to calculat its value\n\t  value = tmpl(expr.expr, isToggle ? extend({}, Object.create(this.parent), this) : this);\n\t  hasValue = !isBlank(value);\n\t  isObj = isObject(value);\n\t\n\t  // convert the style/class objects to strings\n\t  if (isObj) {\n\t    isObj = !isClassAttr && !isStyleAttr;\n\t    if (isClassAttr) {\n\t      value = tmpl(JSON.stringify(value), this);\n\t    } else if (isStyleAttr) {\n\t      value = styleObjectToString(value);\n\t    }\n\t  }\n\t\n\t  // remove original attribute\n\t  if (expr.attr && (!expr.isAttrRemoved || !hasValue || value === false)) {\n\t    remAttr(dom, expr.attr);\n\t    expr.isAttrRemoved = true;\n\t  }\n\t\n\t  // for the boolean attributes we don't need the value\n\t  // we can convert it to checked=true to checked=checked\n\t  if (expr.bool) { value = value ? attrName : false; }\n\t  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n\t  if (expr.wasParsedOnce && expr.value === value) { return }\n\t\n\t  // update the expression value\n\t  expr.value = value;\n\t  expr.wasParsedOnce = true;\n\t\n\t  // if the value is an object we can not do much more with it\n\t  if (isObj && !isToggle) { return }\n\t  // avoid to render undefined/null values\n\t  if (isBlank(value)) { value = ''; }\n\t\n\t  // textarea and text nodes have no attribute name\n\t  if (!attrName) {\n\t    // about #815 w/o replace: the browser converts the value to a string,\n\t    // the comparison by \"==\" does too, but not in the server\n\t    value += '';\n\t    // test for parent avoids error with invalid assignment to nodeValue\n\t    if (parent) {\n\t      // cache the parent node because somehow it will become null on IE\n\t      // on the next iteration\n\t      expr.parent = parent;\n\t      if (parent.tagName === 'TEXTAREA') {\n\t        parent.value = value;                    // #1113\n\t        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n\t      }                                         // will be available on 'updated'\n\t      else { dom.nodeValue = value; }\n\t    }\n\t    return\n\t  }\n\t\n\t\n\t  // event handler\n\t  if (isFunction(value)) {\n\t    setEventHandler(attrName, value, dom, this);\n\t  // show / hide\n\t  } else if (isToggle) {\n\t    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n\t  // handle attributes\n\t  } else {\n\t    if (expr.bool) {\n\t      dom[attrName] = value;\n\t    }\n\t\n\t    if (attrName === 'value' && dom.value !== value) {\n\t      dom.value = value;\n\t    }\n\t\n\t    if (hasValue && value !== false) {\n\t      setAttr(dom, attrName, value);\n\t    }\n\t\n\t    // make sure that in case of style changes\n\t    // the element stays hidden\n\t    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n\t  }\n\t}\n\t\n\t/**\n\t * Update all the expressions in a Tag instance\n\t * @this Tag\n\t * @param { Array } expressions - expression that must be re evaluated\n\t */\n\tfunction updateAllExpressions(expressions) {\n\t  each(expressions, updateExpression.bind(this));\n\t}\n\t\n\tvar IfExpr = {\n\t  init: function init(dom, tag, expr) {\n\t    remAttr(dom, CONDITIONAL_DIRECTIVE);\n\t    this.tag = tag;\n\t    this.expr = expr;\n\t    this.stub = createDOMPlaceholder();\n\t    this.pristine = dom;\n\t\n\t    var p = dom.parentNode;\n\t    p.insertBefore(this.stub, dom);\n\t    p.removeChild(dom);\n\t\n\t    return this\n\t  },\n\t  update: function update() {\n\t    this.value = tmpl(this.expr, this.tag);\n\t\n\t    if (this.value && !this.current) { // insert\n\t      this.current = this.pristine.cloneNode(true);\n\t      this.stub.parentNode.insertBefore(this.current, this.stub);\n\t      this.expressions = [];\n\t      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n\t    } else if (!this.value && this.current) { // remove\n\t      unmountAll(this.expressions);\n\t      if (this.current._tag) {\n\t        this.current._tag.unmount();\n\t      } else if (this.current.parentNode) {\n\t        this.current.parentNode.removeChild(this.current);\n\t      }\n\t      this.current = null;\n\t      this.expressions = [];\n\t    }\n\t\n\t    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n\t  },\n\t  unmount: function unmount() {\n\t    unmountAll(this.expressions || []);\n\t  }\n\t};\n\t\n\tvar RefExpr = {\n\t  init: function init(dom, parent, attrName, attrValue) {\n\t    this.dom = dom;\n\t    this.attr = attrName;\n\t    this.rawValue = attrValue;\n\t    this.parent = parent;\n\t    this.hasExp = tmpl.hasExpr(attrValue);\n\t    return this\n\t  },\n\t  update: function update() {\n\t    var old = this.value;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n\t    var tagOrDom = this.dom.__ref || this.tag || this.dom;\n\t\n\t    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\t\n\t    // the name changed, so we need to remove it from the old key (if present)\n\t    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n\t    if (!isBlank(this.value) && isString(this.value)) {\n\t      // add it to the refs of parent tag (this behavior was changed >=3.0)\n\t      if (customParent) { arrayishAdd(\n\t        customParent.refs,\n\t        this.value,\n\t        tagOrDom,\n\t        // use an array if it's a looped node and the ref is not an expression\n\t        null,\n\t        this.parent.__.index\n\t      ); }\n\t\n\t      if (this.value !== old) {\n\t        setAttr(this.dom, this.attr, this.value);\n\t      }\n\t    } else {\n\t      remAttr(this.dom, this.attr);\n\t    }\n\t\n\t    // cache the ref bound to this dom node\n\t    // to reuse it in future (see also #2329)\n\t    if (!this.dom.__ref) { this.dom.__ref = tagOrDom; }\n\t  },\n\t  unmount: function unmount() {\n\t    var tagOrDom = this.tag || this.dom;\n\t    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n\t    if (!isBlank(this.value) && customParent)\n\t      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n\t  }\n\t};\n\t\n\t/**\n\t * Convert the item looped into an object used to extend the child tag properties\n\t * @param   { Object } expr - object containing the keys used to extend the children tags\n\t * @param   { * } key - value to assign to the new object returned\n\t * @param   { * } val - value containing the position of the item in the array\n\t * @param   { Object } base - prototype object for the new item\n\t * @returns { Object } - new object containing the values of the original item\n\t *\n\t * The variables 'key' and 'val' are arbitrary.\n\t * They depend on the collection type looped (Array, Object)\n\t * and on the expression used on the each tag\n\t *\n\t */\n\tfunction mkitem(expr, key, val, base) {\n\t  var item = base ? Object.create(base) : {};\n\t  item[expr.key] = key;\n\t  if (expr.pos) { item[expr.pos] = val; }\n\t  return item\n\t}\n\t\n\t/**\n\t * Unmount the redundant tags\n\t * @param   { Array } items - array containing the current items to loop\n\t * @param   { Array } tags - array containing all the children tags\n\t */\n\tfunction unmountRedundant(items, tags) {\n\t  var i = tags.length,\n\t    j = items.length;\n\t\n\t  while (i > j) {\n\t    i--;\n\t    remove.apply(tags[i], [tags, i]);\n\t  }\n\t}\n\t\n\t\n\t/**\n\t * Remove a child tag\n\t * @this Tag\n\t * @param   { Array } tags - tags collection\n\t * @param   { Number } i - index of the tag to remove\n\t */\n\tfunction remove(tags, i) {\n\t  tags.splice(i, 1);\n\t  this.unmount();\n\t  arrayishRemove(this.parent, this, this.__.tagName, true);\n\t}\n\t\n\t/**\n\t * Move the nested custom tags in non custom loop tags\n\t * @this Tag\n\t * @param   { Number } i - current position of the loop tag\n\t */\n\tfunction moveNestedTags(i) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(this.tags), function (tagName) {\n\t    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n\t  });\n\t}\n\t\n\t/**\n\t * Move a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction move(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { moveVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Insert and mount a child tag\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction insert(root, nextTag, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.apply(this, [root, nextTag]); }\n\t  else\n\t    { safeInsert(root, this.root, nextTag.root); }\n\t}\n\t\n\t/**\n\t * Append a new tag into the DOM\n\t * @this Tag\n\t * @param   { HTMLElement } root - dom node containing all the loop children\n\t * @param   { Boolean } isVirtual - is it a virtual tag?\n\t */\n\tfunction append(root, isVirtual) {\n\t  if (isVirtual)\n\t    { makeVirtual.call(this, root); }\n\t  else\n\t    { root.appendChild(this.root); }\n\t}\n\t\n\t/**\n\t * Manage tags having the 'each'\n\t * @param   { HTMLElement } dom - DOM node we need to loop\n\t * @param   { Tag } parent - parent tag instance where the dom node is contained\n\t * @param   { String } expr - string contained in the 'each' attribute\n\t * @returns { Object } expression object for this each loop\n\t */\n\tfunction _each(dom, parent, expr) {\n\t\n\t  // remove the each property from the original tag\n\t  remAttr(dom, LOOP_DIRECTIVE);\n\t\n\t  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n\t    tagName = getTagName(dom),\n\t    impl = __TAG_IMPL[tagName],\n\t    parentNode = dom.parentNode,\n\t    placeholder = createDOMPlaceholder(),\n\t    child = getTag(dom),\n\t    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n\t    tags = [],\n\t    oldItems = [],\n\t    hasKeys,\n\t    isLoop = true,\n\t    isAnonymous = !__TAG_IMPL[tagName],\n\t    isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t  // parse the each expression\n\t  expr = tmpl.loopKeys(expr);\n\t  expr.isLoop = true;\n\t\n\t  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\t\n\t  // insert a marked where the loop tags will be injected\n\t  parentNode.insertBefore(placeholder, dom);\n\t  parentNode.removeChild(dom);\n\t\n\t  expr.update = function updateEach() {\n\t    // get the new items collection\n\t    expr.value = tmpl(expr.val, parent);\n\t\n\t    var frag = createFrag(),\n\t      items = expr.value,\n\t      isObject$$1 = !isArray(items) && !isString(items),\n\t      root = placeholder.parentNode;\n\t\n\t    // if this DOM was removed the update here is useless\n\t    // this condition fixes also a weird async issue on IE in our unit test\n\t    if (!root) { return }\n\t\n\t    // object loop. any changes cause full redraw\n\t    if (isObject$$1) {\n\t      hasKeys = items || false;\n\t      items = hasKeys ?\n\t        Object.keys(items).map(function (key) {\n\t          return mkitem(expr, items[key], key)\n\t        }) : [];\n\t    } else {\n\t      hasKeys = false;\n\t    }\n\t\n\t    if (ifExpr) {\n\t      items = items.filter(function(item, i) {\n\t        if (expr.key && !isObject$$1)\n\t          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\t\n\t        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n\t      });\n\t    }\n\t\n\t    // loop all the new items\n\t    each(items, function(item, i) {\n\t      // reorder only if the items are objects\n\t      var\n\t        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n\t        oldPos = oldItems.indexOf(item),\n\t        isNew = oldPos === -1,\n\t        pos = !isNew && doReorder ? oldPos : i,\n\t        // does a tag exist in this position?\n\t        tag = tags[pos],\n\t        mustAppend = i >= oldItems.length,\n\t        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\t\n\t      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\t\n\t      // new tag\n\t      if (mustCreate) {\n\t        tag = new Tag$1(impl, {\n\t          parent: parent,\n\t          isLoop: isLoop,\n\t          isAnonymous: isAnonymous,\n\t          tagName: tagName,\n\t          root: dom.cloneNode(isAnonymous),\n\t          item: item,\n\t          index: i,\n\t        }, dom.innerHTML);\n\t\n\t        // mount the tag\n\t        tag.mount();\n\t\n\t        if (mustAppend)\n\t          { append.apply(tag, [frag || root, isVirtual]); }\n\t        else\n\t          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\t\n\t        if (!mustAppend) { oldItems.splice(i, 0, item); }\n\t        tags.splice(i, 0, tag);\n\t        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n\t      } else if (pos !== i && doReorder) {\n\t        // move\n\t        if (contains(items, oldItems[pos])) {\n\t          move.apply(tag, [root, tags[i], isVirtual]);\n\t          // move the old tag instance\n\t          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n\t          // move the old item\n\t          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n\t        }\n\t\n\t        // update the position attribute if it exists\n\t        if (expr.pos) { tag[expr.pos] = i; }\n\t\n\t        // if the loop tags are not custom\n\t        // we need to move all their custom tags into the right position\n\t        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n\t      }\n\t\n\t      // cache the original item to use it in the events bound to this node\n\t      // and its children\n\t      tag.__.item = item;\n\t      tag.__.index = i;\n\t      tag.__.parent = parent;\n\t\n\t      if (!mustCreate) { tag.update(item); }\n\t    });\n\t\n\t    // remove the redundant tags\n\t    unmountRedundant(items, tags);\n\t\n\t    // clone the items array\n\t    oldItems = items.slice();\n\t\n\t    // this condition is weird u\n\t    root.insertBefore(frag, placeholder);\n\t  };\n\t\n\t  expr.unmount = function() {\n\t    each(tags, function(t) { t.unmount(); });\n\t  };\n\t\n\t  return expr\n\t}\n\t\n\t/**\n\t * Walk the tag DOM to detect the expressions to evaluate\n\t * @this Tag\n\t * @param   { HTMLElement } root - root tag where we will start digging the expressions\n\t * @param   { Array } expressions - empty array where the expressions will be added\n\t * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n\t * @returns { Object } an object containing the root noode and the dom tree\n\t */\n\tfunction parseExpressions(root, expressions, mustIncludeRoot) {\n\t  var this$1 = this;\n\t\n\t  var tree = {parent: {children: expressions}};\n\t\n\t  walkNodes(root, function (dom, ctx) {\n\t    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n\t    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\t\n\t    // text node\n\t    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n\t      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\t\n\t    if (type !== 1) { return ctx } // not an element\n\t\n\t    var isVirtual = dom.tagName === 'VIRTUAL';\n\t\n\t    // loop. each does it's own thing (for now)\n\t    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n\t      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n\t      parent.children.push(_each(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    // if-attrs become the new parent. Any following expressions (either on the current\n\t    // element, or below it) become children of this expression.\n\t    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n\t      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n\t      return false\n\t    }\n\t\n\t    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n\t      if (tmpl.hasExpr(expr)) {\n\t        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n\t        return false\n\t      }\n\t    }\n\t\n\t    // if this is a tag, stop traversing here.\n\t    // we ignore the root, since parseExpressions is called while we're mounting that root\n\t    tagImpl = getTag(dom);\n\t    if(isVirtual) {\n\t      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n\t      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n\t        { tagImpl = { tmpl: dom.outerHTML }; }\n\t    }\n\t\n\t    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n\t      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n\t        // can not remove attribute like directives\n\t        // so flag for removal after creation to prevent maximum stack error\n\t        setAttr(dom, 'virtualized', true);\n\t\n\t        var tag = new Tag$1({ tmpl: dom.outerHTML },\n\t          {root: dom, parent: this$1},\n\t          dom.innerHTML);\n\t        parent.children.push(tag); // no return, anonymous tag, keep parsing\n\t      } else {\n\t        var conf = {root: dom, parent: this$1, hasImpl: true};\n\t        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n\t        return false\n\t      }\n\t    }\n\t\n\t    // attribute expressions\n\t    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n\t      if (!expr) { return }\n\t      parent.children.push(expr);\n\t    }]);\n\t\n\t    // whatever the parent is, all child elements get the same parent.\n\t    // If this element had an if-attr, that's the parent for all child elements\n\t    return {parent: parent}\n\t  }, tree);\n\t}\n\t\n\t/**\n\t * Calls `fn` for every attribute on an element. If that attr has an expression,\n\t * it is also passed to fn.\n\t * @this Tag\n\t * @param   { HTMLElement } dom - dom node to parse\n\t * @param   { Array } attrs - array of attributes\n\t * @param   { Function } fn - callback to exec on any iteration\n\t */\n\tfunction parseAttributes(dom, attrs, fn) {\n\t  var this$1 = this;\n\t\n\t  each(attrs, function (attr) {\n\t    if (!attr) { return false }\n\t\n\t    var name = attr.name, bool = isBoolAttr(name), expr;\n\t\n\t    if (contains(REF_DIRECTIVES, name)) {\n\t      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n\t    } else if (tmpl.hasExpr(attr.value)) {\n\t      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n\t    }\n\t\n\t    fn(attr, expr);\n\t  });\n\t}\n\t\n\t/*\n\t  Includes hacks needed for the Internet Explorer version 9 and below\n\t  See: http://kangax.github.io/compat-table/es5/#ie8\n\t       http://codeplanet.io/dropping-ie8/\n\t*/\n\t\n\tvar reHasYield  = /<yield\\b/i;\n\tvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\n\tvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\n\tvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\n\tvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\n\tvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\n\tvar GENERIC = 'div';\n\tvar SVG = 'svg';\n\t\n\t\n\t/*\n\t  Creates the root element for table or select child elements:\n\t  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n\t*/\n\tfunction specialTags(el, tmpl, tagName) {\n\t\n\t  var\n\t    select = tagName[0] === 'o',\n\t    parent = select ? 'select>' : 'table>';\n\t\n\t  // trim() is important here, this ensures we don't have artifacts,\n\t  // so we can check if we have only one element inside the parent\n\t  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n\t  parent = el.firstChild;\n\t\n\t  // returns the immediate parent if tr/th/td/col is the only element, if not\n\t  // returns the whole tree, as this can include additional elements\n\t  /* istanbul ignore next */\n\t  if (select) {\n\t    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n\t  } else {\n\t    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n\t    var tname = rootEls[tagName];\n\t    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n\t  }\n\t  return parent\n\t}\n\t\n\t/*\n\t  Replace the yield tag from any tag template with the innerHTML of the\n\t  original tag in the page\n\t*/\n\tfunction replaceYield(tmpl, html) {\n\t  // do nothing if no yield\n\t  if (!reHasYield.test(tmpl)) { return tmpl }\n\t\n\t  // be careful with #1343 - string on the source having `$1`\n\t  var src = {};\n\t\n\t  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n\t    src[ref] = src[ref] || text;   // preserve first definition\n\t    return ''\n\t  }).trim();\n\t\n\t  return tmpl\n\t    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n\t      return src[ref] || def || ''\n\t    })\n\t    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n\t      return html || def || ''\n\t    })\n\t}\n\t\n\t/**\n\t * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n\t * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n\t *\n\t * @param   { String } tmpl  - The template coming from the custom tag definition\n\t * @param   { String } html - HTML content that comes from the DOM element where you\n\t *           will mount the tag, mostly the original tag in the page\n\t * @param   { Boolean } isSvg - true if the root node is an svg\n\t * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n\t */\n\tfunction mkdom(tmpl, html, isSvg$$1) {\n\t  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n\t    tagName = match && match[1].toLowerCase(),\n\t    el = mkEl(isSvg$$1 ? SVG : GENERIC);\n\t\n\t  // replace all the yield tags with the tag inner html\n\t  tmpl = replaceYield(tmpl, html);\n\t\n\t  /* istanbul ignore next */\n\t  if (tblTags.test(tagName))\n\t    { el = specialTags(el, tmpl, tagName); }\n\t  else\n\t    { setInnerHTML(el, tmpl); }\n\t\n\t  return el\n\t}\n\t\n\t/**\n\t * Another way to create a riot tag a bit more es6 friendly\n\t * @param { HTMLElement } el - tag DOM selector or DOM node/s\n\t * @param { Object } opts - tag logic\n\t * @returns { Tag } new riot tag instance\n\t */\n\tfunction Tag$2(el, opts) {\n\t  // get the tag properties from the class constructor\n\t  var ref = this;\n\t  var name = ref.name;\n\t  var tmpl = ref.tmpl;\n\t  var css = ref.css;\n\t  var attrs = ref.attrs;\n\t  var onCreate = ref.onCreate;\n\t  // register a new tag and cache the class prototype\n\t  if (!__TAG_IMPL[name]) {\n\t    tag$1(name, tmpl, css, attrs, onCreate);\n\t    // cache the class constructor\n\t    __TAG_IMPL[name].class = this.constructor;\n\t  }\n\t\n\t  // mount the tag using the class instance\n\t  mountTo(el, name, opts, this);\n\t  // inject the component css\n\t  if (css) { styleManager.inject(); }\n\t\n\t  return this\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag$1(name, tmpl, css, attrs, fn) {\n\t  if (isFunction(attrs)) {\n\t    fn = attrs;\n\t\n\t    if (/^[\\w\\-]+\\s?=/.test(css)) {\n\t      attrs = css;\n\t      css = '';\n\t    } else\n\t      { attrs = ''; }\n\t  }\n\t\n\t  if (css) {\n\t    if (isFunction(css))\n\t      { fn = css; }\n\t    else\n\t      { styleManager.add(css); }\n\t  }\n\t\n\t  name = name.toLowerCase();\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Create a new riot tag implementation (for use by the compiler)\n\t * @param   { String }   name - name/id of the new riot tag\n\t * @param   { String }   tmpl - tag template\n\t * @param   { String }   css - custom tag css\n\t * @param   { String }   attrs - root tag attributes\n\t * @param   { Function } fn - user function\n\t * @returns { String } name/id of the tag just created\n\t */\n\tfunction tag2$1(name, tmpl, css, attrs, fn) {\n\t  if (css) { styleManager.add(css, name); }\n\t\n\t  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\t\n\t  return name\n\t}\n\t\n\t/**\n\t * Mount a tag using a specific tag implementation\n\t * @param   { * } selector - tag DOM selector or DOM node/s\n\t * @param   { String } tagName - tag implementation name\n\t * @param   { Object } opts - tag logic\n\t * @returns { Array } new tags instances\n\t */\n\tfunction mount$1(selector, tagName, opts) {\n\t  var tags = [];\n\t  var elem, allTags;\n\t\n\t  function pushTagsTo(root) {\n\t    if (root.tagName) {\n\t      var riotTag = getAttr(root, IS_DIRECTIVE), tag;\n\t\n\t      // have tagName? force riot-tag to be the same\n\t      if (tagName && riotTag !== tagName) {\n\t        riotTag = tagName;\n\t        setAttr(root, IS_DIRECTIVE, tagName);\n\t      }\n\t\n\t      tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\t\n\t      if (tag)\n\t        { tags.push(tag); }\n\t    } else if (root.length)\n\t      { each(root, pushTagsTo); } // assume nodeList\n\t  }\n\t\n\t  // inject styles into DOM\n\t  styleManager.inject();\n\t\n\t  if (isObject(tagName)) {\n\t    opts = tagName;\n\t    tagName = 0;\n\t  }\n\t\n\t  // crawl the DOM to find the tag\n\t  if (isString(selector)) {\n\t    selector = selector === '*' ?\n\t      // select all registered tags\n\t      // & tags found with the riot-tag attribute set\n\t      allTags = selectTags() :\n\t      // or just the ones named like the selector\n\t      selector + selectTags(selector.split(/, */));\n\t\n\t    // make sure to pass always a selector\n\t    // to the querySelectorAll function\n\t    elem = selector ? $$(selector) : [];\n\t  }\n\t  else\n\t    // probably you have passed already a tag or a NodeList\n\t    { elem = selector; }\n\t\n\t  // select all the registered and mount them inside their root elements\n\t  if (tagName === '*') {\n\t    // get all custom tags\n\t    tagName = allTags || selectTags();\n\t    // if the root els it's just a single tag\n\t    if (elem.tagName)\n\t      { elem = $$(tagName, elem); }\n\t    else {\n\t      // select all the children for all the different root elements\n\t      var nodeList = [];\n\t\n\t      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\t\n\t      elem = nodeList;\n\t    }\n\t    // get rid of the tagName\n\t    tagName = 0;\n\t  }\n\t\n\t  pushTagsTo(elem);\n\t\n\t  return tags\n\t}\n\t\n\t// Create a mixin that could be globally shared across all the tags\n\tvar mixins = {};\n\tvar globals = mixins[GLOBAL_MIXIN] = {};\n\tvar mixins_id = 0;\n\t\n\t/**\n\t * Create/Return a mixin by its name\n\t * @param   { String }  name - mixin name (global mixin if object)\n\t * @param   { Object }  mix - mixin logic\n\t * @param   { Boolean } g - is global?\n\t * @returns { Object }  the mixin logic\n\t */\n\tfunction mixin$1(name, mix, g) {\n\t  // Unnamed global\n\t  if (isObject(name)) {\n\t    mixin$1((\"__\" + (mixins_id++) + \"__\"), name, true);\n\t    return\n\t  }\n\t\n\t  var store = g ? globals : mixins;\n\t\n\t  // Getter\n\t  if (!mix) {\n\t    if (isUndefined(store[name]))\n\t      { throw new Error((\"Unregistered mixin: \" + name)) }\n\t\n\t    return store[name]\n\t  }\n\t\n\t  // Setter\n\t  store[name] = isFunction(mix) ?\n\t    extend(mix.prototype, store[name] || {}) && mix :\n\t    extend(store[name] || {}, mix);\n\t}\n\t\n\t/**\n\t * Update all the tags instances created\n\t * @returns { Array } all the tags instances\n\t */\n\tfunction update$1() {\n\t  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n\t}\n\t\n\tfunction unregister$1(name) {\n\t  __TAG_IMPL[name] = null;\n\t}\n\t\n\tvar version$1 = 'v3.6.1';\n\t\n\t\n\tvar core = Object.freeze({\n\t\tTag: Tag$2,\n\t\ttag: tag$1,\n\t\ttag2: tag2$1,\n\t\tmount: mount$1,\n\t\tmixin: mixin$1,\n\t\tupdate: update$1,\n\t\tunregister: unregister$1,\n\t\tversion: version$1\n\t});\n\t\n\t// counter to give a unique id to all the Tag instances\n\tvar __uid = 0;\n\t\n\t/**\n\t * We need to update opts for this tag. That requires updating the expressions\n\t * in any attributes on the tag, and then copying the result onto opts.\n\t * @this Tag\n\t * @param   {Boolean} isLoop - is it a loop tag?\n\t * @param   { Tag }  parent - parent tag node\n\t * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n\t * @param   { Object }  opts - tag options\n\t * @param   { Array }  instAttrs - tag attributes array\n\t */\n\tfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n\t  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n\t  // (and only this case) we don't need to do updateOpts, because the regular parse\n\t  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n\t  if (isLoop && isAnonymous) { return }\n\t\n\t  var ctx = !isAnonymous && isLoop ? this : parent || this;\n\t  each(instAttrs, function (attr) {\n\t    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n\t    // normalize the attribute names\n\t    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n\t  });\n\t}\n\t\n\t\n\t/**\n\t * Tag class\n\t * @constructor\n\t * @param { Object } impl - it contains the tag template, and logic\n\t * @param { Object } conf - tag options\n\t * @param { String } innerHTML - html that eventually we need to inject in the tag\n\t */\n\tfunction Tag$1(impl, conf, innerHTML) {\n\t  if ( impl === void 0 ) impl = {};\n\t  if ( conf === void 0 ) conf = {};\n\t\n\t  var opts = extend({}, conf.opts),\n\t    parent = conf.parent,\n\t    isLoop = conf.isLoop,\n\t    isAnonymous = !!conf.isAnonymous,\n\t    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n\t    item = cleanUpData(conf.item),\n\t    index = conf.index, // available only for the looped nodes\n\t    instAttrs = [], // All attributes on the Tag when it's first parsed\n\t    implAttrs = [], // expressions on this type of Tag\n\t    expressions = [],\n\t    root = conf.root,\n\t    tagName = conf.tagName || getTagName(root),\n\t    isVirtual = tagName === 'virtual',\n\t    isInline = !isVirtual && !impl.tmpl,\n\t    propsInSyncWithParent = [],\n\t    dom;\n\t\n\t  // make this tag observable\n\t  if (!skipAnonymous) { observable$1(this); }\n\t  // only call unmount if we have a valid __TAG_IMPL (has name property)\n\t  if (impl.name && root._tag) { root._tag.unmount(true); }\n\t\n\t  // not yet mounted\n\t  this.isMounted = false;\n\t\n\t  defineProperty(this, '__', {\n\t    isAnonymous: isAnonymous,\n\t    instAttrs: instAttrs,\n\t    innerHTML: innerHTML,\n\t    tagName: tagName,\n\t    index: index,\n\t    isLoop: isLoop,\n\t    isInline: isInline,\n\t    // tags having event listeners\n\t    // it would be better to use weak maps here but we can not introduce breaking changes now\n\t    listeners: [],\n\t    // these vars will be needed only for the virtual tags\n\t    virts: [],\n\t    tail: null,\n\t    head: null,\n\t    parent: null,\n\t    item: null\n\t  });\n\t\n\t  // create a unique id to this tag\n\t  // it could be handy to use it also to improve the virtual dom rendering speed\n\t  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n\t  defineProperty(this, 'root', root);\n\t  extend(this, { opts: opts }, item);\n\t  // protect the \"tags\" and \"refs\" property from being overridden\n\t  defineProperty(this, 'parent', parent || null);\n\t  defineProperty(this, 'tags', {});\n\t  defineProperty(this, 'refs', {});\n\t\n\t  if (isInline || isLoop && isAnonymous) {\n\t    dom = root;\n\t  } else {\n\t    if (!isVirtual) { root.innerHTML = ''; }\n\t    dom = mkdom(impl.tmpl, innerHTML, isSvg(root));\n\t  }\n\t\n\t  /**\n\t   * Update the tag expressions and options\n\t   * @param   { * }  data - data we want to use to extend the tag properties\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'update', function tagUpdate(data) {\n\t    var nextOpts = {},\n\t      canTrigger = this.isMounted && !skipAnonymous;\n\t\n\t    // make sure the data passed will not override\n\t    // the component core methods\n\t    data = cleanUpData(data);\n\t    extend(this, data);\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\t\n\t    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n\t      return this\n\t    }\n\t\n\t    // inherit properties from the parent, but only for isAnonymous tags\n\t    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n\t    extend(opts, nextOpts);\n\t    if (canTrigger) { this.trigger('update', data); }\n\t    updateAllExpressions.call(this, expressions);\n\t    if (canTrigger) { this.trigger('updated'); }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Add a mixin to this tag\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mixin', function tagMixin() {\n\t    var this$1 = this;\n\t\n\t    each(arguments, function (mix) {\n\t      var instance, obj;\n\t      var props = [];\n\t\n\t      // properties blacklisted and will not be bound to the tag instance\n\t      var propsBlacklist = ['init', '__proto__'];\n\t\n\t      mix = isString(mix) ? mixin$1(mix) : mix;\n\t\n\t      // check if the mixin is a function\n\t      if (isFunction(mix)) {\n\t        // create the new mixin instance\n\t        instance = new mix();\n\t      } else { instance = mix; }\n\t\n\t      var proto = Object.getPrototypeOf(instance);\n\t\n\t      // build multilevel prototype inheritance chain property list\n\t      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n\t      while (obj = Object.getPrototypeOf(obj || instance))\n\t\n\t      // loop the keys in the function prototype or the all object keys\n\t      each(props, function (key) {\n\t        // bind methods to this\n\t        // allow mixins to override other properties/parent mixins\n\t        if (!contains(propsBlacklist, key)) {\n\t          // check for getters/setters\n\t          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n\t          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\t\n\t          // apply method only if it does not already exist on the instance\n\t          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n\t            Object.defineProperty(this$1, key, descriptor);\n\t          } else {\n\t            this$1[key] = isFunction(instance[key]) ?\n\t              instance[key].bind(this$1) :\n\t              instance[key];\n\t          }\n\t        }\n\t      });\n\t\n\t      // init method will be called automatically\n\t      if (instance.init)\n\t        { instance.init.bind(this$1)(); }\n\t    });\n\t    return this\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Mount the current tag instance\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'mount', function tagMount() {\n\t    var this$1 = this;\n\t\n\t    root._tag = this; // keep a reference to the tag just created\n\t\n\t    // Read all the attrs on this instance. This give us the info we need for updateOpts\n\t    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n\t      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n\t      attr.expr = expr;\n\t      instAttrs.push(attr);\n\t    }]);\n\t\n\t    // update the root adding custom attributes coming from the compiler\n\t    implAttrs = [];\n\t    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n\t    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n\t      if (expr) { expressions.push(expr); }\n\t      else { setAttr(root, attr.name, attr.value); }\n\t    }]);\n\t\n\t    // initialiation\n\t    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\t\n\t    // add global mixins\n\t    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\t\n\t    if (globalMixin && !skipAnonymous) {\n\t      for (var i in globalMixin) {\n\t        if (globalMixin.hasOwnProperty(i)) {\n\t          this$1.mixin(globalMixin[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (impl.fn) { impl.fn.call(this, opts); }\n\t\n\t    if (!skipAnonymous) { this.trigger('before-mount'); }\n\t\n\t    // parse layout after init. fn may calculate args for nested custom tags\n\t    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\t\n\t    this.update(item);\n\t\n\t    if (!isAnonymous && !isInline) {\n\t      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n\t    }\n\t\n\t    defineProperty(this, 'root', root);\n\t    defineProperty(this, 'isMounted', true);\n\t\n\t    if (skipAnonymous) { return }\n\t\n\t    // if it's not a child tag we can trigger its mount event\n\t    if (!this.parent) {\n\t      this.trigger('mount');\n\t    }\n\t    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n\t    else {\n\t      var p = getImmediateCustomParentTag(this.parent);\n\t      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n\t        this$1.trigger('mount');\n\t      });\n\t    }\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t\n\t  /**\n\t   * Unmount the tag instance\n\t   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n\t   * @returns { Tag } the current tag instance\n\t   */\n\t  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n\t    var this$1 = this;\n\t\n\t    var el = this.root,\n\t      p = el.parentNode,\n\t      ptag,\n\t      tagIndex = __TAGS_CACHE.indexOf(this);\n\t\n\t    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\t\n\t    // clear all attributes coming from the mounted tag\n\t    walkAttrs(impl.attrs, function (name) {\n\t      if (startsWith(name, ATTRS_PREFIX))\n\t        { name = name.slice(ATTRS_PREFIX.length); }\n\t\n\t      remAttr(root, name);\n\t    });\n\t\n\t    // remove all the event listeners\n\t    this.__.listeners.forEach(function (dom) {\n\t      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n\t        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n\t      });\n\t    });\n\t\n\t    // remove this tag instance from the global virtualDom variable\n\t    if (tagIndex !== -1)\n\t      { __TAGS_CACHE.splice(tagIndex, 1); }\n\t\n\t    if (p || isVirtual) {\n\t      if (parent) {\n\t        ptag = getImmediateCustomParentTag(parent);\n\t\n\t        if (isVirtual) {\n\t          Object.keys(this.tags).forEach(function (tagName) {\n\t            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n\t          });\n\t        } else {\n\t          arrayishRemove(ptag.tags, tagName, this);\n\t          // remove from _parent too\n\t          if(parent !== ptag) {\n\t            arrayishRemove(parent.tags, tagName, this);\n\t          }\n\t        }\n\t      } else {\n\t        // remove the tag contents\n\t        setInnerHTML(el, '');\n\t      }\n\t\n\t      if (p && !mustKeepRoot) { p.removeChild(el); }\n\t    }\n\t\n\t    if (this.__.virts) {\n\t      each(this.__.virts, function (v) {\n\t        if (v.parentNode) { v.parentNode.removeChild(v); }\n\t      });\n\t    }\n\t\n\t    // allow expressions to unmount themselves\n\t    unmountAll(expressions);\n\t    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\t\n\t    // custom internal unmount function to avoid relying on the observable\n\t    if (this.__.onUnmount) { this.__.onUnmount(); }\n\t\n\t    if (!skipAnonymous) {\n\t      this.trigger('unmount');\n\t      this.off('*');\n\t    }\n\t\n\t    defineProperty(this, 'isMounted', false);\n\t\n\t    delete this.root._tag;\n\t\n\t    return this\n\t\n\t  }.bind(this));\n\t}\n\t\n\t/**\n\t * Detect the tag implementation by a DOM node\n\t * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n\t * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n\t */\n\tfunction getTag(dom) {\n\t  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n\t    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n\t}\n\t\n\t/**\n\t * Inherit properties from a target tag instance\n\t * @this Tag\n\t * @param   { Tag } target - tag where we will inherit properties\n\t * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n\t */\n\tfunction inheritFrom(target, propsInSyncWithParent) {\n\t  var this$1 = this;\n\t\n\t  each(Object.keys(target), function (k) {\n\t    // some properties must be always in sync with the parent tag\n\t    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\t\n\t    if (isUndefined(this$1[k]) || mustSync) {\n\t      // track the property to keep in sync\n\t      // so we can keep it updated\n\t      if (!mustSync) { propsInSyncWithParent.push(k); }\n\t      this$1[k] = target[k];\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Move the position of a custom tag in its parent tag\n\t * @this Tag\n\t * @param   { String } tagName - key where the tag was stored\n\t * @param   { Number } newPos - index where the new tag will be stored\n\t */\n\tfunction moveChildTag(tagName, newPos) {\n\t  var parent = this.parent,\n\t    tags;\n\t  // no parent no move\n\t  if (!parent) { return }\n\t\n\t  tags = parent.tags[tagName];\n\t\n\t  if (isArray(tags))\n\t    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n\t  else { arrayishAdd(parent.tags, tagName, this); }\n\t}\n\t\n\t/**\n\t * Create a new child tag including it correctly into its parent\n\t * @param   { Object } child - child tag implementation\n\t * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n\t * @param   { String } innerHTML - inner html of the child node\n\t * @param   { Object } parent - instance of the parent tag including the child custom tag\n\t * @returns { Object } instance of the new child tag just created\n\t */\n\tfunction initChildTag(child, opts, innerHTML, parent) {\n\t  var tag = new Tag$1(child, opts, innerHTML),\n\t    tagName = opts.tagName || getTagName(opts.root, true),\n\t    ptag = getImmediateCustomParentTag(parent);\n\t  // fix for the parent attribute in the looped elements\n\t  defineProperty(tag, 'parent', ptag);\n\t  // store the real parent tag\n\t  // in some cases this could be different from the custom parent tag\n\t  // for example in nested loops\n\t  tag.__.parent = parent;\n\t\n\t  // add this tag to the custom parent tag\n\t  arrayishAdd(ptag.tags, tagName, tag);\n\t\n\t  // and also to the real parent tag\n\t  if (ptag !== parent)\n\t    { arrayishAdd(parent.tags, tagName, tag); }\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * Loop backward all the parents tree to detect the first custom parent tag\n\t * @param   { Object } tag - a Tag instance\n\t * @returns { Object } the instance of the first custom parent tag found\n\t */\n\tfunction getImmediateCustomParentTag(tag) {\n\t  var ptag = tag;\n\t  while (ptag.__.isAnonymous) {\n\t    if (!ptag.parent) { break }\n\t    ptag = ptag.parent;\n\t  }\n\t  return ptag\n\t}\n\t\n\t/**\n\t * Trigger the unmount method on all the expressions\n\t * @param   { Array } expressions - DOM expressions\n\t */\n\tfunction unmountAll(expressions) {\n\t  each(expressions, function(expr) {\n\t    if (expr instanceof Tag$1) { expr.unmount(true); }\n\t    else if (expr.tagName) { expr.tag.unmount(true); }\n\t    else if (expr.unmount) { expr.unmount(); }\n\t  });\n\t}\n\t\n\t/**\n\t * Get the tag name of any DOM node\n\t * @param   { Object } dom - DOM node we want to parse\n\t * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n\t * @returns { String } name to identify this dom node in riot\n\t */\n\tfunction getTagName(dom, skipDataIs) {\n\t  var child = getTag(dom),\n\t    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n\t  return namedTag && !tmpl.hasExpr(namedTag) ?\n\t                namedTag :\n\t              child ? child.name : dom.tagName.toLowerCase()\n\t}\n\t\n\t/**\n\t * With this function we avoid that the internal Tag methods get overridden\n\t * @param   { Object } data - options we want to use to extend the tag instance\n\t * @returns { Object } clean object without containing the riot internal reserved words\n\t */\n\tfunction cleanUpData(data) {\n\t  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n\t    { return data }\n\t\n\t  var o = {};\n\t  for (var key in data) {\n\t    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n\t  }\n\t  return o\n\t}\n\t\n\t/**\n\t * Set the property of an object for a given key. If something already\n\t * exists there, then it becomes an array containing both the old and new value.\n\t * @param { Object } obj - object on which to set the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be set\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t * @param { Number } index - add the new item in a certain array position\n\t */\n\tfunction arrayishAdd(obj, key, value, ensureArray, index) {\n\t  var dest = obj[key];\n\t  var isArr = isArray(dest);\n\t  var hasIndex = !isUndefined(index);\n\t\n\t  if (dest && dest === value) { return }\n\t\n\t  // if the key was never set, set it once\n\t  if (!dest && ensureArray) { obj[key] = [value]; }\n\t  else if (!dest) { obj[key] = value; }\n\t  // if it was an array and not yet set\n\t  else {\n\t    if (isArr) {\n\t      var oldIndex = dest.indexOf(value);\n\t      // this item never changed its position\n\t      if (oldIndex === index) { return }\n\t      // remove the item from its old position\n\t      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n\t      // move or add the item\n\t      if (hasIndex) {\n\t        dest.splice(index, 0, value);\n\t      } else {\n\t        dest.push(value);\n\t      }\n\t    } else { obj[key] = [dest, value]; }\n\t  }\n\t}\n\t\n\t/**\n\t * Removes an item from an object at a given key. If the key points to an array,\n\t * then the item is just removed from the array.\n\t * @param { Object } obj - object on which to remove the property\n\t * @param { String } key - property name\n\t * @param { Object } value - the value of the property to be removed\n\t * @param { Boolean } ensureArray - ensure that the property remains an array\n\t*/\n\tfunction arrayishRemove(obj, key, value, ensureArray) {\n\t  if (isArray(obj[key])) {\n\t    var index = obj[key].indexOf(value);\n\t    if (index !== -1) { obj[key].splice(index, 1); }\n\t    if (!obj[key].length) { delete obj[key]; }\n\t    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n\t  } else\n\t    { delete obj[key]; } // otherwise just delete the key\n\t}\n\t\n\t/**\n\t * Mount a tag creating new Tag instance\n\t * @param   { Object } root - dom node where the tag will be mounted\n\t * @param   { String } tagName - name of the riot tag we want to mount\n\t * @param   { Object } opts - options to pass to the Tag instance\n\t * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n\t * @returns { Tag } a new Tag instance\n\t */\n\tfunction mountTo(root, tagName, opts, ctx) {\n\t  var impl = __TAG_IMPL[tagName],\n\t    implClass = __TAG_IMPL[tagName].class,\n\t    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n\t    // cache the inner HTML to fix #855\n\t    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\t\n\t  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\t\n\t  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\t\n\t  if (tag && tag.mount) {\n\t    tag.mount(true);\n\t    // add this tag to the virtualDom variable\n\t    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n\t  }\n\t\n\t  return tag\n\t}\n\t\n\t/**\n\t * makes a tag virtual and replaces a reference in the dom\n\t * @this Tag\n\t * @param { tag } the tag to make virtual\n\t * @param { ref } the dom reference location\n\t */\n\tfunction makeReplaceVirtual(tag, ref) {\n\t  var frag = createFrag();\n\t  makeVirtual.call(tag, frag);\n\t  ref.parentNode.replaceChild(frag, ref);\n\t}\n\t\n\t/**\n\t * Adds the elements for a virtual tag\n\t * @this Tag\n\t * @param { Node } src - the node that will do the inserting or appending\n\t * @param { Tag } target - only if inserting, insert before this tag's first child\n\t */\n\tfunction makeVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var head = createDOMPlaceholder(),\n\t    tail = createDOMPlaceholder(),\n\t    frag = createFrag(),\n\t    sib, el;\n\t\n\t  this.root.insertBefore(head, this.root.firstChild);\n\t  this.root.appendChild(tail);\n\t\n\t  this.__.head = el = head;\n\t  this.__.tail = tail;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    this$1.__.virts.push(el); // hold for unmounting\n\t    el = sib;\n\t  }\n\t\n\t  if (target)\n\t    { src.insertBefore(frag, target.__.head); }\n\t  else\n\t    { src.appendChild(frag); }\n\t}\n\t\n\t/**\n\t * Move virtual tag and all child nodes\n\t * @this Tag\n\t * @param { Node } src  - the node that will do the inserting\n\t * @param { Tag } target - insert before this tag's first child\n\t */\n\tfunction moveVirtual(src, target) {\n\t  var this$1 = this;\n\t\n\t  var el = this.__.head,\n\t    frag = createFrag(),\n\t    sib;\n\t\n\t  while (el) {\n\t    sib = el.nextSibling;\n\t    frag.appendChild(el);\n\t    el = sib;\n\t    if (el === this$1.__.tail) {\n\t      frag.appendChild(el);\n\t      src.insertBefore(frag, target.__.head);\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Get selectors for tags\n\t * @param   { Array } tags - tag names to select\n\t * @returns { String } selector\n\t */\n\tfunction selectTags(tags) {\n\t  // select all tags\n\t  if (!tags) {\n\t    var keys = Object.keys(__TAG_IMPL);\n\t    return keys + selectTags(keys)\n\t  }\n\t\n\t  return tags\n\t    .filter(function (t) { return !/[^-\\w]/.test(t); })\n\t    .reduce(function (list, t) {\n\t      var name = t.trim().toLowerCase();\n\t      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n\t    }, '')\n\t}\n\t\n\t\n\tvar tags = Object.freeze({\n\t\tgetTag: getTag,\n\t\tinheritFrom: inheritFrom,\n\t\tmoveChildTag: moveChildTag,\n\t\tinitChildTag: initChildTag,\n\t\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\t\tunmountAll: unmountAll,\n\t\tgetTagName: getTagName,\n\t\tcleanUpData: cleanUpData,\n\t\tarrayishAdd: arrayishAdd,\n\t\tarrayishRemove: arrayishRemove,\n\t\tmountTo: mountTo,\n\t\tmakeReplaceVirtual: makeReplaceVirtual,\n\t\tmakeVirtual: makeVirtual,\n\t\tmoveVirtual: moveVirtual,\n\t\tselectTags: selectTags\n\t});\n\t\n\t/**\n\t * Riot public api\n\t */\n\tvar settings = settings$1;\n\tvar util = {\n\t  tmpl: tmpl,\n\t  brackets: brackets,\n\t  styleManager: styleManager,\n\t  vdom: __TAGS_CACHE,\n\t  styleNode: styleManager.styleNode,\n\t  // export the riot internal utils as well\n\t  dom: dom,\n\t  check: check,\n\t  misc: misc,\n\t  tags: tags\n\t};\n\t\n\t// export the core props/methods\n\tvar Tag$$1 = Tag$2;\n\tvar tag$$1 = tag$1;\n\tvar tag2$$1 = tag2$1;\n\tvar mount$$1 = mount$1;\n\tvar mixin$$1 = mixin$1;\n\tvar update$$1 = update$1;\n\tvar unregister$$1 = unregister$1;\n\tvar version$$1 = version$1;\n\tvar observable = observable$1;\n\t\n\tvar riot$1 = extend({}, core, {\n\t  observable: observable$1,\n\t  settings: settings,\n\t  util: util,\n\t});\n\t\n\texports.settings = settings;\n\texports.util = util;\n\texports.Tag = Tag$$1;\n\texports.tag = tag$$1;\n\texports.tag2 = tag2$$1;\n\texports.mount = mount$$1;\n\texports.mixin = mixin$$1;\n\texports.update = update$$1;\n\texports.unregister = unregister$$1;\n\texports.version = version$$1;\n\texports.observable = observable;\n\texports['default'] = riot$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d3Scale = __webpack_require__(27);\n\t\n\tObject.defineProperty(exports, 'scaleQuantile', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Scale.scaleQuantile;\n\t  }\n\t});\n\t\n\tvar _d3Selection = __webpack_require__(28);\n\t\n\tObject.defineProperty(exports, 'select', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Selection.select;\n\t  }\n\t});\n\t\n\tvar _d3Dsv = __webpack_require__(24);\n\t\n\tObject.defineProperty(exports, 'csvParse', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Dsv.csvParse;\n\t  }\n\t});\n\t\n\tvar _d3Geo = __webpack_require__(25);\n\t\n\tObject.defineProperty(exports, 'geoPath', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoPath;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'geoMercator', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Geo.geoMercator;\n\t  }\n\t});\n\t\n\tvar _d3Format = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'formatLocale', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _d3Format.formatLocale;\n\t  }\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _topojson = __webpack_require__(34);\n\t\n\tvar topojson = _interopRequireWildcard(_topojson);\n\t\n\tvar _d2 = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d2);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar geoSrc = __webpack_require__(32);\n\tvar geoData = topojson.feature(geoSrc, geoSrc.objects['nrw-bb']);\n\t\n\tvar states = {\n\t  '05': ['Nordrhein-Westfalen', 'NRW'],\n\t  '12': ['Brandenburg', 'BB']\n\t};\n\tvar data = d3.csvParse(__webpack_require__(33)).map(function (d) {\n\t  var _states$d$state = _slicedToArray(states[d.state], 2),\n\t      state = _states$d$state[0],\n\t      stateShort = _states$d$state[1];\n\t\n\t  d.state = state;\n\t  d.stateShort = stateShort;\n\t  return d;\n\t});\n\tvar search = function search(str) {\n\t  return data.filter(function (d) {\n\t    return d.name.toLowerCase().indexOf(str) > -1;\n\t  });\n\t};\n\t\n\tgeoData.features.map(function (f) {\n\t  f.id = f.properties.AGS;\n\t  var _data = data.find(function (d) {\n\t    return d.ags === f.id;\n\t  });\n\t  var f_sum = _data.f_sum,\n\t      t_sum = _data.t_sum;\n\t\n\t  _data.fRatio = Math.round(f_sum / t_sum * 1000) / 10;\n\t  f.properties = _data;\n\t});\n\t\n\tmodule.exports = {\n\t  geoData: geoData,\n\t  data: data,\n\t  search: search\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// const colors = ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026']\n\tvar colors = ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'];\n\texports.default = d3.scaleQuantile().domain([650, 1100]).range(colors);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (hilighted) {\n\t  hilighted && hilighted.classed('-hilight', false);\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent(max) - exponent(step)) + 1;\n\t};\n\t\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar t0 = new Date;\n\tvar t1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0.setTime(+start), t1.setTime(+end);\n\t      floori(t0), floori(t1);\n\t      return Math.floor(count(t0, t1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _get_color = __webpack_require__(4);\n\t\n\tvar _get_color2 = _interopRequireDefault(_get_color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\triot.tag2('districts-map-legend', '<span class=\"{getClass(\\'annotation\\')}\">Dauer in Tagen</span> <ul class=\"{getClass(\\'list\\')}\"> <li each=\"{ticks}\" class=\"{parent.getClass(\\'list-item\\')}\"> {value}<span riot-style=\"background-color:{color};\"></span> </li> </ul>', '', 'class=\"{getClass()}\"', function (opts) {\n\t\n\t  this.ticks = _get_color2.default.quantiles().map(function (q) {\n\t    return {\n\t      color: (0, _get_color2.default)(q),\n\t      value: Math.round(q)\n\t    };\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _render_map = __webpack_require__(18);\n\t\n\tvar _render_map2 = _interopRequireDefault(_render_map);\n\t\n\tvar _hilight_path = __webpack_require__(17);\n\t\n\tvar _hilight_path2 = _interopRequireDefault(_hilight_path);\n\t\n\tvar _unhilight_path = __webpack_require__(5);\n\t\n\tvar _unhilight_path2 = _interopRequireDefault(_unhilight_path);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\triot.tag2('districts-map', '<h4 class=\"{getClass(\\'title\\')}\">{titles[opts.gender]}</h4> <span class=\"{getClass(\\'subtitle\\')}\">Durchschnittliche Dauer im Minijob</span> <div class=\"{getClass(\\'svg-wrapper\\')}\" id=\"svg-map-ew-{opts.gender}\"></div> <div class=\"{getClass(\\'labelling\\')}\"> <span class=\"{getClass(\\'labelling__name\\', \\'left\\')}\">Nordrhein-Westfalen</span> <span class=\"{getClass(\\'labelling__name\\', \\'right\\')}\">Brandenburg</span> </div>', '', 'class=\"{getClass()} {getClass()}--{opts.gender}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.titles = {\n\t    f: 'Frauen',\n\t    m: 'Männer'\n\t  };\n\t\n\t  this.on('mount', function () {\n\t    _this.selection = (0, _render_map2.default)({\n\t      element: d3.select('#svg-map-ew-' + _this.opts.gender),\n\t      gender: _this.opts.gender,\n\t      getClass: _this.getClass\n\t    });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.hilight, function (id) {\n\t    return _this.hilighted = (0, _hilight_path2.default)(_this.selection, id, _this.hilighted);\n\t  });\n\t  riot.control.on(riot.EVT.unhilight, function () {\n\t    return (0, _unhilight_path2.default)(_this.hilighted);\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(11);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(13);\n\t\n\t__webpack_require__(15);\n\t\n\triot.tag2('cor-mj-nrwbb-map', '<map-searchbox-container ref=\"searchbox-container\"></map-searchbox-container> <map-infobox ref=\"infobox\"></map-infobox> <districts-map-legend ref=\"districts-map-legend\"></districts-map-legend> <section class=\"{getClass(\\'districts-map-container\\')}\"> <districts-map ref=\"districts-map\" gender=\"m\"></districts-map> <districts-map ref=\"districts-map\" gender=\"f\"></districts-map> </section>', '', 'class=\"{getClass(\\'app-container\\')}\"', function (opts) {});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\triot.tag2('map-infobox', '<button class=\"{getClass(\\'close-btn\\')}\" aria-label=\"Close\" onclick=\"{close}\"></button> <header class=\"{getClass(\\'header\\')}\"> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'state\\')}\">{data.state}</span> <h3 class=\"{getClass(\\'title\\')}\">{data.name}</h3> </section> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'population\\')}\"><strong>{_f(data.t_sum)}</strong>&nbsp;Minijobber</span> <span class=\"{getClass(\\'f-ratio\\')}\">davon <strong>{_f(data.fRatio)}&nbsp;%</strong>&nbsp;Frauen</span> </section> <span class=\"-clear-\"></span> </header> <section class=\"{getClass(\\'section\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Durchschnittliche Dauer</h4> <dl> <dt>{_f(data.f_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--f\">Frauen</dd> </dl> <dl> <dt>{_f(data.m_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--m\">Männer</dd> </dl> <dl> <dt>{_f(data.t_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--t\">Gesamt</dd> </dl> <span class=\"-clear-\"></span> </section> <section class=\"{getClass(\\'section\\')}\"> <p class=\"{getClass(\\'annotation\\')}\"><strong>{_f(data.f_o5_rel)}&nbsp;%</strong> der Frauen sind <strong>länger als fünf Jahre</strong> in einem Minijob.</p> </section> <span class=\"-clear-\"></span>', '', 'if=\"{data}\" class=\"{getClass()} {-visible: visible}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.visible = false;\n\t  this.data = {};\n\t\n\t  riot.control.on(riot.EVT.updateInfobox, function (data) {\n\t    _this.update({\n\t      data: data,\n\t      visible: true\n\t    });\n\t  });\n\t\n\t  riot.control.on(riot.EVT.hideInfobox, function () {\n\t    _this.update({ visible: false });\n\t  });\n\t\n\t  this.close = function () {\n\t    return _this.update({ visible: false });\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _data = __webpack_require__(3);\n\t\n\triot.tag2('items-selector', '<select onchange=\"{jumpTo}\"> <option each=\"{item, i in items}\" riot-value=\"{i}\">{item.stateShort} - {item.name}</option> </select>', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.items = _data.data.sort(function (a, b) {\n\t    return a.stateShort + a.name > b.stateShort + b.name ? 1 : -1;\n\t  });\n\t\n\t  this.jumpTo = function (e) {\n\t    var data = _this.items[e.target.value];\n\t    _this.parent.jumpTo(data);\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(14);\n\t\n\t__webpack_require__(16);\n\t\n\triot.tag2('map-searchbox-container', '<items-selector ref=\"selector\" if=\"{showSelector}\"></items-selector> <map-searchbox ref=\"searchbox\" if=\"{showSearchbox}\"></map-searchbox> <span class=\"{getClass(\\'selector-toggle\\')}\" onclick=\"{toggleSelector}\">{getToggleText()}</a>', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.showSelector = false;\n\t  this.showSearchbox = true;\n\t  this.toggleSelector = function () {\n\t    return _this.update({\n\t      showSelector: !_this.showSelector,\n\t      showSearchbox: !_this.showSearchbox\n\t    });\n\t  };\n\t\n\t  this.jumpTo = function (data) {\n\t    riot.control.trigger(riot.EVT.updateInfobox, data);\n\t    riot.control.trigger(riot.EVT.hilight, data.ags);\n\t  };\n\t\n\t  this.getToggleText = function () {\n\t    return _this.showSearchbox ? 'Wähle aus einer Liste aus' : 'Benutze die Suche';\n\t  };\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _data = __webpack_require__(3);\n\t\n\triot.tag2('map-searchbox', '<section class=\"{getClass(\\'input-wrapper\\')}\"> <input type=\"text\" oninput=\"{doSearch}\" class=\"{getClass(\\'input\\')}\" placeholder=\"Suche nach Deinem Landkreis...\"> </section> <ul if=\"{results.length}\" class=\"{getClass(\\'result-list\\')}\"> <li each=\"{results}\" class=\"{parent.getClass(\\'result-list__item\\')}\" onclick=\"{handleClick}\"> {name}<span>{state}</span> </li> </ul>', '', 'class=\"{getClass()}\"', function (opts) {\n\t  var _this = this;\n\t\n\t  this.results = [];\n\t\n\t  this.doSearch = function (e) {\n\t    riot.control.trigger(riot.EVT.hideInfobox);\n\t    var str = e.target.value.toLowerCase();\n\t    if (str.length > 2) _this.update({ results: (0, _data.search)(str) });else _this.clearResults();\n\t  };\n\t\n\t  this.handleClick = function (e) {\n\t    _this.clearResults();\n\t    _this.parent.jumpTo(e.item);\n\t  };\n\t\n\t  this.clearResults = function () {\n\t    _this.update({ results: [] });\n\t  };\n\t\n\t  riot.control.on(riot.EVT.clearResults, function () {\n\t    _this.clearResults();\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _unhilight_path = __webpack_require__(5);\n\t\n\tvar _unhilight_path2 = _interopRequireDefault(_unhilight_path);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (selection, id, hilighted) {\n\t  hilighted && (0, _unhilight_path2.default)(hilighted);\n\t  var path = selection.select(function (d) {\n\t    return d.id === id && this;\n\t  });\n\t  path.node().parentNode.appendChild(path.node());\n\t  path.classed('-hilight', true);\n\t  return path;\n\t};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _data = __webpack_require__(3);\n\t\n\tvar _get_color = __webpack_require__(4);\n\t\n\tvar _get_color2 = _interopRequireDefault(_get_color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (_ref) {\n\t  var element = _ref.element,\n\t      colorCol = _ref.colorCol,\n\t      getClass = _ref.getClass,\n\t      gender = _ref.gender;\n\t\n\t\n\t  var data = _data.geoData;\n\t  var path = d3.geoPath().projection(d3.geoMercator().fitSize([620, 300], data));\n\t\n\t  return element.append('svg').attr('class', getClass('svg')).attr('preserveAspectRatio', 'xMinYMin meet').attr('viewBox', '0 0 620 300').append('g').selectAll('path').data(data.features).enter().append('path').attr('class', getClass('path')).attr('d', path).attr('fill', function (d) {\n\t    return (0, _get_color2.default)(+d.properties[gender + '_mean']);\n\t  }).on('mouseover', function (d) {\n\t    riot.control.trigger(riot.EVT.hilight, d.id);\n\t    riot.control.trigger(riot.EVT.updateInfobox, d.properties);\n\t  });\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\t__webpack_require__(30);\n\t\n\t__webpack_require__(22);\n\t\n\tvar _class_name = __webpack_require__(20);\n\t\n\tvar _class_name2 = _interopRequireDefault(_class_name);\n\t\n\tvar _number_format = __webpack_require__(21);\n\t\n\tvar _number_format2 = _interopRequireDefault(_number_format);\n\t\n\t__webpack_require__(12);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (false) {\n\t  module.hot.accept();\n\t}\n\t\n\t// import 'babel-polyfill'\n\t\n\t\n\t// event bus\n\t\n\t\n\t// config\n\tvar config = __webpack_require__(31);\n\t\n\t// setup responsiveness\n\t// import {getWindowWidth, getActiveBreakpointFunc} from './responsive.js'\n\t// const getActiveBreakpoint = getActiveBreakpointFunc(config.global.breakpoints)\n\t// riot.STORE.breakpoint = getActiveBreakpoint(getWindowWidth())\n\t// riot.STORE.getActiveBreakpoint = getActiveBreakpoint\n\t\n\t// mixins\n\t\n\triot.mixin((0, _class_name2.default)(config.global.cssNamespace));\n\triot.mixin(_number_format2.default);\n\t\n\t// mount vizes\n\t\n\t// import '../components/duration-viz.tag'\n\t// import '../components/intro-viz.tag'\n\t\n\t\n\tvar mount = function mount(name) {\n\t  var selector = '[data-riot-mount=\"' + name + '\"]';\n\t  (0, _d.select)(selector).node() && riot.mount(selector, name);\n\t};\n\t\n\tmount('cor-mj-nrwbb-map');\n\t// mount('cor-mj-gender-durations')\n\t// mount('cor-mj-gender-intro')\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t// riot mixin for computing class names\n\t//\n\t// it takes a global `cssNamespace` on init that becomes prefix for all classes.\n\t//\n\t// components can have the `ref`-attribute set to append this (say, the name for this component) to the\n\t// global prefix\n\t//\n\t// components then have `this.getClass` that computes the acutal class name for something, e.g:\n\t//    global namespace is 'foo', components ref-attr is 'bar', then\n\t//      `getClass('title')` results in a class named 'foo-bar__title'\n\t//     if ref is undefined, `getClass('title')` becomes 'foo-title'\n\t\n\texports.default = function (cssNamespace) {\n\t  return {\n\t    getClass: function getClass(name, modifier) {\n\t      var ref = this.opts.ref;\n\t      var part = ref ? cssNamespace + \"-\" + ref : false;\n\t      var _class = name ? part ? part + \"__\" + name : cssNamespace + \"-\" + name : part;\n\t      return modifier ? _class + \" \" + _class + \"--\" + modifier : _class;\n\t    }\n\t  };\n\t};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar loc = d3.formatLocale({\n\t  thousands: '.',\n\t  decimal: ',',\n\t  grouping: [3]\n\t}); // riot mixin for formatting numbers to german locale\n\t\n\t\n\tvar format = loc.format(',');\n\t\n\tmodule.exports = { _f: function _f(val) {\n\t    return val && format(val);\n\t  } };\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(riot) {'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// store\n\t// const S = {\n\t//   breakpoint: null,\n\t//   getActiveBreakpoint: null\n\t// }\n\t\n\t// event names\n\tvar E = {\n\t  updateInfobox: 'uib',\n\t  hideInfobox: 'hib',\n\t  clearResults: 'cr',\n\t  // windowResize: 'wr',\n\t  // breakpointChanged: 'bc',\n\t  hilight: 'hi',\n\t  unhilight: 'uh',\n\t  showSelector: 'ss'\n\t\n\t  // event bus\n\t};var C = riot.observable();\n\t\n\t// trigger actual breakpoint\n\t// C.on(E.windowResize, width => {\n\t//   const bp = S.getActiveBreakpoint(width)\n\t//   if (S.breakpoint !== bp) {\n\t//     S.breakpoint = bp\n\t//     C.trigger(E.breakpointChanged, bp)\n\t//   }\n\t// })\n\t\n\t\n\t// make available\n\t// riot.STORE = S\n\triot.EVT = E;\n\triot.control = C;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map$$1, depth) {\n\t    if (++depth > keys.length) return map$$1;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n\t    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map();\n\t}\n\t\n\tfunction setMap(map$$1, key, value) {\n\t  map$$1.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\texports.nest = nest;\n\texports.set = set;\n\texports.map = map;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-dsv/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-geo/ Version 1.6.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Array) { 'use strict';\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add(temp, y, this.t);\n\t    add(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon = 1e-6;\n\tvar epsilon2 = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar quarterPi = pi / 4;\n\tvar tau = pi * 2;\n\t\n\tvar degrees = 180 / pi;\n\tvar radians = pi / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin(x / 2)) * x;\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos(phi),\n\t      sinPhi = sin(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos(adLambda),\n\t      v = k * sdLambda * sin(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n\t  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon) phi1 = 90;\n\t    else if (deltaSum < -epsilon) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range$$1, x) {\n\t  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos(phi);\n\t  x0 = cosPhi * cos(lambda);\n\t  y0 = cosPhi * sin(lambda);\n\t  z0 = sin(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos(phi),\n\t      x = cosPhi * cos(lambda),\n\t      y = cosPhi * sin(lambda),\n\t      z = sin(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos(deltaPhi),\n\t      sinDeltaPhi = sin(deltaPhi),\n\t      cosDeltaGamma = cos(deltaGamma),\n\t      sinDeltaGamma = sin(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos(phi),\n\t        x = cos(lambda) * cosPhi,\n\t        y = sin(lambda) * cosPhi,\n\t        z = sin(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos(radius),\n\t      sinRadius = sin(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant([0, 0]),\n\t      radius = constant(90),\n\t      precision = constant(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees, x[1] *= degrees;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link(subject);\n\t  link(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = d3Array.merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin(lambda), -cos(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin(phi0),\n\t        cosPhi0 = cos(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin(phi1),\n\t          cosPhi1 = cos(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop,\n\t  point: noop,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin(phi),\n\t      cosPhi = cos(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos(delta),\n\t      sinDelta = sin(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length(object);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n\t        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n\t      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos(y0),\n\t      sy0 = sin(y0),\n\t      cy1 = cos(y1),\n\t      sy1 = sin(y1),\n\t      kx0 = cy0 * cos(x0),\n\t      ky0 = cy0 * sin(x0),\n\t      kx1 = cy1 * cos(x1),\n\t      ky1 = cy1 * sin(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin(t *= d) / k,\n\t        A = sin(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees, y0 * degrees];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop,\n\t  lineEnd: noop,\n\t  polygonStart: noop,\n\t  polygonEnd: noop,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = d3Array.merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi, -halfPi]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi : -pi,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi) < epsilon) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon\n\t      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n\t          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi;\n\t    stream.point(-pi, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi, phi);\n\t    stream.point(pi, 0);\n\t    stream.point(pi, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi, -phi);\n\t    stream.point(-pi, 0);\n\t    stream.point(-pi, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon) {\n\t    var lambda = from[0] < to[0] ? pi : -pi;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos(lambda) * cos(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon;\n\t            point1[1] += epsilon;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi) < epsilon,\n\t        meridian = polar || delta < epsilon;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees, point[1] * degrees];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin(y)) / n;\n\t    return [r * sin(x *= n), r0 - r * cos(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos(x),\n\t        cy = cos(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin(x),\n\t      k * sin(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin(c),\n\t        cc = cos(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n\t    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin(n * x), f - r * cos(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos(y0),\n\t      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin(nx), g - gy * cos(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos(y), k = cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$1 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos(y) * sin(x), sin(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos(y), k = 1 + cos(x) * cy;\n\t  return [cy * sin(x) / k, sin(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate;\n\texports.geoLength = length;\n\texports.geoPath = index;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$1;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(7)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Color) { 'use strict';\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tvar rgb$1 = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = d3Color.rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar number = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = value(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar string = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: number(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar value = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant(b)\n\t      : (t === \"number\" ? number\n\t      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n\t      : b instanceof d3Color.color ? rgb$1\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : number)(a, b);\n\t};\n\t\n\tvar round = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar zoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\texports.interpolate = value;\n\texports.interpolateArray = array;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = number;\n\texports.interpolateObject = object;\n\texports.interpolateRound = round;\n\texports.interpolateString = string;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = zoom;\n\texports.interpolateRgb = rgb$1;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6), __webpack_require__(23), __webpack_require__(26), __webpack_require__(8), __webpack_require__(9), __webpack_require__(29), __webpack_require__(7)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\t\n\tvar array = Array.prototype;\n\t\n\tvar map$1 = array.map;\n\tvar slice = array.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range$$1) {\n\t  var index = d3Collection.map(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range$$1[(i - 1) % range$$1.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = d3Collection.map();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range$$1)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = d3Array.bisect(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = d3Interpolate.interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n\t      return d3Format.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return d3Format.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = d3Array.tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear() {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(d3Array.ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$1(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format$$1(\".%L\"),\n\t      formatSecond = format$$1(\":%S\"),\n\t      formatMinute = format$$1(\"%I:%M\"),\n\t      formatHour = format$$1(\"%I %p\"),\n\t      formatDay = format$$1(\"%a %d\"),\n\t      formatWeek = format$$1(\"%b %d\"),\n\t      formatMonth = format$$1(\"%B\"),\n\t      formatYear = format$$1(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second,  1,      durationSecond],\n\t    [second,  5,  5 * durationSecond],\n\t    [second, 15, 15 * durationSecond],\n\t    [second, 30, 30 * durationSecond],\n\t    [minute,  1,      durationMinute],\n\t    [minute,  5,  5 * durationMinute],\n\t    [minute, 15, 15 * durationMinute],\n\t    [minute, 30, 30 * durationMinute],\n\t    [  hour,  1,      durationHour  ],\n\t    [  hour,  3,  3 * durationHour  ],\n\t    [  hour,  6,  6 * durationHour  ],\n\t    [  hour, 12, 12 * durationHour  ],\n\t    [   day,  1,      durationDay   ],\n\t    [   day,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month,  1,      durationMonth ],\n\t    [ month,  3,  3 * durationMonth ],\n\t    [  year,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second(date) < date ? formatMillisecond\n\t        : minute(date) < date ? formatSecond\n\t        : hour(date) < date ? formatMinute\n\t        : day(date) < date ? formatHour\n\t        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = d3Array.tickStep(start, stop, interval);\n\t        interval = millisecond;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format$$1(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range$$1) {\n\t  var n = range$$1.length;\n\t  return function(t) {\n\t    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\texports.scaleBand = band;\n\texports.scalePoint = point;\n\texports.scaleIdentity = identity;\n\texports.scaleLinear = linear;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$1;\n\texports.scaleQuantize = quantize;\n\texports.scaleThreshold = threshold;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\texports.creator = creator;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(9)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Time) { 'use strict';\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\texports.timeFormatDefaultLocale = defaultLocale;\n\texports.timeFormatLocale = formatLocale;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"global\": {\n\t\t\t\"cssNamespace\": \"mjew\",\n\t\t\t\"breakpoints\": {\n\t\t\t\t\"small\": 600,\n\t\t\t\t\"medium\": 768,\n\t\t\t\t\"large\": 1280\n\t\t\t}\n\t\t}\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"type\": \"Topology\",\n\t\t\"arcs\": [\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7977,\n\t\t\t\t\t5401\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-151,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-138,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7660,\n\t\t\t\t\t4228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-148,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-155,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t172,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t171,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t130,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t157,\n\t\t\t\t\t131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10954,\n\t\t\t\t\t4423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10921,\n\t\t\t\t\t4435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10742,\n\t\t\t\t\t4343\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10711,\n\t\t\t\t\t4353\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-112,\n\t\t\t\t\t127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10531,\n\t\t\t\t\t4670\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10420,\n\t\t\t\t\t4685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9967,\n\t\t\t\t\t4498\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9886,\n\t\t\t\t\t4493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-145,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-170,\n\t\t\t\t\t217\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9479,\n\t\t\t\t\t5151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t145\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t102,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t123,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t166,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-147\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t-133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-189,\n\t\t\t\t\t-113\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9064,\n\t\t\t\t\t4957\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9089,\n\t\t\t\t\t4939\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9097,\n\t\t\t\t\t4924\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8796,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8809,\n\t\t\t\t\t3662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-152,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8625,\n\t\t\t\t\t3865\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8546,\n\t\t\t\t\t3902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8503,\n\t\t\t\t\t3965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8445,\n\t\t\t\t\t3957\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-225,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8121,\n\t\t\t\t\t3854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8103,\n\t\t\t\t\t3892\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7887,\n\t\t\t\t\t3987\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-165,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t7977,\n\t\t\t\t\t5401\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t134,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2147,\n\t\t\t\t\t4019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2326,\n\t\t\t\t\t3704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2343,\n\t\t\t\t\t3696\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2380,\n\t\t\t\t\t3679\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2402,\n\t\t\t\t\t3661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2478,\n\t\t\t\t\t3605\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2571,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2593,\n\t\t\t\t\t3521\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2587,\n\t\t\t\t\t3482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2590,\n\t\t\t\t\t3461\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t3397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-139\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2409,\n\t\t\t\t\t3252\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t3201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2317,\n\t\t\t\t\t3232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t98\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2269,\n\t\t\t\t\t3330\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2232,\n\t\t\t\t\t3344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2207,\n\t\t\t\t\t3319\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2064,\n\t\t\t\t\t3342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2010,\n\t\t\t\t\t3400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-120,\n\t\t\t\t\t100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1890,\n\t\t\t\t\t3500\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1872,\n\t\t\t\t\t3502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1853,\n\t\t\t\t\t3233\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1834,\n\t\t\t\t\t3236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1804,\n\t\t\t\t\t3269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1770,\n\t\t\t\t\t3275\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1725,\n\t\t\t\t\t3314\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1751,\n\t\t\t\t\t3510\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t3537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1677,\n\t\t\t\t\t3513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1672,\n\t\t\t\t\t3561\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t214\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1715,\n\t\t\t\t\t3775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1701,\n\t\t\t\t\t3899\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1764,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t3962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2056,\n\t\t\t\t\t3970\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11539,\n\t\t\t\t\t1832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11864,\n\t\t\t\t\t1830\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-170,\n\t\t\t\t\t-174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-147\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-149,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-164,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-181,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10986,\n\t\t\t\t\t564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10968,\n\t\t\t\t\t623\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10977,\n\t\t\t\t\t702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11030,\n\t\t\t\t\t720\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11060,\n\t\t\t\t\t772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11043,\n\t\t\t\t\t783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10891,\n\t\t\t\t\t899\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10885,\n\t\t\t\t\t943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t159\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10903,\n\t\t\t\t\t1102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10905,\n\t\t\t\t\t1232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10922,\n\t\t\t\t\t1265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10910,\n\t\t\t\t\t1308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10884,\n\t\t\t\t\t1340\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10851,\n\t\t\t\t\t1420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10864,\n\t\t\t\t\t1480\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10877,\n\t\t\t\t\t1468\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t126,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t176\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11449,\n\t\t\t\t\t1883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11524,\n\t\t\t\t\t1854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11216,\n\t\t\t\t\t1442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11218,\n\t\t\t\t\t1366\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-135,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t169\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11245,\n\t\t\t\t\t1438\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4603,\n\t\t\t\t\t4115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4698,\n\t\t\t\t\t4119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4719,\n\t\t\t\t\t4094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t165,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4932,\n\t\t\t\t\t3970\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4992,\n\t\t\t\t\t3981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5022,\n\t\t\t\t\t3945\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5033,\n\t\t\t\t\t3952\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5044,\n\t\t\t\t\t3932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5062,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5132,\n\t\t\t\t\t3406\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5112,\n\t\t\t\t\t3357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-153,\n\t\t\t\t\t-120\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4959,\n\t\t\t\t\t3237\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4932,\n\t\t\t\t\t3234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4934,\n\t\t\t\t\t3274\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4882,\n\t\t\t\t\t3273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4878,\n\t\t\t\t\t3267\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t3271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4563,\n\t\t\t\t\t3071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4501,\n\t\t\t\t\t3085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4370,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t140,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4175,\n\t\t\t\t\t3742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4133,\n\t\t\t\t\t3740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t110\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4157,\n\t\t\t\t\t3850\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t3937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t194,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4542,\n\t\t\t\t\t4139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10616,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10769,\n\t\t\t\t\t1497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10851,\n\t\t\t\t\t1420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10910,\n\t\t\t\t\t1308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10905,\n\t\t\t\t\t1232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10885,\n\t\t\t\t\t943\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11043,\n\t\t\t\t\t783\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11060,\n\t\t\t\t\t772\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10977,\n\t\t\t\t\t702\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10986,\n\t\t\t\t\t564\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-198,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10195,\n\t\t\t\t\t216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10253,\n\t\t\t\t\t283\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10243,\n\t\t\t\t\t342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t152\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10539,\n\t\t\t\t\t776\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10521,\n\t\t\t\t\t866\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10388,\n\t\t\t\t\t1097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10422,\n\t\t\t\t\t1102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10463,\n\t\t\t\t\t1091\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10475,\n\t\t\t\t\t1155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10426,\n\t\t\t\t\t1200\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10416,\n\t\t\t\t\t1239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10462,\n\t\t\t\t\t1399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10438,\n\t\t\t\t\t1413\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10469,\n\t\t\t\t\t1475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10592,\n\t\t\t\t\t1548\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2093,\n\t\t\t\t\t1117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2135,\n\t\t\t\t\t1111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2162,\n\t\t\t\t\t1100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2179,\n\t\t\t\t\t1071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2158,\n\t\t\t\t\t1006\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2112,\n\t\t\t\t\t980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2182,\n\t\t\t\t\t834\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2133,\n\t\t\t\t\t841\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1881,\n\t\t\t\t\t848\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1898,\n\t\t\t\t\t867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1944,\n\t\t\t\t\t1166\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2011,\n\t\t\t\t\t1143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2042,\n\t\t\t\t\t1173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2405,\n\t\t\t\t\t2440\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2414,\n\t\t\t\t\t2435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2450,\n\t\t\t\t\t2457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2457,\n\t\t\t\t\t2443\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2475,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2496,\n\t\t\t\t\t2434\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2497,\n\t\t\t\t\t2387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2514,\n\t\t\t\t\t2386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2514,\n\t\t\t\t\t2406\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t2372\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t2342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2535,\n\t\t\t\t\t2295\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2545,\n\t\t\t\t\t2277\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t107,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3009,\n\t\t\t\t\t1984\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2990,\n\t\t\t\t\t1974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-96\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3127,\n\t\t\t\t\t1635\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2893,\n\t\t\t\t\t1329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2564,\n\t\t\t\t\t1643\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2470,\n\t\t\t\t\t1674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2302,\n\t\t\t\t\t1707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2287,\n\t\t\t\t\t1821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2317,\n\t\t\t\t\t2001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2286,\n\t\t\t\t\t2011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2285,\n\t\t\t\t\t2094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t2196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2325,\n\t\t\t\t\t2240\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2340,\n\t\t\t\t\t2300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2326,\n\t\t\t\t\t2294\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2325,\n\t\t\t\t\t2318\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2328,\n\t\t\t\t\t2357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2350,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2340,\n\t\t\t\t\t2425\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2339,\n\t\t\t\t\t2435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2363,\n\t\t\t\t\t2449\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8631,\n\t\t\t\t\t3280\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8610,\n\t\t\t\t\t3213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8618,\n\t\t\t\t\t3238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8665,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8720,\n\t\t\t\t\t3067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8905,\n\t\t\t\t\t3034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8998,\n\t\t\t\t\t3013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-139\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t204,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9323,\n\t\t\t\t\t2793\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9593,\n\t\t\t\t\t2896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9565,\n\t\t\t\t\t2845\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9532,\n\t\t\t\t\t2778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9446,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9380,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9317,\n\t\t\t\t\t2624\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9316,\n\t\t\t\t\t2598\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-140,\n\t\t\t\t\t-115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9033,\n\t\t\t\t\t1883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9020,\n\t\t\t\t\t1878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-123,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8705,\n\t\t\t\t\t1755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8036,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8057,\n\t\t\t\t\t2983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t141,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t123\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8384,\n\t\t\t\t\t3022\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8389,\n\t\t\t\t\t3048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8383,\n\t\t\t\t\t3072\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8425,\n\t\t\t\t\t3110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8467,\n\t\t\t\t\t3121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8484,\n\t\t\t\t\t3136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8545,\n\t\t\t\t\t3161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8578,\n\t\t\t\t\t3185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8535,\n\t\t\t\t\t3172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-115,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8420,\n\t\t\t\t\t3115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8372,\n\t\t\t\t\t3040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8145,\n\t\t\t\t\t2978\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8141,\n\t\t\t\t\t3012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8135,\n\t\t\t\t\t3032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8146,\n\t\t\t\t\t3056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8162,\n\t\t\t\t\t3068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8168,\n\t\t\t\t\t3092\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8181,\n\t\t\t\t\t3112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t167\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t188,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4882,\n\t\t\t\t\t3273\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4932,\n\t\t\t\t\t3234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5002,\n\t\t\t\t\t3188\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5062,\n\t\t\t\t\t3163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-131,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-79,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t145,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-109,\n\t\t\t\t\t-120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-176,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4372,\n\t\t\t\t\t2063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4300,\n\t\t\t\t\t2148\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4269,\n\t\t\t\t\t2192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4214,\n\t\t\t\t\t2151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4077,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3929,\n\t\t\t\t\t2066\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3864,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3843,\n\t\t\t\t\t2118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3812,\n\t\t\t\t\t2125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3545,\n\t\t\t\t\t2430\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3518,\n\t\t\t\t\t2432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3504,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3376,\n\t\t\t\t\t2437\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3362,\n\t\t\t\t\t2453\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t129\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3356,\n\t\t\t\t\t2669\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3338,\n\t\t\t\t\t2724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3320,\n\t\t\t\t\t2730\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3295,\n\t\t\t\t\t2846\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3292,\n\t\t\t\t\t2882\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3295,\n\t\t\t\t\t2921\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t112\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3250,\n\t\t\t\t\t3033\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t3040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3290,\n\t\t\t\t\t3099\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3337,\n\t\t\t\t\t3105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t131,\n\t\t\t\t\t-108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t201,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t207,\n\t\t\t\t\t156\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4501,\n\t\t\t\t\t3085\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4855,\n\t\t\t\t\t3271\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3434,\n\t\t\t\t\t3743\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3520,\n\t\t\t\t\t3734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3575,\n\t\t\t\t\t3718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-100\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3808,\n\t\t\t\t\t3608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3841,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3884,\n\t\t\t\t\t3579\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3957,\n\t\t\t\t\t3625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3983,\n\t\t\t\t\t3741\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4012,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4105,\n\t\t\t\t\t3735\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3337,\n\t\t\t\t\t3105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3266,\n\t\t\t\t\t3040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3244,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3228,\n\t\t\t\t\t3047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3208,\n\t\t\t\t\t3086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3227,\n\t\t\t\t\t3105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3200,\n\t\t\t\t\t3250\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3191,\n\t\t\t\t\t3358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3263,\n\t\t\t\t\t3400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t146\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3430,\n\t\t\t\t\t3665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3410,\n\t\t\t\t\t3710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2669,\n\t\t\t\t\t2921\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t130,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2799,\n\t\t\t\t\t2847\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2796,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2807,\n\t\t\t\t\t2707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2735,\n\t\t\t\t\t2518\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2683,\n\t\t\t\t\t2505\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2669,\n\t\t\t\t\t2525\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2626,\n\t\t\t\t\t2546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2531,\n\t\t\t\t\t2655\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2527,\n\t\t\t\t\t2685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2484,\n\t\t\t\t\t2673\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2476,\n\t\t\t\t\t2711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2465,\n\t\t\t\t\t2703\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2482,\n\t\t\t\t\t2749\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2502,\n\t\t\t\t\t2817\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t2847\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2550,\n\t\t\t\t\t2856\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2580,\n\t\t\t\t\t2897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3208,\n\t\t\t\t\t3086\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3244,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3295,\n\t\t\t\t\t2921\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3295,\n\t\t\t\t\t2846\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-116\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3338,\n\t\t\t\t\t2724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3362,\n\t\t\t\t\t2453\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3384,\n\t\t\t\t\t2420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3177,\n\t\t\t\t\t2207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3167,\n\t\t\t\t\t2179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3186,\n\t\t\t\t\t2007\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3147,\n\t\t\t\t\t1991\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3126,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-59,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3067,\n\t\t\t\t\t1981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2545,\n\t\t\t\t\t2277\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t2342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2578,\n\t\t\t\t\t2411\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2675,\n\t\t\t\t\t2503\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2807,\n\t\t\t\t\t2707\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t84\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2799,\n\t\t\t\t\t2847\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2840,\n\t\t\t\t\t2834\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2847,\n\t\t\t\t\t2923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2841,\n\t\t\t\t\t3001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2877,\n\t\t\t\t\t3017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2910,\n\t\t\t\t\t3051\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3029,\n\t\t\t\t\t3068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t150,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3179,\n\t\t\t\t\t3069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11161,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11185,\n\t\t\t\t\t2965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11180,\n\t\t\t\t\t2923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11234,\n\t\t\t\t\t2849\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11291,\n\t\t\t\t\t2827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11413,\n\t\t\t\t\t2827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11380,\n\t\t\t\t\t2610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11457,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t137,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11661,\n\t\t\t\t\t2589\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11698,\n\t\t\t\t\t2538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11703,\n\t\t\t\t\t2550\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t146,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11539,\n\t\t\t\t\t1832\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11449,\n\t\t\t\t\t1883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11375,\n\t\t\t\t\t1956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11260,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11218,\n\t\t\t\t\t1964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t81\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11098,\n\t\t\t\t\t2036\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11124,\n\t\t\t\t\t2047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t-11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-199,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-159,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10472,\n\t\t\t\t\t2544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10476,\n\t\t\t\t\t2587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10235,\n\t\t\t\t\t2863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t164\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-141,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10174,\n\t\t\t\t\t3099\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t99,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t149,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t136,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1486,\n\t\t\t\t\t2723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1500,\n\t\t\t\t\t2737\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1518,\n\t\t\t\t\t2734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-190\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t170,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1715,\n\t\t\t\t\t2157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1671,\n\t\t\t\t\t2124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1601,\n\t\t\t\t\t2129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1587,\n\t\t\t\t\t2228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1507,\n\t\t\t\t\t2178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t181\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1390,\n\t\t\t\t\t2484\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1370,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1413,\n\t\t\t\t\t2737\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2352,\n\t\t\t\t\t3205\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2398,\n\t\t\t\t\t3099\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2396,\n\t\t\t\t\t3024\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2307,\n\t\t\t\t\t3020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2296,\n\t\t\t\t\t2982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2260,\n\t\t\t\t\t2932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2210,\n\t\t\t\t\t2902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-137,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2073,\n\t\t\t\t\t2936\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2038,\n\t\t\t\t\t2966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2035,\n\t\t\t\t\t3022\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2023,\n\t\t\t\t\t3067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2007,\n\t\t\t\t\t3093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2062,\n\t\t\t\t\t3119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2085,\n\t\t\t\t\t3153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2114,\n\t\t\t\t\t3156\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2152,\n\t\t\t\t\t3170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2176,\n\t\t\t\t\t3204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2209,\n\t\t\t\t\t3192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2248,\n\t\t\t\t\t3207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2257,\n\t\t\t\t\t3220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2525,\n\t\t\t\t\t3380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2860,\n\t\t\t\t\t3285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2874,\n\t\t\t\t\t3268\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-132\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2669,\n\t\t\t\t\t2921\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2598,\n\t\t\t\t\t2916\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2604,\n\t\t\t\t\t2960\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2530,\n\t\t\t\t\t2962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t111\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2416,\n\t\t\t\t\t3101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2352,\n\t\t\t\t\t3205\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2386,\n\t\t\t\t\t3201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2491,\n\t\t\t\t\t3397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2521,\n\t\t\t\t\t3415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2533,\n\t\t\t\t\t3401\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t898,\n\t\t\t\t\t4011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t953,\n\t\t\t\t\t3971\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1002,\n\t\t\t\t\t3990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-150\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t954,\n\t\t\t\t\t3693\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t879,\n\t\t\t\t\t3829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-134\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t-89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1028,\n\t\t\t\t\t3057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1053,\n\t\t\t\t\t2983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1033,\n\t\t\t\t\t2925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t620,\n\t\t\t\t\t2770\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t567,\n\t\t\t\t\t2777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-90,\n\t\t\t\t\t145\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t136\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-133,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t160\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t182,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t157\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t148,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t82,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t2867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-137\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1000,\n\t\t\t\t\t2610\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1016,\n\t\t\t\t\t2588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1075,\n\t\t\t\t\t2575\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1176,\n\t\t\t\t\t2497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1068,\n\t\t\t\t\t2390\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1046,\n\t\t\t\t\t2405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1021,\n\t\t\t\t\t2424\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t949,\n\t\t\t\t\t2459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-137,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t676,\n\t\t\t\t\t2263\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t637,\n\t\t\t\t\t2276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t610,\n\t\t\t\t\t2302\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t486,\n\t\t\t\t\t2287\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t567,\n\t\t\t\t\t2777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1033,\n\t\t\t\t\t2925\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5573,\n\t\t\t\t\t4114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5473,\n\t\t\t\t\t4104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5443,\n\t\t\t\t\t4115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5334,\n\t\t\t\t\t4254\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5277,\n\t\t\t\t\t4213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5033,\n\t\t\t\t\t4059\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5033,\n\t\t\t\t\t3952\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4992,\n\t\t\t\t\t3981\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4719,\n\t\t\t\t\t4094\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t115\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4651,\n\t\t\t\t\t4209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4517,\n\t\t\t\t\t4289\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4498,\n\t\t\t\t\t4332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t109\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4544,\n\t\t\t\t\t4441\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4524,\n\t\t\t\t\t4572\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4560,\n\t\t\t\t\t4649\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4568,\n\t\t\t\t\t4723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t128,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4875,\n\t\t\t\t\t4779\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4933,\n\t\t\t\t\t4807\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4948,\n\t\t\t\t\t4851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4954,\n\t\t\t\t\t4955\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5081,\n\t\t\t\t\t5017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5087,\n\t\t\t\t\t5032\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t133,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1046,\n\t\t\t\t\t2405\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t2399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1006,\n\t\t\t\t\t2194\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t973,\n\t\t\t\t\t2150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t963,\n\t\t\t\t\t2140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t970,\n\t\t\t\t\t2089\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t929,\n\t\t\t\t\t2090\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t887,\n\t\t\t\t\t2020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t130\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t681,\n\t\t\t\t\t2241\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t949,\n\t\t\t\t\t2459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5443,\n\t\t\t\t\t4115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5573,\n\t\t\t\t\t4114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-129,\n\t\t\t\t\t-144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5002,\n\t\t\t\t\t3188\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5112,\n\t\t\t\t\t3357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5062,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t176\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5277,\n\t\t\t\t\t4213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9413,\n\t\t\t\t\t1475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t179,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9912,\n\t\t\t\t\t1246\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t70,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10363,\n\t\t\t\t\t1091\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10521,\n\t\t\t\t\t866\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10243,\n\t\t\t\t\t342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10195,\n\t\t\t\t\t216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-146,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t92\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t169,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9349,\n\t\t\t\t\t1432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9382,\n\t\t\t\t\t1502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4372,\n\t\t\t\t\t2063\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-65\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t-175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-105,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t-172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t-140\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t162\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-88,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3230,\n\t\t\t\t\t1584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t98,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3364,\n\t\t\t\t\t1762\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3424,\n\t\t\t\t\t1864\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3791,\n\t\t\t\t\t1846\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3837,\n\t\t\t\t\t1863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3840,\n\t\t\t\t\t1903\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3876,\n\t\t\t\t\t1966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3846,\n\t\t\t\t\t2057\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4077,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4269,\n\t\t\t\t\t2192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3206,\n\t\t\t\t\t3769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3293,\n\t\t\t\t\t3695\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3374,\n\t\t\t\t\t3698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3263,\n\t\t\t\t\t3400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3170,\n\t\t\t\t\t3387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2981,\n\t\t\t\t\t3603\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3006,\n\t\t\t\t\t3608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3007,\n\t\t\t\t\t3647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2991,\n\t\t\t\t\t3719\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3007,\n\t\t\t\t\t3742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3041,\n\t\t\t\t\t3771\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3041,\n\t\t\t\t\t3789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t57\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3188,\n\t\t\t\t\t3809\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9119,\n\t\t\t\t\t3158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9148,\n\t\t\t\t\t3116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9181,\n\t\t\t\t\t3064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9334,\n\t\t\t\t\t3174\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8998,\n\t\t\t\t\t3013\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8899,\n\t\t\t\t\t3071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8970,\n\t\t\t\t\t3132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8993,\n\t\t\t\t\t3182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9088,\n\t\t\t\t\t3210\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1131,\n\t\t\t\t\t3932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1234,\n\t\t\t\t\t3958\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1277,\n\t\t\t\t\t3930\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1294,\n\t\t\t\t\t3897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1359,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1576,\n\t\t\t\t\t3787\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t3766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1691,\n\t\t\t\t\t3813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1672,\n\t\t\t\t\t3561\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1677,\n\t\t\t\t\t3513\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t3501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-94\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1617,\n\t\t\t\t\t3407\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1533,\n\t\t\t\t\t3346\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1545,\n\t\t\t\t\t3322\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1488,\n\t\t\t\t\t3282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1479,\n\t\t\t\t\t3265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1483,\n\t\t\t\t\t3235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1357,\n\t\t\t\t\t3282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1323,\n\t\t\t\t\t3308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1345,\n\t\t\t\t\t3211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t-88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1297,\n\t\t\t\t\t3034\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1301,\n\t\t\t\t\t2988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1248,\n\t\t\t\t\t2869\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1240,\n\t\t\t\t\t2854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-125,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1078,\n\t\t\t\t\t2880\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t103\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1053,\n\t\t\t\t\t2983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t74\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t879,\n\t\t\t\t\t3829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1002,\n\t\t\t\t\t3990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1036,\n\t\t\t\t\t3996\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1046,\n\t\t\t\t\t4005\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2110,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-100,\n\t\t\t\t\t-30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1888,\n\t\t\t\t\t2459\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1861,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1921,\n\t\t\t\t\t2417\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1913,\n\t\t\t\t\t2349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1781,\n\t\t\t\t\t2239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1756,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1830,\n\t\t\t\t\t2178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-80\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t2098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t1990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1772,\n\t\t\t\t\t1982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1737,\n\t\t\t\t\t1982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1670,\n\t\t\t\t\t1962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1671,\n\t\t\t\t\t2124\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1518,\n\t\t\t\t\t2734\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1539,\n\t\t\t\t\t2744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1560,\n\t\t\t\t\t2740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1591,\n\t\t\t\t\t2765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1660,\n\t\t\t\t\t2795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1712,\n\t\t\t\t\t2755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2027,\n\t\t\t\t\t2807\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2037,\n\t\t\t\t\t2813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1619,\n\t\t\t\t\t1138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1665,\n\t\t\t\t\t1097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1661,\n\t\t\t\t\t1009\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1598,\n\t\t\t\t\t949\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1694,\n\t\t\t\t\t710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1659,\n\t\t\t\t\t665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1730,\n\t\t\t\t\t620\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1719,\n\t\t\t\t\t586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-148,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-75,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-125,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t716,\n\t\t\t\t\t419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t93\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t840,\n\t\t\t\t\t688\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t886,\n\t\t\t\t\t706\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t890,\n\t\t\t\t\t752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t97,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1158,\n\t\t\t\t\t969\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1166,\n\t\t\t\t\t994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1345,\n\t\t\t\t\t1105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1335,\n\t\t\t\t\t1117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t1213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-75\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1240,\n\t\t\t\t\t2854\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1243,\n\t\t\t\t\t2834\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1254,\n\t\t\t\t\t2838\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t2822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1304,\n\t\t\t\t\t2791\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1356,\n\t\t\t\t\t2701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1306,\n\t\t\t\t\t2658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-87,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1219,\n\t\t\t\t\t2625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1217,\n\t\t\t\t\t2577\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-142,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1016,\n\t\t\t\t\t2588\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t2867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t531,\n\t\t\t\t\t1633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-183\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-162\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t665,\n\t\t\t\t\t910\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t690,\n\t\t\t\t\t878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t847,\n\t\t\t\t\t747\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t864,\n\t\t\t\t\t714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t886,\n\t\t\t\t\t706\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t716,\n\t\t\t\t\t419\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-74,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t169\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-127,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t220\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-134,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t103\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t381,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t506,\n\t\t\t\t\t1634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t518,\n\t\t\t\t\t1650\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t589,\n\t\t\t\t\t639\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10711,\n\t\t\t\t\t4353\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10921,\n\t\t\t\t\t4435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10954,\n\t\t\t\t\t4423\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-178\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10975,\n\t\t\t\t\t4245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10932,\n\t\t\t\t\t4228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10923,\n\t\t\t\t\t4265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-124,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-64,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-213,\n\t\t\t\t\t-68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-127\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-85\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10453,\n\t\t\t\t\t3586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10446,\n\t\t\t\t\t3542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10439,\n\t\t\t\t\t3508\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10255,\n\t\t\t\t\t3447\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10252,\n\t\t\t\t\t3458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10171,\n\t\t\t\t\t3352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10157,\n\t\t\t\t\t3362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10082,\n\t\t\t\t\t3290\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t93\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-139,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9746,\n\t\t\t\t\t3581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t163\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9930,\n\t\t\t\t\t4497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10420,\n\t\t\t\t\t4685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9745,\n\t\t\t\t\t4352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9748,\n\t\t\t\t\t4351\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1507,\n\t\t\t\t\t2178\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1587,\n\t\t\t\t\t2228\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1601,\n\t\t\t\t\t2129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1597,\n\t\t\t\t\t2015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1511,\n\t\t\t\t\t1947\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1488,\n\t\t\t\t\t1973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1466,\n\t\t\t\t\t1961\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t1965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-118,\n\t\t\t\t\t18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1005,\n\t\t\t\t\t1914\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t986,\n\t\t\t\t\t1879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t981,\n\t\t\t\t\t1938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t952,\n\t\t\t\t\t1953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t940,\n\t\t\t\t\t1948\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t937,\n\t\t\t\t\t2031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t970,\n\t\t\t\t\t2089\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t973,\n\t\t\t\t\t2150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1054,\n\t\t\t\t\t2399\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1176,\n\t\t\t\t\t2497\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1219,\n\t\t\t\t\t2625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1306,\n\t\t\t\t\t2658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1356,\n\t\t\t\t\t2701\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-36\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8545,\n\t\t\t\t\t3161\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8467,\n\t\t\t\t\t3121\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8425,\n\t\t\t\t\t3110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8389,\n\t\t\t\t\t3048\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8057,\n\t\t\t\t\t2983\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8036,\n\t\t\t\t\t3014\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8089,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8129,\n\t\t\t\t\t3049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8146,\n\t\t\t\t\t3056\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8141,\n\t\t\t\t\t3012\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8372,\n\t\t\t\t\t3040\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8535,\n\t\t\t\t\t3172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8620,\n\t\t\t\t\t3275\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8628,\n\t\t\t\t\t3255\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8610,\n\t\t\t\t\t3213\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2610,\n\t\t\t\t\t3784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t73\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2888,\n\t\t\t\t\t3724\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2912,\n\t\t\t\t\t3709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t65,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2977,\n\t\t\t\t\t3723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3007,\n\t\t\t\t\t3647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3006,\n\t\t\t\t\t3608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3170,\n\t\t\t\t\t3387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3191,\n\t\t\t\t\t3358\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-108\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3227,\n\t\t\t\t\t3105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3029,\n\t\t\t\t\t3068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2877,\n\t\t\t\t\t3017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2847,\n\t\t\t\t\t2923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-89\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2874,\n\t\t\t\t\t3268\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2525,\n\t\t\t\t\t3380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2521,\n\t\t\t\t\t3415\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2587,\n\t\t\t\t\t3482\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2571,\n\t\t\t\t\t3563\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2510,\n\t\t\t\t\t3609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2556,\n\t\t\t\t\t3619\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2526,\n\t\t\t\t\t3714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2571,\n\t\t\t\t\t3756\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1988,\n\t\t\t\t\t2384\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2017,\n\t\t\t\t\t2301\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2036,\n\t\t\t\t\t2266\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2059,\n\t\t\t\t\t2211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2057,\n\t\t\t\t\t2192\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2097,\n\t\t\t\t\t2208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2109,\n\t\t\t\t\t2204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-72\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2121,\n\t\t\t\t\t2132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-48,\n\t\t\t\t\t-23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2073,\n\t\t\t\t\t2109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1843,\n\t\t\t\t\t2120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1756,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1913,\n\t\t\t\t\t2349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2265,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2286,\n\t\t\t\t\t2011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2287,\n\t\t\t\t\t1821\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-72\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2470,\n\t\t\t\t\t1674\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2481,\n\t\t\t\t\t1647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2482,\n\t\t\t\t\t1632\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2431,\n\t\t\t\t\t1608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2424,\n\t\t\t\t\t1576\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2367,\n\t\t\t\t\t1560\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2287,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2140,\n\t\t\t\t\t1445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2087,\n\t\t\t\t\t1445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t171\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1938,\n\t\t\t\t\t1822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1965,\n\t\t\t\t\t1859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t62,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1958,\n\t\t\t\t\t2049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1821,\n\t\t\t\t\t2035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1836,\n\t\t\t\t\t2098\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2073,\n\t\t\t\t\t2109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t48,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2109,\n\t\t\t\t\t2204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2139,\n\t\t\t\t\t2209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2196,\n\t\t\t\t\t2223\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3812,\n\t\t\t\t\t2125\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t31,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3864,\n\t\t\t\t\t2069\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3876,\n\t\t\t\t\t1966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3837,\n\t\t\t\t\t1863\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3424,\n\t\t\t\t\t1864\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-102\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3230,\n\t\t\t\t\t1584\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-103,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2990,\n\t\t\t\t\t1974\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3126,\n\t\t\t\t\t2002\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3147,\n\t\t\t\t\t1991\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3167,\n\t\t\t\t\t2179\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3384,\n\t\t\t\t\t2420\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3504,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3518,\n\t\t\t\t\t2432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2871,\n\t\t\t\t\t4625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2958,\n\t\t\t\t\t4594\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3017,\n\t\t\t\t\t4590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3090,\n\t\t\t\t\t4329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3094,\n\t\t\t\t\t4285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-89,\n\t\t\t\t\t28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-116,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2848,\n\t\t\t\t\t4114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2820,\n\t\t\t\t\t4078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2731,\n\t\t\t\t\t4180\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2713,\n\t\t\t\t\t4234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2672,\n\t\t\t\t\t4329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2621,\n\t\t\t\t\t4349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t69,\n\t\t\t\t\t95\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2675,\n\t\t\t\t\t4502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2686,\n\t\t\t\t\t4504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t110,\n\t\t\t\t\t74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2846,\n\t\t\t\t\t4651\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3144,\n\t\t\t\t\t4785\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t108,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3252,\n\t\t\t\t\t4739\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-35,\n\t\t\t\t\t-128\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3597,\n\t\t\t\t\t4532\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-94\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t-26\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-216\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-52\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3997,\n\t\t\t\t\t3758\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3957,\n\t\t\t\t\t3625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3841,\n\t\t\t\t\t3585\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3575,\n\t\t\t\t\t3718\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3434,\n\t\t\t\t\t3743\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3410,\n\t\t\t\t\t3710\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3374,\n\t\t\t\t\t3698\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3206,\n\t\t\t\t\t3769\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3041,\n\t\t\t\t\t3789\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3029,\n\t\t\t\t\t3827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-113,\n\t\t\t\t\t202\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2870,\n\t\t\t\t\t4049\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3094,\n\t\t\t\t\t4285\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3017,\n\t\t\t\t\t4590\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3026,\n\t\t\t\t\t4642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3035,\n\t\t\t\t\t4704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3067,\n\t\t\t\t\t4767\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t1815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1948,\n\t\t\t\t\t1837\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2087,\n\t\t\t\t\t1445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-119,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1939,\n\t\t\t\t\t1323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-110,\n\t\t\t\t\t-17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1810,\n\t\t\t\t\t1362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1805,\n\t\t\t\t\t1354\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t97\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t34\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t108\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t130\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-80,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1467,\n\t\t\t\t\t1944\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1488,\n\t\t\t\t\t1973\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1597,\n\t\t\t\t\t2015\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1433,\n\t\t\t\t\t1965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1805,\n\t\t\t\t\t1354\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1857,\n\t\t\t\t\t1306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1886,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-158,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1647,\n\t\t\t\t\t1231\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1614,\n\t\t\t\t\t1201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1335,\n\t\t\t\t\t1117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1310,\n\t\t\t\t\t1172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t129\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-157,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1127,\n\t\t\t\t\t1387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1102,\n\t\t\t\t\t1380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t85\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t969,\n\t\t\t\t\t1860\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1995,\n\t\t\t\t\t5044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t88,\n\t\t\t\t\t-90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t109,\n\t\t\t\t\t-61\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2275,\n\t\t\t\t\t4662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2238,\n\t\t\t\t\t4621\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2147,\n\t\t\t\t\t4634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-95\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2022,\n\t\t\t\t\t4534\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t4535\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1931,\n\t\t\t\t\t4535\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1963,\n\t\t\t\t\t4457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-133\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1963,\n\t\t\t\t\t4153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t78,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2041,\n\t\t\t\t\t4046\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t-76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t3962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-79\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1701,\n\t\t\t\t\t3899\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-86\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1604,\n\t\t\t\t\t3766\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1359,\n\t\t\t\t\t3883\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1277,\n\t\t\t\t\t3930\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1131,\n\t\t\t\t\t3932\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t73\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1036,\n\t\t\t\t\t3996\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-44,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t898,\n\t\t\t\t\t4011\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t103,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t147,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t80\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-184,\n\t\t\t\t\t126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t91\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t155,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t84,\n\t\t\t\t\t149\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t121,\n\t\t\t\t\t46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t-118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2319,\n\t\t\t\t\t4654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t197,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2536,\n\t\t\t\t\t4528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2579,\n\t\t\t\t\t4520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t-31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2614,\n\t\t\t\t\t4489\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2621,\n\t\t\t\t\t4349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2713,\n\t\t\t\t\t4234\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-54\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2820,\n\t\t\t\t\t4078\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3029,\n\t\t\t\t\t3827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3007,\n\t\t\t\t\t3742\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2912,\n\t\t\t\t\t3709\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2610,\n\t\t\t\t\t3784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2526,\n\t\t\t\t\t3714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2510,\n\t\t\t\t\t3609\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2402,\n\t\t\t\t\t3661\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2343,\n\t\t\t\t\t3696\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2147,\n\t\t\t\t\t4019\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-106,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2041,\n\t\t\t\t\t4046\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-78,\n\t\t\t\t\t107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1963,\n\t\t\t\t\t4457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t78\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1950,\n\t\t\t\t\t4535\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t72,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2147,\n\t\t\t\t\t4634\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2275,\n\t\t\t\t\t4662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2283,\n\t\t\t\t\t4657\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3144,\n\t\t\t\t\t4785\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-77,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3035,\n\t\t\t\t\t4704\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3026,\n\t\t\t\t\t4642\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2871,\n\t\t\t\t\t4625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2686,\n\t\t\t\t\t4504\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2579,\n\t\t\t\t\t4520\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2319,\n\t\t\t\t\t4654\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1995,\n\t\t\t\t\t5044\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t110\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t243,\n\t\t\t\t\t-5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t41,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t151,\n\t\t\t\t\t99\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t139,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t153,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t138,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t64,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-46\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-234,\n\t\t\t\t\t-77\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2010,\n\t\t\t\t\t3400\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2064,\n\t\t\t\t\t3342\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-70\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2039,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-104\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2063,\n\t\t\t\t\t3168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2007,\n\t\t\t\t\t3093\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-54,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1953,\n\t\t\t\t\t3104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1920,\n\t\t\t\t\t3175\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1872,\n\t\t\t\t\t3502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11218,\n\t\t\t\t\t1366\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t76\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11216,\n\t\t\t\t\t1442\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2317,\n\t\t\t\t\t3232\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t-12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2248,\n\t\t\t\t\t3207\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2176,\n\t\t\t\t\t3204\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2152,\n\t\t\t\t\t3170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2085,\n\t\t\t\t\t3153\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2039,\n\t\t\t\t\t3272\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t92,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t31\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2232,\n\t\t\t\t\t3344\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1965,\n\t\t\t\t\t1859\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1796,\n\t\t\t\t\t1815\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t88\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1670,\n\t\t\t\t\t1962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1772,\n\t\t\t\t\t1982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1819,\n\t\t\t\t\t1990\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1821,\n\t\t\t\t\t2035\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9768,\n\t\t\t\t\t2805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t90,\n\t\t\t\t\t-151\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-126\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t106,\n\t\t\t\t\t24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t-82\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-144\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t144,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-107,\n\t\t\t\t\t-38\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-52,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-104,\n\t\t\t\t\t31\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t114,\n\t\t\t\t\t8\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t113,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10029,\n\t\t\t\t\t1528\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9995,\n\t\t\t\t\t1502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-189\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-82,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9413,\n\t\t\t\t\t1475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9349,\n\t\t\t\t\t1432\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-50,\n\t\t\t\t\t60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-68,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-99,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-176,\n\t\t\t\t\t0\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t89\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-108,\n\t\t\t\t\t-9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9020,\n\t\t\t\t\t1878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9316,\n\t\t\t\t\t2598\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9380,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9532,\n\t\t\t\t\t2778\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t67\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9593,\n\t\t\t\t\t2896\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t124,\n\t\t\t\t\t-114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2893,\n\t\t\t\t\t1329\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t-101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-102,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t23\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-118,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-92,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-81,\n\t\t\t\t\t22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-187\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-167,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t9\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2112,\n\t\t\t\t\t980\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t46,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2179,\n\t\t\t\t\t1071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2162,\n\t\t\t\t\t1100\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2093,\n\t\t\t\t\t1117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2042,\n\t\t\t\t\t1173\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2011,\n\t\t\t\t\t1143\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t23\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1898,\n\t\t\t\t\t867\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2133,\n\t\t\t\t\t841\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-77\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-122,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-70\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-84,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-114,\n\t\t\t\t\t-18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1719,\n\t\t\t\t\t586\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1659,\n\t\t\t\t\t665\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1598,\n\t\t\t\t\t949\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t63,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1665,\n\t\t\t\t\t1097\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1619,\n\t\t\t\t\t1138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t63\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1614,\n\t\t\t\t\t1201\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1886,\n\t\t\t\t\t1244\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1857,\n\t\t\t\t\t1306\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t56\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1939,\n\t\t\t\t\t1323\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t35,\n\t\t\t\t\t4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2287,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2367,\n\t\t\t\t\t1560\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2431,\n\t\t\t\t\t1608\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2481,\n\t\t\t\t\t1647\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t83,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2261,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-9,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t-114\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t2455\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t17,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2350,\n\t\t\t\t\t2422\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-65\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2328,\n\t\t\t\t\t2357\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2311,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2271,\n\t\t\t\t\t2354\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t2382\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2238,\n\t\t\t\t\t2397\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2219,\n\t\t\t\t\t2398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2170,\n\t\t\t\t\t2362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2154,\n\t\t\t\t\t2373\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2107,\n\t\t\t\t\t2359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t-99\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2087,\n\t\t\t\t\t2260\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2017,\n\t\t\t\t\t2301\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-29,\n\t\t\t\t\t83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1913,\n\t\t\t\t\t2349\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1861,\n\t\t\t\t\t2451\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2110,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2133,\n\t\t\t\t\t2599\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2204,\n\t\t\t\t\t2625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4388,\n\t\t\t\t\t4796\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4402,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t-107\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4506,\n\t\t\t\t\t4668\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4524,\n\t\t\t\t\t4572\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4498,\n\t\t\t\t\t4332\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-111,\n\t\t\t\t\t-48\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4387,\n\t\t\t\t\t4284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t81\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-70,\n\t\t\t\t\t60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4102,\n\t\t\t\t\t4414\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4138,\n\t\t\t\t\t4421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t68\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t127\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4247,\n\t\t\t\t\t4749\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4262,\n\t\t\t\t\t4784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4294,\n\t\t\t\t\t4795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10476,\n\t\t\t\t\t2587\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11124,\n\t\t\t\t\t2047\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11218,\n\t\t\t\t\t1964\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11260,\n\t\t\t\t\t1997\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t33,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11375,\n\t\t\t\t\t1956\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-69\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t22,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10877,\n\t\t\t\t\t1468\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t13\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10616,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10469,\n\t\t\t\t\t1475\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-62\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10438,\n\t\t\t\t\t1413\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10416,\n\t\t\t\t\t1239\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10475,\n\t\t\t\t\t1155\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-64\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10422,\n\t\t\t\t\t1102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9995,\n\t\t\t\t\t1502\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9768,\n\t\t\t\t\t2805\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t71,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t91,\n\t\t\t\t\t-19\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t73,\n\t\t\t\t\t2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t21,\n\t\t\t\t\t53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2259,\n\t\t\t\t\t2382\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2311,\n\t\t\t\t\t2356\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2325,\n\t\t\t\t\t2318\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2340,\n\t\t\t\t\t2300\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-60\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2323,\n\t\t\t\t\t2196\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2265,\n\t\t\t\t\t2185\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-69,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2139,\n\t\t\t\t\t2209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2097,\n\t\t\t\t\t2208\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2059,\n\t\t\t\t\t2211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2107,\n\t\t\t\t\t2359\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2170,\n\t\t\t\t\t2362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t49,\n\t\t\t\t\t36\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2219,\n\t\t\t\t\t2398\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t19,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t637,\n\t\t\t\t\t2276\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t-35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t887,\n\t\t\t\t\t2020\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t937,\n\t\t\t\t\t2031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-83\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t952,\n\t\t\t\t\t1953\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t-15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t981,\n\t\t\t\t\t1938\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t943,\n\t\t\t\t\t1912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-33\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-1\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t792,\n\t\t\t\t\t1831\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t691,\n\t\t\t\t\t1829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-173,\n\t\t\t\t\t-132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t531,\n\t\t\t\t\t1658\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t381,\n\t\t\t\t\t1544\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-152,\n\t\t\t\t\t64\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t132\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-117,\n\t\t\t\t\t14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t79\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t-86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t118,\n\t\t\t\t\t152\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t16\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t89,\n\t\t\t\t\t104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t117,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t67\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t610,\n\t\t\t\t\t2302\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11586,\n\t\t\t\t\t2877\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t38,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t-118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t-154\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11698,\n\t\t\t\t\t2538\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11457,\n\t\t\t\t\t2547\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-72,\n\t\t\t\t\t-4\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t5\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t15,\n\t\t\t\t\t69\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11413,\n\t\t\t\t\t2827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t54\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t162,\n\t\t\t\t\t-4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t943,\n\t\t\t\t\t1912\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t986,\n\t\t\t\t\t1879\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1102,\n\t\t\t\t\t1380\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1310,\n\t\t\t\t\t1172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1166,\n\t\t\t\t\t994\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t890,\n\t\t\t\t\t752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t864,\n\t\t\t\t\t714\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t690,\n\t\t\t\t\t878\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t32\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t531,\n\t\t\t\t\t1633\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t518,\n\t\t\t\t\t1650\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t691,\n\t\t\t\t\t1829\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9886,\n\t\t\t\t\t4493\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t44,\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9746,\n\t\t\t\t\t3581\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-51,\n\t\t\t\t\t-63\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-145,\n\t\t\t\t\t-40\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t-14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9351,\n\t\t\t\t\t3445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t18\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9324,\n\t\t\t\t\t3463\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9331,\n\t\t\t\t\t3473\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-66,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t118\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-96,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9111,\n\t\t\t\t\t3648\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9069,\n\t\t\t\t\t3690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-65,\n\t\t\t\t\t-3\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-85,\n\t\t\t\t\t-27\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-14\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-63,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8802,\n\t\t\t\t\t3699\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9097,\n\t\t\t\t\t4924\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9064,\n\t\t\t\t\t4957\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t87,\n\t\t\t\t\t105\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t105,\n\t\t\t\t\t51\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-5,\n\t\t\t\t\t55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9745,\n\t\t\t\t\t4352\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10975,\n\t\t\t\t\t4245\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t36,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-18\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t100,\n\t\t\t\t\t-116\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t119,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t134,\n\t\t\t\t\t-190\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t125,\n\t\t\t\t\t-109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t142,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-98\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-56,\n\t\t\t\t\t-117\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t51,\n\t\t\t\t\t-106\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t-138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-43\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t-91\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11291,\n\t\t\t\t\t2827\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11180,\n\t\t\t\t\t2923\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t11185,\n\t\t\t\t\t2965\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-24,\n\t\t\t\t\t66\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10174,\n\t\t\t\t\t3099\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-43,\n\t\t\t\t\t15\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t176\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10157,\n\t\t\t\t\t3362\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10252,\n\t\t\t\t\t3458\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t3,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10439,\n\t\t\t\t\t3508\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10446,\n\t\t\t\t\t3542\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t10923,\n\t\t\t\t\t4265\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t9,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1725,\n\t\t\t\t\t3314\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t45,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1804,\n\t\t\t\t\t3269\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1827,\n\t\t\t\t\t3227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-10,\n\t\t\t\t\t-59\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1817,\n\t\t\t\t\t3168\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-94,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t3142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t90\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-86,\n\t\t\t\t\t118\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1563,\n\t\t\t\t\t3361\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1620,\n\t\t\t\t\t3501\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t53,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t3537\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t-27\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1723,\n\t\t\t\t\t3142\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1706,\n\t\t\t\t\t3135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t-53\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1664,\n\t\t\t\t\t3082\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1625,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1554,\n\t\t\t\t\t3006\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1524,\n\t\t\t\t\t3025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t138\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1472,\n\t\t\t\t\t3206\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t13,\n\t\t\t\t\t39\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-6,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1488,\n\t\t\t\t\t3282\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t57,\n\t\t\t\t\t40\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1533,\n\t\t\t\t\t3346\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t30,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1483,\n\t\t\t\t\t3235\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-11,\n\t\t\t\t\t-29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1524,\n\t\t\t\t\t3025\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1517,\n\t\t\t\t\t3001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t23,\n\t\t\t\t\t-22\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-172\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1547,\n\t\t\t\t\t2787\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-43\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1539,\n\t\t\t\t\t2744\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-39,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1486,\n\t\t\t\t\t2723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-73,\n\t\t\t\t\t14\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1370,\n\t\t\t\t\t2691\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-91,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t30\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1274,\n\t\t\t\t\t2822\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-20,\n\t\t\t\t\t16\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1243,\n\t\t\t\t\t2834\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t5,\n\t\t\t\t\t35\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1301,\n\t\t\t\t\t2988\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-4,\n\t\t\t\t\t46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1345,\n\t\t\t\t\t3211\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t97\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1323,\n\t\t\t\t\t3308\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t34,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1953,\n\t\t\t\t\t3104\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t54,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2023,\n\t\t\t\t\t3067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t12,\n\t\t\t\t\t-45\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2038,\n\t\t\t\t\t2966\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t-58\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t2908\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-19,\n\t\t\t\t\t-51\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2030,\n\t\t\t\t\t2857\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1712,\n\t\t\t\t\t2755\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1700,\n\t\t\t\t\t2804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t141\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-67,\n\t\t\t\t\t61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1702,\n\t\t\t\t\t3043\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1706,\n\t\t\t\t\t3135\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t111,\n\t\t\t\t\t33\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1827,\n\t\t\t\t\t3227\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t7,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1834,\n\t\t\t\t\t3236\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t86,\n\t\t\t\t\t-61\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4274,\n\t\t\t\t\t5224\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t134,\n\t\t\t\t\t-32\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t104,\n\t\t\t\t\t20\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t192,\n\t\t\t\t\t-76\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t55,\n\t\t\t\t\t-102\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-27,\n\t\t\t\t\t-71\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4732,\n\t\t\t\t\t4963\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4790,\n\t\t\t\t\t4961\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t68\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4886,\n\t\t\t\t\t5029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t25,\n\t\t\t\t\t-3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4911,\n\t\t\t\t\t5026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t28,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4939,\n\t\t\t\t\t5028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4965,\n\t\t\t\t\t5029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4991,\n\t\t\t\t\t5004\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-49\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4948,\n\t\t\t\t\t4851\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t-44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4933,\n\t\t\t\t\t4807\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4568,\n\t\t\t\t\t4723\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-62,\n\t\t\t\t\t-55\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4402,\n\t\t\t\t\t4775\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-14,\n\t\t\t\t\t21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4294,\n\t\t\t\t\t4795\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-32,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4262,\n\t\t\t\t\t4784\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4245,\n\t\t\t\t\t4777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-41,\n\t\t\t\t\t15\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4204,\n\t\t\t\t\t4792\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-60,\n\t\t\t\t\t78\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t137,\n\t\t\t\t\t86\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-93,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-3,\n\t\t\t\t\t170\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t5081,\n\t\t\t\t\t5017\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-37,\n\t\t\t\t\t-21\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-53,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4965,\n\t\t\t\t\t5029\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t-1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4911,\n\t\t\t\t\t5026\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-25,\n\t\t\t\t\t3\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4790,\n\t\t\t\t\t4961\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4274,\n\t\t\t\t\t5224\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t101\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-34,\n\t\t\t\t\t120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-76,\n\t\t\t\t\t59\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-130,\n\t\t\t\t\t57\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t48\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t115,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t40,\n\t\t\t\t\t37\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t83\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-42\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t157,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t75,\n\t\t\t\t\t-62\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t32,\n\t\t\t\t\t-215\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-12,\n\t\t\t\t\t-58\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t-55\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t66,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t112,\n\t\t\t\t\t-25\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t41\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t56,\n\t\t\t\t\t-6\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t101,\n\t\t\t\t\t150\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t29,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t59,\n\t\t\t\t\t109\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t76,\n\t\t\t\t\t-7\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t61,\n\t\t\t\t\t-60\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-50\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-120\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-49,\n\t\t\t\t\t-71\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-84\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-95,\n\t\t\t\t\t-28\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-53\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-128\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t-35\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t67,\n\t\t\t\t\t-56\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-46,\n\t\t\t\t\t-49\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\t-74\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-98,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8445,\n\t\t\t\t\t3957\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t58,\n\t\t\t\t\t8\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8546,\n\t\t\t\t\t3902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t79,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8809,\n\t\t\t\t\t3662\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9069,\n\t\t\t\t\t3690\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t42,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9331,\n\t\t\t\t\t3473\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9351,\n\t\t\t\t\t3445\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-122\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-22,\n\t\t\t\t\t-107\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t60,\n\t\t\t\t\t-42\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9181,\n\t\t\t\t\t3064\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t9119,\n\t\t\t\t\t3158\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t52\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8993,\n\t\t\t\t\t3182\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-23,\n\t\t\t\t\t-50\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8899,\n\t\t\t\t\t3071\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t6,\n\t\t\t\t\t-37\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8720,\n\t\t\t\t\t3067\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-55,\n\t\t\t\t\t-10\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8618,\n\t\t\t\t\t3238\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t17\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8620,\n\t\t\t\t\t3275\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t10,\n\t\t\t\t\t-2\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t1,\n\t\t\t\t\t7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8181,\n\t\t\t\t\t3112\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8162,\n\t\t\t\t\t3068\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-33,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8089,\n\t\t\t\t\t3028\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-97,\n\t\t\t\t\t-24\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t11\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t45\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t16,\n\t\t\t\t\t12\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-45,\n\t\t\t\t\t87\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-101,\n\t\t\t\t\t75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-75\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t88\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t52,\n\t\t\t\t\t146\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-2,\n\t\t\t\t\t119\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t96,\n\t\t\t\t\t10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t114\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-58,\n\t\t\t\t\t113\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t27,\n\t\t\t\t\t209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t81,\n\t\t\t\t\t29\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t8103,\n\t\t\t\t\t3892\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t18,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4245,\n\t\t\t\t\t4777\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t2,\n\t\t\t\t\t-28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4138,\n\t\t\t\t\t4421\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-7\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4387,\n\t\t\t\t\t4284\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t93,\n\t\t\t\t\t29\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t-24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4651,\n\t\t\t\t\t4209\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t47,\n\t\t\t\t\t-90\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4603,\n\t\t\t\t\t4115\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-61,\n\t\t\t\t\t24\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4240,\n\t\t\t\t\t3937\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-83,\n\t\t\t\t\t-87\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4133,\n\t\t\t\t\t3740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-28,\n\t\t\t\t\t-5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t4012,\n\t\t\t\t\t3752\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-15,\n\t\t\t\t\t6\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t3597,\n\t\t\t\t\t4532\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t39,\n\t\t\t\t\t131\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t85,\n\t\t\t\t\t47\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t68,\n\t\t\t\t\t-10\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t26,\n\t\t\t\t\t66\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t95,\n\t\t\t\t\t96\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t94,\n\t\t\t\t\t-17\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t80,\n\t\t\t\t\t-44\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t120,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1700,\n\t\t\t\t\t2804\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-40,\n\t\t\t\t\t-9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1591,\n\t\t\t\t\t2765\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-31,\n\t\t\t\t\t-25\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1560,\n\t\t\t\t\t2740\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-13,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1517,\n\t\t\t\t\t3001\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t37,\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t1625,\n\t\t\t\t\t3031\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t77,\n\t\t\t\t\t12\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2530,\n\t\t\t\t\t2962\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t74,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2598,\n\t\t\t\t\t2916\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-19\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2580,\n\t\t\t\t\t2897\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-30,\n\t\t\t\t\t-41\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2549,\n\t\t\t\t\t2847\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-47,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2482,\n\t\t\t\t\t2749\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t-46\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2476,\n\t\t\t\t\t2711\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t8,\n\t\t\t\t\t-38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2527,\n\t\t\t\t\t2685\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t4,\n\t\t\t\t\t-30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2626,\n\t\t\t\t\t2546\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t43,\n\t\t\t\t\t-21\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2669,\n\t\t\t\t\t2525\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t14,\n\t\t\t\t\t-20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2683,\n\t\t\t\t\t2505\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-8,\n\t\t\t\t\t-2\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2578,\n\t\t\t\t\t2411\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-38,\n\t\t\t\t\t-39\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2540,\n\t\t\t\t\t2372\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-26,\n\t\t\t\t\t34\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2514,\n\t\t\t\t\t2386\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-17,\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2497,\n\t\t\t\t\t2387\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-1,\n\t\t\t\t\t47\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2496,\n\t\t\t\t\t2434\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-21,\n\t\t\t\t\t22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2475,\n\t\t\t\t\t2456\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-18,\n\t\t\t\t\t-13\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2450,\n\t\t\t\t\t2457\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-36,\n\t\t\t\t\t-22\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2405,\n\t\t\t\t\t2440\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-42,\n\t\t\t\t\t9\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2339,\n\t\t\t\t\t2435\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-16,\n\t\t\t\t\t20\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2261,\n\t\t\t\t\t2636\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-57,\n\t\t\t\t\t-11\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2204,\n\t\t\t\t\t2625\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-71,\n\t\t\t\t\t-26\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2037,\n\t\t\t\t\t2813\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t-7,\n\t\t\t\t\t44\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2049,\n\t\t\t\t\t2908\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t24,\n\t\t\t\t\t28\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2210,\n\t\t\t\t\t2902\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t50,\n\t\t\t\t\t30\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2296,\n\t\t\t\t\t2982\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t11,\n\t\t\t\t\t38\n\t\t\t\t]\n\t\t\t],\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t2396,\n\t\t\t\t\t3024\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t20,\n\t\t\t\t\t77\n\t\t\t\t]\n\t\t\t]\n\t\t],\n\t\t\"transform\": {\n\t\t\t\"scale\": [\n\t\t\t\t0.0006109149400179856,\n\t\t\t\t0.00036802637671194373\n\t\t\t],\n\t\t\t\"translate\": [\n\t\t\t\t5.878025523533186,\n\t\t\t\t50.3427905656316\n\t\t\t]\n\t\t},\n\t\t\"objects\": {\n\t\t\t\"nrw-bb\": {\n\t\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\t\"geometries\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12070\",\n\t\t\t\t\t\t\t\"GEN\": \"Prignitz\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t\t9,\n\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12073\",\n\t\t\t\t\t\t\t\"GEN\": \"Uckermark\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t23\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12068\",\n\t\t\t\t\t\t\t\"GEN\": \"Ostprignitz-Ruppin\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t\t34,\n\t\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t\t36,\n\t\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t\t52,\n\t\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t\t58\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05562\",\n\t\t\t\t\t\t\t\"GEN\": \"Recklinghausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t59,\n\t\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t\t63,\n\t\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t\t72,\n\t\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t\t78\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t\t81\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12071\",\n\t\t\t\t\t\t\t\"GEN\": \"Spree-Neiße\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\t101,\n\t\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t\t106\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05774\",\n\t\t\t\t\t\t\t\"GEN\": \"Paderborn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t\t-75,\n\t\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t\t-73,\n\t\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t\t-71,\n\t\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t\t-69,\n\t\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t\t-67,\n\t\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t\t114,\n\t\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t\t-62,\n\t\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t\t131\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12066\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberspreewald-Lausitz\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t\t135,\n\t\t\t\t\t\t\t\t136,\n\t\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t\t144\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05314\",\n\t\t\t\t\t\t\t\"GEN\": \"Bonn\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t\t148,\n\t\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t\t157,\n\t\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t\t166,\n\t\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t\t175,\n\t\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t\t177,\n\t\t\t\t\t\t\t\t178\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05374\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberbergischer Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t\t191,\n\t\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t\t201,\n\t\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t\t207,\n\t\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t\t212,\n\t\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t\t216\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12069\",\n\t\t\t\t\t\t\t\"GEN\": \"Potsdam-Mittelmark\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-97,\n\t\t\t\t\t\t\t\t217,\n\t\t\t\t\t\t\t\t-95,\n\t\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t\t228,\n\t\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t\t232,\n\t\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t\t236,\n\t\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t\t-101,\n\t\t\t\t\t\t\t\t245,\n\t\t\t\t\t\t\t\t-99,\n\t\t\t\t\t\t\t\t246\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05958\",\n\t\t\t\t\t\t\t\"GEN\": \"Hochsauerlandkreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t\t248,\n\t\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t\t255,\n\t\t\t\t\t\t\t\t256,\n\t\t\t\t\t\t\t\t-102,\n\t\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t\t-243,\n\t\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t\t260,\n\t\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t\t267\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05974\",\n\t\t\t\t\t\t\t\"GEN\": \"Soest\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t\t270,\n\t\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t\t279,\n\t\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t\t285\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05914\",\n\t\t\t\t\t\t\t\"GEN\": \"Hagen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t\t-260,\n\t\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t\t-241,\n\t\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t\t-239,\n\t\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t\t-237,\n\t\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t\t-235,\n\t\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t\t292,\n\t\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t\t-158,\n\t\t\t\t\t\t\t\t299,\n\t\t\t\t\t\t\t\t-156,\n\t\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t\t302,\n\t\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t\t-270,\n\t\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t\t308,\n\t\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t\t311\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05962\",\n\t\t\t\t\t\t\t\"GEN\": \"Märkischer Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t\t319,\n\t\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t\t-60,\n\t\t\t\t\t\t\t\t323,\n\t\t\t\t\t\t\t\t-78,\n\t\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t\t332,\n\t\t\t\t\t\t\t\t333\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12067\",\n\t\t\t\t\t\t\t\"GEN\": \"Oder-Spree\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t\t344\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05111\",\n\t\t\t\t\t\t\t\"GEN\": \"Düsseldorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t\t356,\n\t\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t\t362,\n\t\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t\t364\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05911\",\n\t\t\t\t\t\t\t\"GEN\": \"Bochum\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t\t373,\n\t\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t\t-35,\n\t\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t\t377\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05913\",\n\t\t\t\t\t\t\t\"GEN\": \"Dortmund\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t\t380,\n\t\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t\t384,\n\t\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t\t387\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05154\",\n\t\t\t\t\t\t\t\"GEN\": \"Kleve\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t\t391,\n\t\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t\t401,\n\t\t\t\t\t\t\t\t-386,\n\t\t\t\t\t\t\t\t402\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05166\",\n\t\t\t\t\t\t\t\"GEN\": \"Viersen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t\t407,\n\t\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t\t-89,\n\t\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t\t-87,\n\t\t\t\t\t\t\t\t410,\n\t\t\t\t\t\t\t\t-85,\n\t\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t\t420,\n\t\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t\t422,\n\t\t\t\t\t\t\t\t423,\n\t\t\t\t\t\t\t\t424\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05766\",\n\t\t\t\t\t\t\t\"GEN\": \"Lippe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-395,\n\t\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t\t434\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05116\",\n\t\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-406,\n\t\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t\t-404,\n\t\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t\t-220,\n\t\t\t\t\t\t\t\t437,\n\t\t\t\t\t\t\t\t-93,\n\t\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t\t-91,\n\t\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t\t-408,\n\t\t\t\t\t\t\t\t440\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05762\",\n\t\t\t\t\t\t\t\"GEN\": \"Höxter\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t\t-122,\n\t\t\t\t\t\t\t\t444,\n\t\t\t\t\t\t\t\t-120,\n\t\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t\t-118,\n\t\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t\t448\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12062\",\n\t\t\t\t\t\t\t\"GEN\": \"Elbe-Elster\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-222,\n\t\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t\t456,\n\t\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t\t-226,\n\t\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t\t-224,\n\t\t\t\t\t\t\t\t459\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05970\",\n\t\t\t\t\t\t\t\"GEN\": \"Siegen-Wittgenstein\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t\t462,\n\t\t\t\t\t\t\t\t-266,\n\t\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t\t465,\n\t\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t\t472\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05915\",\n\t\t\t\t\t\t\t\"GEN\": \"Hamm\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t473,\n\t\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t\t-186,\n\t\t\t\t\t\t\t\t477,\n\t\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t\t481\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12054\",\n\t\t\t\t\t\t\t\"GEN\": \"Potsdam\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t\t-54,\n\t\t\t\t\t\t\t\t490,\n\t\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t\t498,\n\t\t\t\t\t\t\t\t499,\n\t\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t\t-383,\n\t\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t\t511\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05170\",\n\t\t\t\t\t\t\t\"GEN\": \"Wesel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t\t524,\n\t\t\t\t\t\t\t\t-339,\n\t\t\t\t\t\t\t\t525,\n\t\t\t\t\t\t\t\t-337,\n\t\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t\t533\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05158\",\n\t\t\t\t\t\t\t\"GEN\": \"Mettmann\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t\t537,\n\t\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t\t544,\n\t\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t\t550\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05366\",\n\t\t\t\t\t\t\t\"GEN\": \"Euskirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t\t553,\n\t\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t\t560,\n\t\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t\t-506\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05114\",\n\t\t\t\t\t\t\t\"GEN\": \"Krefeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t\t\t-543,\n\t\t\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t\t\t570,\n\t\t\t\t\t\t\t\t\t571\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t572\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05334\",\n\t\t\t\t\t\t\t\"GEN\": \"Städteregion Aachen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-6,\n\t\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t\t-4,\n\t\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t\t582,\n\t\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t\t-8,\n\t\t\t\t\t\t\t\t589\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12060\",\n\t\t\t\t\t\t\t\"GEN\": \"Barnim\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-342,\n\t\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t\t595,\n\t\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t\t601,\n\t\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t\t604,\n\t\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t\t-431,\n\t\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t\t-429,\n\t\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t\t-427,\n\t\t\t\t\t\t\t\t608,\n\t\t\t\t\t\t\t\t-393,\n\t\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t\t-559,\n\t\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t\t612\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05162\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Kreis Neuss\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-206,\n\t\t\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t\t\t-204,\n\t\t\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t\t\t620,\n\t\t\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t\t\t-212,\n\t\t\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t\t\t-210,\n\t\t\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t\t\t-208,\n\t\t\t\t\t\t\t\t\t624\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t\t\t627\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12051\",\n\t\t\t\t\t\t\t\"GEN\": \"Brandenburg an der Havel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t628,\n\t\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t\t-468,\n\t\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t\t633,\n\t\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t\t-263,\n\t\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t\t637,\n\t\t\t\t\t\t\t\t-309,\n\t\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t\t-307,\n\t\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t\t-305,\n\t\t\t\t\t\t\t\t-269,\n\t\t\t\t\t\t\t\t-368,\n\t\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t\t-366,\n\t\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t\t-377,\n\t\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t\t-33,\n\t\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t\t-31,\n\t\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t\t648\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05978\",\n\t\t\t\t\t\t\t\"GEN\": \"Unna\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t\t652,\n\t\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t\t655,\n\t\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t\t-519,\n\t\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t\t-517,\n\t\t\t\t\t\t\t\t660\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05122\",\n\t\t\t\t\t\t\t\"GEN\": \"Solingen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t\t-164,\n\t\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t\t665,\n\t\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t\t668,\n\t\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t\t674,\n\t\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t\t-658,\n\t\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t\t-656,\n\t\t\t\t\t\t\t\t679,\n\t\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t\t681\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05378\",\n\t\t\t\t\t\t\t\"GEN\": \"Rheinisch-Bergischer Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t\t-228,\n\t\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t\t-457,\n\t\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t\t-455,\n\t\t\t\t\t\t\t\t685,\n\t\t\t\t\t\t\t\t-453,\n\t\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t\t-451,\n\t\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t\t-160,\n\t\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t\t-298,\n\t\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t\t-295,\n\t\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t\t-293,\n\t\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t\t-233,\n\t\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t\t694,\n\t\t\t\t\t\t\t\t-230\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05966\",\n\t\t\t\t\t\t\t\"GEN\": \"Olpe\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t\t697,\n\t\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t\t704,\n\t\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t\t708\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05515\",\n\t\t\t\t\t\t\t\"GEN\": \"Münster\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t\t-252,\n\t\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t\t-250,\n\t\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t\t-248,\n\t\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t\t-461,\n\t\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t\t-472,\n\t\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t\t721,\n\t\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t\t-700,\n\t\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t\t-698,\n\t\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t\t727\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05570\",\n\t\t\t\t\t\t\t\"GEN\": \"Warendorf\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t\t733,\n\t\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t\t-598,\n\t\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t\t-596,\n\t\t\t\t\t\t\t\t736\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05315\",\n\t\t\t\t\t\t\t\"GEN\": \"Köln\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t\t-734,\n\t\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t\t742,\n\t\t\t\t\t\t\t\t-550,\n\t\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t\t-600\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05362\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Erft-Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t748,\n\t\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t\t-58,\n\t\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t\t-56,\n\t\t\t\t\t\t\t\t759,\n\t\t\t\t\t\t\t\t-489,\n\t\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t\t-487,\n\t\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t\t-483,\n\t\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t\t-511,\n\t\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t\t-379,\n\t\t\t\t\t\t\t\t765\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05554\",\n\t\t\t\t\t\t\t\"GEN\": \"Borken\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t\t-704,\n\t\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t\t-702,\n\t\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t\t-722,\n\t\t\t\t\t\t\t\t773,\n\t\t\t\t\t\t\t\t-470,\n\t\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t\t-631,\n\t\t\t\t\t\t\t\t775,\n\t\t\t\t\t\t\t\t-629,\n\t\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t\t-648,\n\t\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t\t-646,\n\t\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t\t-29,\n\t\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t\t-27,\n\t\t\t\t\t\t\t\t780,\n\t\t\t\t\t\t\t\t-25,\n\t\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t\t-756,\n\t\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t\t-754,\n\t\t\t\t\t\t\t\t784,\n\t\t\t\t\t\t\t\t-752,\n\t\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t\t-750,\n\t\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t\t787\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05558\",\n\t\t\t\t\t\t\t\"GEN\": \"Coesfeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-710,\n\t\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t\t-727,\n\t\t\t\t\t\t\t\t789,\n\t\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t\t-696,\n\t\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t\t-708,\n\t\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t\t-769,\n\t\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t\t-767,\n\t\t\t\t\t\t\t\t794,\n\t\t\t\t\t\t\t\t-787,\n\t\t\t\t\t\t\t\t-749,\n\t\t\t\t\t\t\t\t795\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05566\",\n\t\t\t\t\t\t\t\"GEN\": \"Steinfurt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-43,\n\t\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t\t799,\n\t\t\t\t\t\t\t\t-357,\n\t\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t\t-45,\n\t\t\t\t\t\t\t\t803\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05513\",\n\t\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t\t805\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12052\",\n\t\t\t\t\t\t\t\"GEN\": \"Cottbus\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t\t-364,\n\t\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t\t-362,\n\t\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t\t-359,\n\t\t\t\t\t\t\t\t810,\n\t\t\t\t\t\t\t\t-799,\n\t\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t\t812\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05916\",\n\t\t\t\t\t\t\t\"GEN\": \"Herne\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-675,\n\t\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t\t-729,\n\t\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t\t-523,\n\t\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t\t818\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05316\",\n\t\t\t\t\t\t\t\"GEN\": \"Leverkusen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t\t820,\n\t\t\t\t\t\t\t\t821,\n\t\t\t\t\t\t\t\t-442,\n\t\t\t\t\t\t\t\t822,\n\t\t\t\t\t\t\t\t-448,\n\t\t\t\t\t\t\t\t823,\n\t\t\t\t\t\t\t\t-196,\n\t\t\t\t\t\t\t\t824,\n\t\t\t\t\t\t\t\t-194,\n\t\t\t\t\t\t\t\t825,\n\t\t\t\t\t\t\t\t-192,\n\t\t\t\t\t\t\t\t826,\n\t\t\t\t\t\t\t\t-190,\n\t\t\t\t\t\t\t\t827,\n\t\t\t\t\t\t\t\t-188,\n\t\t\t\t\t\t\t\t828\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12072\",\n\t\t\t\t\t\t\t\"GEN\": \"Teltow-Fläming\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-162,\n\t\t\t\t\t\t\t\t829,\n\t\t\t\t\t\t\t\t-138,\n\t\t\t\t\t\t\t\t830,\n\t\t\t\t\t\t\t\t-136,\n\t\t\t\t\t\t\t\t831,\n\t\t\t\t\t\t\t\t832,\n\t\t\t\t\t\t\t\t-133,\n\t\t\t\t\t\t\t\t833,\n\t\t\t\t\t\t\t\t834,\n\t\t\t\t\t\t\t\t835,\n\t\t\t\t\t\t\t\t-142,\n\t\t\t\t\t\t\t\t836,\n\t\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t\t837,\n\t\t\t\t\t\t\t\t838,\n\t\t\t\t\t\t\t\t-540,\n\t\t\t\t\t\t\t\t839,\n\t\t\t\t\t\t\t\t-538,\n\t\t\t\t\t\t\t\t840,\n\t\t\t\t\t\t\t\t-536,\n\t\t\t\t\t\t\t\t841,\n\t\t\t\t\t\t\t\t842,\n\t\t\t\t\t\t\t\t843,\n\t\t\t\t\t\t\t\t-741,\n\t\t\t\t\t\t\t\t844,\n\t\t\t\t\t\t\t\t845,\n\t\t\t\t\t\t\t\t-732,\n\t\t\t\t\t\t\t\t846,\n\t\t\t\t\t\t\t\t-671,\n\t\t\t\t\t\t\t\t847,\n\t\t\t\t\t\t\t\t848,\n\t\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t\t849,\n\t\t\t\t\t\t\t\t-666,\n\t\t\t\t\t\t\t\t850\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05382\",\n\t\t\t\t\t\t\t\"GEN\": \"Rhein-Sieg-Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t851,\n\t\t\t\t\t\t\t\t852,\n\t\t\t\t\t\t\t\t-176,\n\t\t\t\t\t\t\t\t853,\n\t\t\t\t\t\t\t\t854,\n\t\t\t\t\t\t\t\t855,\n\t\t\t\t\t\t\t\t856,\n\t\t\t\t\t\t\t\t857,\n\t\t\t\t\t\t\t\t858,\n\t\t\t\t\t\t\t\t859,\n\t\t\t\t\t\t\t\t860,\n\t\t\t\t\t\t\t\t861,\n\t\t\t\t\t\t\t\t862,\n\t\t\t\t\t\t\t\t863,\n\t\t\t\t\t\t\t\t-651,\n\t\t\t\t\t\t\t\t864,\n\t\t\t\t\t\t\t\t-661,\n\t\t\t\t\t\t\t\t865,\n\t\t\t\t\t\t\t\t-515,\n\t\t\t\t\t\t\t\t866,\n\t\t\t\t\t\t\t\t-513,\n\t\t\t\t\t\t\t\t867,\n\t\t\t\t\t\t\t\t868,\n\t\t\t\t\t\t\t\t869\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05124\",\n\t\t\t\t\t\t\t\"GEN\": \"Wuppertal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t870,\n\t\t\t\t\t\t\t\t871,\n\t\t\t\t\t\t\t\t872,\n\t\t\t\t\t\t\t\t-417,\n\t\t\t\t\t\t\t\t873,\n\t\t\t\t\t\t\t\t-415,\n\t\t\t\t\t\t\t\t874,\n\t\t\t\t\t\t\t\t875,\n\t\t\t\t\t\t\t\t876,\n\t\t\t\t\t\t\t\t877,\n\t\t\t\t\t\t\t\t878,\n\t\t\t\t\t\t\t\t879,\n\t\t\t\t\t\t\t\t880\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05711\",\n\t\t\t\t\t\t\t\"GEN\": \"Bielefeld\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-332,\n\t\t\t\t\t\t\t\t881,\n\t\t\t\t\t\t\t\t-330,\n\t\t\t\t\t\t\t\t882,\n\t\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t\t883,\n\t\t\t\t\t\t\t\t884,\n\t\t\t\t\t\t\t\t885,\n\t\t\t\t\t\t\t\t-77,\n\t\t\t\t\t\t\t\t886,\n\t\t\t\t\t\t\t\t-108,\n\t\t\t\t\t\t\t\t887,\n\t\t\t\t\t\t\t\t-131,\n\t\t\t\t\t\t\t\t888,\n\t\t\t\t\t\t\t\t889,\n\t\t\t\t\t\t\t\t-128,\n\t\t\t\t\t\t\t\t890,\n\t\t\t\t\t\t\t\t-126,\n\t\t\t\t\t\t\t\t891,\n\t\t\t\t\t\t\t\t-124,\n\t\t\t\t\t\t\t\t892,\n\t\t\t\t\t\t\t\t-443,\n\t\t\t\t\t\t\t\t-822,\n\t\t\t\t\t\t\t\t893,\n\t\t\t\t\t\t\t\t-820,\n\t\t\t\t\t\t\t\t894\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12061\",\n\t\t\t\t\t\t\t\"GEN\": \"Dahme-Spreewald\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-858,\n\t\t\t\t\t\t\t\t895,\n\t\t\t\t\t\t\t\t-856,\n\t\t\t\t\t\t\t\t896,\n\t\t\t\t\t\t\t\t897,\n\t\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t\t898,\n\t\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t\t899,\n\t\t\t\t\t\t\t\t900,\n\t\t\t\t\t\t\t\t-681,\n\t\t\t\t\t\t\t\t901,\n\t\t\t\t\t\t\t\t902,\n\t\t\t\t\t\t\t\t-653,\n\t\t\t\t\t\t\t\t903,\n\t\t\t\t\t\t\t\t-863,\n\t\t\t\t\t\t\t\t904,\n\t\t\t\t\t\t\t\t-861,\n\t\t\t\t\t\t\t\t905,\n\t\t\t\t\t\t\t\t906\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05120\",\n\t\t\t\t\t\t\t\"GEN\": \"Remscheid\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t907,\n\t\t\t\t\t\t\t\t-433,\n\t\t\t\t\t\t\t\t908,\n\t\t\t\t\t\t\t\t909,\n\t\t\t\t\t\t\t\t-604,\n\t\t\t\t\t\t\t\t910,\n\t\t\t\t\t\t\t\t911,\n\t\t\t\t\t\t\t\t912,\n\t\t\t\t\t\t\t\t913,\n\t\t\t\t\t\t\t\t914,\n\t\t\t\t\t\t\t\t915,\n\t\t\t\t\t\t\t\t-570,\n\t\t\t\t\t\t\t\t916,\n\t\t\t\t\t\t\t\t-400,\n\t\t\t\t\t\t\t\t917\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05370\",\n\t\t\t\t\t\t\t\"GEN\": \"Heinsberg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t918,\n\t\t\t\t\t\t\t\t-322,\n\t\t\t\t\t\t\t\t919,\n\t\t\t\t\t\t\t\t-320,\n\t\t\t\t\t\t\t\t920,\n\t\t\t\t\t\t\t\t-318,\n\t\t\t\t\t\t\t\t921\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12053\",\n\t\t\t\t\t\t\t\"GEN\": \"Frankfurt (Oder)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t922,\n\t\t\t\t\t\t\t\t923,\n\t\t\t\t\t\t\t\t-747,\n\t\t\t\t\t\t\t\t924,\n\t\t\t\t\t\t\t\t-745,\n\t\t\t\t\t\t\t\t925,\n\t\t\t\t\t\t\t\t-548,\n\t\t\t\t\t\t\t\t926,\n\t\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t\t927,\n\t\t\t\t\t\t\t\t928,\n\t\t\t\t\t\t\t\t-565,\n\t\t\t\t\t\t\t\t929,\n\t\t\t\t\t\t\t\t-563,\n\t\t\t\t\t\t\t\t930,\n\t\t\t\t\t\t\t\t931,\n\t\t\t\t\t\t\t\t-915,\n\t\t\t\t\t\t\t\t932,\n\t\t\t\t\t\t\t\t-913\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05358\",\n\t\t\t\t\t\t\t\"GEN\": \"Düren\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-10,\n\t\t\t\t\t\t\t\t933,\n\t\t\t\t\t\t\t\t-588,\n\t\t\t\t\t\t\t\t934,\n\t\t\t\t\t\t\t\t935,\n\t\t\t\t\t\t\t\t936,\n\t\t\t\t\t\t\t\t937,\n\t\t\t\t\t\t\t\t938,\n\t\t\t\t\t\t\t\t939,\n\t\t\t\t\t\t\t\t940,\n\t\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t\t941,\n\t\t\t\t\t\t\t\t-12,\n\t\t\t\t\t\t\t\t942\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12065\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberhavel\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-577,\n\t\t\t\t\t\t\t\t944,\n\t\t\t\t\t\t\t\t-922,\n\t\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t\t945,\n\t\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t\t946,\n\t\t\t\t\t\t\t\t947,\n\t\t\t\t\t\t\t\t-334,\n\t\t\t\t\t\t\t\t948,\n\t\t\t\t\t\t\t\t-586,\n\t\t\t\t\t\t\t\t949,\n\t\t\t\t\t\t\t\t-584,\n\t\t\t\t\t\t\t\t950,\n\t\t\t\t\t\t\t\t-582,\n\t\t\t\t\t\t\t\t951,\n\t\t\t\t\t\t\t\t952,\n\t\t\t\t\t\t\t\t-579,\n\t\t\t\t\t\t\t\t953\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12064\",\n\t\t\t\t\t\t\t\"GEN\": \"Märkisch-Oderland\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-50,\n\t\t\t\t\t\t\t\t954,\n\t\t\t\t\t\t\t\t-48,\n\t\t\t\t\t\t\t\t955,\n\t\t\t\t\t\t\t\t956,\n\t\t\t\t\t\t\t\t957,\n\t\t\t\t\t\t\t\t958,\n\t\t\t\t\t\t\t\t959,\n\t\t\t\t\t\t\t\t-493,\n\t\t\t\t\t\t\t\t960,\n\t\t\t\t\t\t\t\t961\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05512\",\n\t\t\t\t\t\t\t\"GEN\": \"Bottrop\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t962,\n\t\t\t\t\t\t\t\t963,\n\t\t\t\t\t\t\t\t964,\n\t\t\t\t\t\t\t\t965,\n\t\t\t\t\t\t\t\t966,\n\t\t\t\t\t\t\t\t967,\n\t\t\t\t\t\t\t\t968,\n\t\t\t\t\t\t\t\t-497,\n\t\t\t\t\t\t\t\t969,\n\t\t\t\t\t\t\t\t-495,\n\t\t\t\t\t\t\t\t970,\n\t\t\t\t\t\t\t\t-959\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05119\",\n\t\t\t\t\t\t\t\"GEN\": \"Oberhausen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-499,\n\t\t\t\t\t\t\t\t971,\n\t\t\t\t\t\t\t\t-968,\n\t\t\t\t\t\t\t\t972,\n\t\t\t\t\t\t\t\t973,\n\t\t\t\t\t\t\t\t974,\n\t\t\t\t\t\t\t\t975,\n\t\t\t\t\t\t\t\t-335,\n\t\t\t\t\t\t\t\t976,\n\t\t\t\t\t\t\t\t-344,\n\t\t\t\t\t\t\t\t977,\n\t\t\t\t\t\t\t\t-555,\n\t\t\t\t\t\t\t\t978,\n\t\t\t\t\t\t\t\t-553,\n\t\t\t\t\t\t\t\t979,\n\t\t\t\t\t\t\t\t-504,\n\t\t\t\t\t\t\t\t980,\n\t\t\t\t\t\t\t\t-502,\n\t\t\t\t\t\t\t\t981,\n\t\t\t\t\t\t\t\t982\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05112\",\n\t\t\t\t\t\t\t\"GEN\": \"Duisburg\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-802,\n\t\t\t\t\t\t\t\t983,\n\t\t\t\t\t\t\t\t-356,\n\t\t\t\t\t\t\t\t984,\n\t\t\t\t\t\t\t\t-354,\n\t\t\t\t\t\t\t\t985,\n\t\t\t\t\t\t\t\t986,\n\t\t\t\t\t\t\t\t987,\n\t\t\t\t\t\t\t\t-532,\n\t\t\t\t\t\t\t\t988,\n\t\t\t\t\t\t\t\t989,\n\t\t\t\t\t\t\t\t990,\n\t\t\t\t\t\t\t\t-964,\n\t\t\t\t\t\t\t\t991,\n\t\t\t\t\t\t\t\t-957,\n\t\t\t\t\t\t\t\t992,\n\t\t\t\t\t\t\t\t993\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05113\",\n\t\t\t\t\t\t\t\"GEN\": \"Essen\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t994,\n\t\t\t\t\t\t\t\t995,\n\t\t\t\t\t\t\t\t996,\n\t\t\t\t\t\t\t\t997,\n\t\t\t\t\t\t\t\t998,\n\t\t\t\t\t\t\t\t999,\n\t\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t\t1001,\n\t\t\t\t\t\t\t\t-422,\n\t\t\t\t\t\t\t\t1002,\n\t\t\t\t\t\t\t\t1003,\n\t\t\t\t\t\t\t\t-419,\n\t\t\t\t\t\t\t\t1004,\n\t\t\t\t\t\t\t\t-872,\n\t\t\t\t\t\t\t\t1005,\n\t\t\t\t\t\t\t\t-881,\n\t\t\t\t\t\t\t\t1006,\n\t\t\t\t\t\t\t\t1007,\n\t\t\t\t\t\t\t\t1008,\n\t\t\t\t\t\t\t\t1009\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05758\",\n\t\t\t\t\t\t\t\"GEN\": \"Herford\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-424,\n\t\t\t\t\t\t\t\t1010,\n\t\t\t\t\t\t\t\t-1001,\n\t\t\t\t\t\t\t\t1011,\n\t\t\t\t\t\t\t\t-999,\n\t\t\t\t\t\t\t\t1012,\n\t\t\t\t\t\t\t\t-997,\n\t\t\t\t\t\t\t\t1013,\n\t\t\t\t\t\t\t\t-995,\n\t\t\t\t\t\t\t\t1014\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05770\",\n\t\t\t\t\t\t\t\"GEN\": \"Minden-Lübbecke\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t1015,\n\t\t\t\t\t\t\t\t-18,\n\t\t\t\t\t\t\t\t1016,\n\t\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t\t1017,\n\t\t\t\t\t\t\t\t-940,\n\t\t\t\t\t\t\t\t1018,\n\t\t\t\t\t\t\t\t-938,\n\t\t\t\t\t\t\t\t1019,\n\t\t\t\t\t\t\t\t-936,\n\t\t\t\t\t\t\t\t1020,\n\t\t\t\t\t\t\t\t-476,\n\t\t\t\t\t\t\t\t1021,\n\t\t\t\t\t\t\t\t-474,\n\t\t\t\t\t\t\t\t1022,\n\t\t\t\t\t\t\t\t-481,\n\t\t\t\t\t\t\t\t1023,\n\t\t\t\t\t\t\t\t-479,\n\t\t\t\t\t\t\t\t1024,\n\t\t\t\t\t\t\t\t-184,\n\t\t\t\t\t\t\t\t1025,\n\t\t\t\t\t\t\t\t-182,\n\t\t\t\t\t\t\t\t1026,\n\t\t\t\t\t\t\t\t-626,\n\t\t\t\t\t\t\t\t1027,\n\t\t\t\t\t\t\t\t-217,\n\t\t\t\t\t\t\t\t1028,\n\t\t\t\t\t\t\t\t-215,\n\t\t\t\t\t\t\t\t1029,\n\t\t\t\t\t\t\t\t-620,\n\t\t\t\t\t\t\t\t1030,\n\t\t\t\t\t\t\t\t-22,\n\t\t\t\t\t\t\t\t1031,\n\t\t\t\t\t\t\t\t-20\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"12063\",\n\t\t\t\t\t\t\t\"GEN\": \"Havelland\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-1009,\n\t\t\t\t\t\t\t\t1032,\n\t\t\t\t\t\t\t\t-878,\n\t\t\t\t\t\t\t\t1033,\n\t\t\t\t\t\t\t\t-876,\n\t\t\t\t\t\t\t\t1034,\n\t\t\t\t\t\t\t\t-413,\n\t\t\t\t\t\t\t\t1035,\n\t\t\t\t\t\t\t\t-83,\n\t\t\t\t\t\t\t\t1036,\n\t\t\t\t\t\t\t\t-106,\n\t\t\t\t\t\t\t\t1037,\n\t\t\t\t\t\t\t\t-104,\n\t\t\t\t\t\t\t\t1038,\n\t\t\t\t\t\t\t\t-256,\n\t\t\t\t\t\t\t\t1039,\n\t\t\t\t\t\t\t\t-712,\n\t\t\t\t\t\t\t\t1040\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05754\",\n\t\t\t\t\t\t\t\"GEN\": \"Gütersloh\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-990,\n\t\t\t\t\t\t\t\t1041,\n\t\t\t\t\t\t\t\t-530,\n\t\t\t\t\t\t\t\t1042,\n\t\t\t\t\t\t\t\t1043,\n\t\t\t\t\t\t\t\t-974,\n\t\t\t\t\t\t\t\t1044,\n\t\t\t\t\t\t\t\t-966,\n\t\t\t\t\t\t\t\t1045\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05117\",\n\t\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-372,\n\t\t\t\t\t\t\t\t1046,\n\t\t\t\t\t\t\t\t-370,\n\t\t\t\t\t\t\t\t1047,\n\t\t\t\t\t\t\t\t1048,\n\t\t\t\t\t\t\t\t-284,\n\t\t\t\t\t\t\t\t1049,\n\t\t\t\t\t\t\t\t-282,\n\t\t\t\t\t\t\t\t1050,\n\t\t\t\t\t\t\t\t-280,\n\t\t\t\t\t\t\t\t1051,\n\t\t\t\t\t\t\t\t-278,\n\t\t\t\t\t\t\t\t1052,\n\t\t\t\t\t\t\t\t-276,\n\t\t\t\t\t\t\t\t1053,\n\t\t\t\t\t\t\t\t1054,\n\t\t\t\t\t\t\t\t1055,\n\t\t\t\t\t\t\t\t-302,\n\t\t\t\t\t\t\t\t1056,\n\t\t\t\t\t\t\t\t1057,\n\t\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t\t1058,\n\t\t\t\t\t\t\t\t1059,\n\t\t\t\t\t\t\t\t1060,\n\t\t\t\t\t\t\t\t1061,\n\t\t\t\t\t\t\t\t-148,\n\t\t\t\t\t\t\t\t1062,\n\t\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t\t1063,\n\t\t\t\t\t\t\t\t-178,\n\t\t\t\t\t\t\t\t1064,\n\t\t\t\t\t\t\t\t-852,\n\t\t\t\t\t\t\t\t1065,\n\t\t\t\t\t\t\t\t1066,\n\t\t\t\t\t\t\t\t-868,\n\t\t\t\t\t\t\t\t-534,\n\t\t\t\t\t\t\t\t1067,\n\t\t\t\t\t\t\t\t-987,\n\t\t\t\t\t\t\t\t1068,\n\t\t\t\t\t\t\t\t-352,\n\t\t\t\t\t\t\t\t1069,\n\t\t\t\t\t\t\t\t-350,\n\t\t\t\t\t\t\t\t1070,\n\t\t\t\t\t\t\t\t-348,\n\t\t\t\t\t\t\t\t1071\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"AGS\": \"05954\",\n\t\t\t\t\t\t\t\"GEN\": \"Ennepe-Ruhr-Kreis\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"crs\": {\n\t\t\t\"type\": \"name\",\n\t\t\t\"properties\": {\n\t\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t\t}\n\t\t}\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"f_mean,f_o5,f_sum,f_u1,f_u2,f_u5,m_mean,m_o5,m_sum,m_u1,m_u2,m_u5,t_mean,t_o5,t_sum,t_u1,t_u2,t_u5,state,name,ags,f_o5_rel\\n834,2302,19699,8174,3898,5325,692,1223,14122,6703,3085,3111,775,3525,33821,14877,6983,8436,05,Bielefeld,05711,11.7\\n929,2594,18469,7084,3399,5392,750,1322,12907,5875,2615,3095,855,3916,31376,12959,6014,8487,05,Bochum,05911,14.0\\n879,2588,20145,8105,3967,5485,787,1640,14519,6472,2853,3554,840,4228,34664,14577,6820,9039,05,Bonn,05314,12.8\\n1050,935,5689,1797,1068,1889,859,490,3747,1481,731,1045,974,1425,9436,3278,1799,2934,05,Bottrop,05512,16.4\\n885,5363,40959,16411,7981,11204,784,3226,28889,12933,5583,7147,843,8589,69848,29344,13564,18351,05,Düsseldorf,05111,13.1\\n902,3879,30263,11560,6114,8710,765,2334,20892,9871,3980,4707,846,6213,51155,21431,10094,13417,05,Dortmund,05913,12.8\\n979,3028,20617,7193,3855,6541,810,1695,14141,6295,2610,3541,910,4723,34758,13488,6465,10082,05,Duisburg,05112,14.7\\n922,4246,31846,11848,6111,9641,778,2399,22044,9868,4258,5519,863,6645,53890,21716,10369,15160,05,Essen,05113,13.3\\n976,1932,12975,4658,2467,3918,813,1117,9582,4126,1914,2425,907,3049,22557,8784,4381,6343,05,Gelsenkirchen,05513,14.9\\n973,1535,9986,3491,2028,2932,836,826,6808,2701,1405,1876,917,2361,16794,6192,3433,4808,05,Hagen,05914,15.4\\n989,1282,8922,3035,1612,2993,850,670,6281,2470,1192,1949,931,1952,15203,5505,2804,4942,05,Hamm,05915,14.4\\n1106,1080,5743,1831,1090,1742,864,547,4021,1555,887,1032,1006,1627,9764,3386,1977,2774,05,Herne,05916,18.8\\n1007,1827,11510,4062,2176,3445,901,1074,7590,3094,1392,2030,965,2901,19100,7156,3568,5475,05,Krefeld,05114,15.9\\n844,7515,61128,25803,11839,15971,736,4579,44928,21157,8706,10486,798,12094,106056,46960,20545,26457,05,Köln,05315,12.3\\n988,1103,7105,2543,1319,2140,851,556,4356,1934,753,1113,936,1659,11461,4477,2072,3253,05,Leverkusen,05316,15.5\\n1061,4702,27861,8674,5331,9154,862,2177,17482,6879,3639,4787,984,6879,45343,15553,8970,13941,05,Borken,05554,16.9\\n1051,2133,12386,4088,2425,3740,877,958,7452,2990,1469,2035,986,3091,19838,7078,3894,5775,05,Coesfeld,05558,17.2\\n1024,2387,15675,5037,2985,5266,882,1228,9269,3739,1721,2581,972,3615,24944,8776,4706,7847,05,Düren,05358,15.2\\n1029,2508,15254,5172,2904,4670,883,1261,9281,3754,1771,2495,974,3769,24535,8926,4675,7165,05,Ennepe-Ruhr-Kreis,05954,16.4\\n1022,1519,10354,3285,1932,3618,895,801,6141,2394,1148,1798,974,2320,16495,5679,3080,5416,05,Euskirchen,05366,14.7\\n958,3125,22634,7771,4433,7305,802,1470,14172,5885,2856,3961,898,4595,36806,13656,7289,11266,05,Gütersloh,05754,13.8\\n1018,2309,14208,4748,2680,4471,896,1183,8358,3278,1599,2298,973,3492,22566,8026,4279,6769,05,Heinsberg,05370,16.3\\n984,1766,11886,4172,2258,3690,814,895,7822,3346,1572,2009,917,2661,19708,7518,3830,5699,05,Herford,05758,14.9\\n997,2867,18835,6990,3286,5692,852,1384,11207,4713,2158,2952,943,4251,30042,11703,5444,8644,05,Hochsauerlandkreis,05958,15.2\\n1068,1342,7841,2640,1328,2531,885,516,3934,1638,729,1051,1007,1858,11775,4278,2057,3582,05,Höxter,05762,17.1\\n1036,2983,18798,6115,3524,6176,900,1571,11625,4591,2205,3258,984,4554,30423,10706,5729,9434,05,Kleve,05154,15.9\\n987,2437,15886,5715,2860,4874,771,1092,10113,4840,1723,2458,903,3529,25999,10555,4583,7332,05,Lippe,05766,15.3\\n983,3517,23760,8331,4594,7318,828,1666,14399,6053,2907,3773,925,5183,38159,14384,7501,11091,05,Märkischer Kreis,05962,14.8\\n1021,3638,22645,7720,4095,7192,871,2118,15981,6578,2980,4305,959,5756,38626,14298,7075,11497,05,Mettmann,05158,16.1\\n946,2282,16232,5756,3219,4975,789,1071,9664,4157,2021,2415,887,3353,25896,9913,5240,7390,05,Minden-Lübbecke,05770,14.1\\n1011,2576,16614,5553,3169,5316,876,1319,10192,4047,1995,2831,959,3895,26806,9600,5164,8147,05,Oberbergischer Kreis,05374,15.5\\n1091,1508,9165,2693,1734,3230,933,726,5237,2067,956,1488,1034,2234,14402,4760,2690,4718,05,Olpe,05966,16.5\\n978,2706,18918,6651,3546,6015,790,1307,12268,5394,2460,3107,904,4013,31186,12045,6006,9122,05,Paderborn,05774,14.3\\n1076,4952,29438,9282,5357,9847,944,2809,18978,7182,3487,5500,1024,7761,48416,16464,8844,15347,05,Recklinghausen,05562,16.8\\n959,3553,24147,8539,4629,7426,811,1882,15910,6691,3466,3871,900,5435,40057,15230,8095,11297,05,Rhein-Erft-Kreis,05362,14.7\\n1022,3289,20487,6966,3712,6520,875,1691,12978,5199,2516,3572,965,4980,33465,12165,6228,10092,05,Rhein-Kreis Neuss,05162,16.1\\n927,4262,30461,11374,5996,8829,804,2352,19840,8727,3953,4808,878,6614,50301,20101,9949,13637,05,Rhein-Sieg-Kreis,05382,14.0\\n1024,2349,14224,4773,2767,4335,849,1140,9341,3779,1783,2639,954,3489,23565,8552,4550,6974,05,Rheinisch-Bergischer Kreis,05378,16.5\\n963,2528,18519,6300,3633,6058,803,1209,11012,4611,2173,3019,903,3737,29531,10911,5806,9077,05,Siegen-Wittgenstein,05970,13.7\\n1000,2671,17835,5906,3335,5923,849,1239,10600,4325,2033,3003,944,3910,28435,10231,5368,8926,05,Soest,05974,15.0\\n1020,4311,27839,9188,5205,9135,862,2265,18646,7447,3654,5280,957,6576,46485,16635,8859,14415,05,Steinfurt,05566,15.5\\n1039,3196,18943,6132,3555,6060,887,1743,12538,4928,2275,3592,979,4939,31481,11060,5830,9652,05,Unna,05978,16.9\\n1041,2620,15590,5027,2948,4995,882,1355,10055,4072,1818,2810,978,3975,25645,9099,4766,7805,05,Viersen,05166,16.8\\n1058,2629,15542,4838,2945,5130,891,1347,9937,3801,1937,2852,993,3976,25479,8639,4882,7982,05,Warendorf,05570,16.9\\n1003,3978,26412,8812,4867,8755,868,2019,16139,6377,3106,4637,952,5997,42551,15189,7973,13392,05,Wesel,05170,15.1\\n1025,1308,8097,2754,1494,2541,899,752,5480,2165,1077,1486,974,2060,13577,4919,2571,4027,05,Mülheim an der Ruhr,05117,16.2\\n808,2493,21353,9315,4149,5396,711,1444,14882,7195,2918,3325,768,3937,36235,16510,7067,8721,05,Münster,05515,11.7\\n922,2318,16323,6535,3020,4450,798,1177,9971,4586,1850,2358,875,3495,26294,11121,4870,6808,05,Mönchengladbach,05116,14.2\\n933,1551,11833,4092,2712,3478,800,755,6878,2825,1522,1776,884,2306,18711,6917,4234,5254,05,Oberhausen,05119,13.1\\n1018,979,6655,2223,1235,2218,875,515,4040,1602,793,1130,964,1494,10695,3825,2028,3348,05,Remscheid,05120,14.7\\n1033,1238,7440,2575,1386,2241,877,701,5215,2148,1005,1361,969,1939,12655,4723,2391,3602,05,Solingen,05122,16.6\\n921,4506,32250,12602,5924,9218,734,2597,26158,12396,5112,6053,837,7103,58408,24998,11036,15271,05,Städteregion Aachen,05334,14.0\\n953,2631,18176,6457,3591,5497,822,1490,12675,5360,2485,3340,900,4121,30851,11817,6076,8837,05,Wuppertal,05124,14.5\\n864,473,3824,1477,766,1108,751,333,3412,1484,689,906,811,806,7236,2961,1455,2014,12,Barnim,12060,12.4\\n824,210,1746,632,423,481,796,201,1692,652,386,453,810,411,3438,1284,809,934,12,Brandenburg an der Havel,12051,12.0\\n819,610,4475,1978,931,956,722,431,3951,1897,787,836,774,1041,8426,3875,1718,1792,12,Cottbus,12052,13.6\\n783,246,2229,960,489,534,713,161,1784,792,397,434,752,407,4013,1752,886,968,12,Frankfurt (Oder),12053,11.0\\n851,472,3568,1426,775,895,778,364,3203,1468,645,726,816,836,6771,2894,1420,1621,12,Dahme-Spreewald,12061,13.2\\n1038,474,2592,832,468,818,913,280,1768,683,328,477,987,754,4360,1515,796,1295,12,Elbe-Elster,12062,18.3\\n871,499,3654,1439,693,1023,859,415,2965,1248,548,754,866,914,6619,2687,1241,1777,12,Havelland,12063,13.7\\n920,553,3972,1467,769,1183,761,379,3458,1549,656,874,846,932,7430,3016,1425,2057,12,Märkisch-Oderland,12064,13.9\\n887,636,4544,1727,955,1226,765,426,4079,1727,849,1077,829,1062,8623,3454,1804,2303,12,Oberhavel,12065,14.0\\n945,412,2796,966,572,846,837,249,1865,774,365,477,902,661,4661,1740,937,1323,12,Oberspreewald-Lausitz,12066,14.7\\n894,479,3687,1317,763,1128,787,315,3221,1294,680,932,844,794,6908,2611,1443,2060,12,Oder-Spree,12067,13.0\\n862,299,2159,826,486,548,775,183,1729,702,384,460,823,482,3888,1528,870,1008,12,Ostprignitz-Ruppin,12068,13.8\\n743,615,8031,3304,1674,2438,749,470,4735,2158,886,1221,745,1085,12766,5462,2560,3659,12,Potsdam-Mittelmark,12069,7.7\\n940,295,1946,711,365,575,857,200,1562,605,296,461,903,495,3508,1316,661,1036,12,Prignitz,12070,15.2\\n998,439,2508,881,464,724,876,233,1765,697,338,497,948,672,4273,1578,802,1221,12,Spree-Neiße,12071,17.5\\n934,496,3323,1219,648,960,815,363,3108,1266,637,842,877,859,6431,2485,1285,1802,12,Teltow-Fläming,12072,14.9\\n649,437,6277,2971,1366,1503,644,334,5142,2401,1063,1344,647,771,11419,5372,2429,2847,12,Potsdam,12054,7.0\\n878,406,2875,1140,575,754,804,269,2132,924,423,516,846,675,5007,2064,998,1270,12,Uckermark,12073,14.1\\n\"\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.topojson = global.topojson || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar transform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2, n = input.length, output = new Array(n);\n\t    output[0] = (x0 += input[0]) * kx + dx;\n\t    output[1] = (y0 += input[1]) * ky + dy;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar bbox = function(topology) {\n\t  var t = transform(topology.transform), key,\n\t      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\t\n\t  function bboxPoint(p) {\n\t    p = t(p);\n\t    if (p[0] < x0) x0 = p[0];\n\t    if (p[0] > x1) x1 = p[0];\n\t    if (p[1] < y0) y0 = p[1];\n\t    if (p[1] > y1) y1 = p[1];\n\t  }\n\t\n\t  function bboxGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n\t      case \"Point\": bboxPoint(o.coordinates); break;\n\t      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n\t    }\n\t  }\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    var i = -1, n = arc.length, p;\n\t    while (++i < n) {\n\t      p = t(arc[i], i);\n\t      if (p[0] < x0) x0 = p[0];\n\t      if (p[0] > x1) x1 = p[0];\n\t      if (p[1] < y0) y0 = p[1];\n\t      if (p[1] > y1) y1 = p[1];\n\t    }\n\t  });\n\t\n\t  for (key in topology.objects) {\n\t    bboxGeometry(topology.objects[key]);\n\t  }\n\t\n\t  return [x0, y0, x1, y1];\n\t};\n\t\n\tvar reverse = function(array, n) {\n\t  var t, j = array.length, i = j - n;\n\t  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n\t};\n\t\n\tvar feature = function(topology, o) {\n\t  return o.type === \"GeometryCollection\"\n\t      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n\t      : feature$1(topology, o);\n\t};\n\t\n\tfunction feature$1(topology, o) {\n\t  var id = o.id,\n\t      bbox = o.bbox,\n\t      properties = o.properties == null ? {} : o.properties,\n\t      geometry = object(topology, o);\n\t  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n\t      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n\t      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n\t}\n\t\n\tfunction object(topology, o) {\n\t  var transformPoint = transform(topology.transform),\n\t      arcs = topology.arcs;\n\t\n\t  function arc(i, points) {\n\t    if (points.length) points.pop();\n\t    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n\t      points.push(transformPoint(a[k], k));\n\t    }\n\t    if (i < 0) reverse(points, n);\n\t  }\n\t\n\t  function point(p) {\n\t    return transformPoint(p);\n\t  }\n\t\n\t  function line(arcs) {\n\t    var points = [];\n\t    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n\t    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\t    return points;\n\t  }\n\t\n\t  function ring(arcs) {\n\t    var points = line(arcs);\n\t    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n\t    return points;\n\t  }\n\t\n\t  function polygon(arcs) {\n\t    return arcs.map(ring);\n\t  }\n\t\n\t  function geometry(o) {\n\t    var type = o.type, coordinates;\n\t    switch (type) {\n\t      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n\t      case \"Point\": coordinates = point(o.coordinates); break;\n\t      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n\t      case \"LineString\": coordinates = line(o.arcs); break;\n\t      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n\t      case \"Polygon\": coordinates = polygon(o.arcs); break;\n\t      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n\t      default: return null;\n\t    }\n\t    return {type: type, coordinates: coordinates};\n\t  }\n\t\n\t  return geometry(o);\n\t}\n\t\n\tvar stitch = function(topology, arcs) {\n\t  var stitchedArcs = {},\n\t      fragmentByStart = {},\n\t      fragmentByEnd = {},\n\t      fragments = [],\n\t      emptyIndex = -1;\n\t\n\t  // Stitch empty arcs first, since they may be subsumed by other arcs.\n\t  arcs.forEach(function(i, j) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], t;\n\t    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n\t      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n\t    }\n\t  });\n\t\n\t  arcs.forEach(function(i) {\n\t    var e = ends(i),\n\t        start = e[0],\n\t        end = e[1],\n\t        f, g;\n\t\n\t    if (f = fragmentByEnd[start]) {\n\t      delete fragmentByEnd[f.end];\n\t      f.push(i);\n\t      f.end = end;\n\t      if (g = fragmentByStart[end]) {\n\t        delete fragmentByStart[g.start];\n\t        var fg = g === f ? f : f.concat(g);\n\t        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else if (f = fragmentByStart[end]) {\n\t      delete fragmentByStart[f.start];\n\t      f.unshift(i);\n\t      f.start = start;\n\t      if (g = fragmentByEnd[start]) {\n\t        delete fragmentByEnd[g.end];\n\t        var gf = g === f ? f : g.concat(f);\n\t        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n\t      } else {\n\t        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n\t      }\n\t    } else {\n\t      f = [i];\n\t      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n\t    }\n\t  });\n\t\n\t  function ends(i) {\n\t    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n\t    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n\t    else p1 = arc[arc.length - 1];\n\t    return i < 0 ? [p1, p0] : [p0, p1];\n\t  }\n\t\n\t  function flush(fragmentByEnd, fragmentByStart) {\n\t    for (var k in fragmentByEnd) {\n\t      var f = fragmentByEnd[k];\n\t      delete fragmentByStart[f.start];\n\t      delete f.start;\n\t      delete f.end;\n\t      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n\t      fragments.push(f);\n\t    }\n\t  }\n\t\n\t  flush(fragmentByEnd, fragmentByStart);\n\t  flush(fragmentByStart, fragmentByEnd);\n\t  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\t\n\t  return fragments;\n\t};\n\t\n\tvar mesh = function(topology) {\n\t  return object(topology, meshArcs.apply(this, arguments));\n\t};\n\t\n\tfunction meshArcs(topology, object$$1, filter) {\n\t  var arcs, i, n;\n\t  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n\t  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n\t  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n\t}\n\t\n\tfunction extractArcs(topology, object$$1, filter) {\n\t  var arcs = [],\n\t      geomsByArc = [],\n\t      geom;\n\t\n\t  function extract0(i) {\n\t    var j = i < 0 ? ~i : i;\n\t    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n\t  }\n\t\n\t  function extract1(arcs) {\n\t    arcs.forEach(extract0);\n\t  }\n\t\n\t  function extract2(arcs) {\n\t    arcs.forEach(extract1);\n\t  }\n\t\n\t  function extract3(arcs) {\n\t    arcs.forEach(extract2);\n\t  }\n\t\n\t  function geometry(o) {\n\t    switch (geom = o, o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"LineString\": extract1(o.arcs); break;\n\t      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n\t      case \"MultiPolygon\": extract3(o.arcs); break;\n\t    }\n\t  }\n\t\n\t  geometry(object$$1);\n\t\n\t  geomsByArc.forEach(filter == null\n\t      ? function(geoms) { arcs.push(geoms[0].i); }\n\t      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\t\n\t  return arcs;\n\t}\n\t\n\tfunction planarRingArea(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area); // Note: doubled area!\n\t}\n\t\n\tvar merge = function(topology) {\n\t  return object(topology, mergeArcs.apply(this, arguments));\n\t};\n\t\n\tfunction mergeArcs(topology, objects) {\n\t  var polygonsByArc = {},\n\t      polygons = [],\n\t      groups = [];\n\t\n\t  objects.forEach(geometry);\n\t\n\t  function geometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n\t      case \"Polygon\": extract(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n\t    }\n\t  }\n\t\n\t  function extract(polygon) {\n\t    polygon.forEach(function(ring) {\n\t      ring.forEach(function(arc) {\n\t        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n\t      });\n\t    });\n\t    polygons.push(polygon);\n\t  }\n\t\n\t  function area(ring) {\n\t    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n\t  }\n\t\n\t  polygons.forEach(function(polygon) {\n\t    if (!polygon._) {\n\t      var group = [],\n\t          neighbors = [polygon];\n\t      polygon._ = 1;\n\t      groups.push(group);\n\t      while (polygon = neighbors.pop()) {\n\t        group.push(polygon);\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n\t              if (!polygon._) {\n\t                polygon._ = 1;\n\t                neighbors.push(polygon);\n\t              }\n\t            });\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  polygons.forEach(function(polygon) {\n\t    delete polygon._;\n\t  });\n\t\n\t  return {\n\t    type: \"MultiPolygon\",\n\t    arcs: groups.map(function(polygons) {\n\t      var arcs = [], n;\n\t\n\t      // Extract the exterior (unique) arcs.\n\t      polygons.forEach(function(polygon) {\n\t        polygon.forEach(function(ring) {\n\t          ring.forEach(function(arc) {\n\t            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n\t              arcs.push(arc);\n\t            }\n\t          });\n\t        });\n\t      });\n\t\n\t      // Stitch the arcs into one or more rings.\n\t      arcs = stitch(topology, arcs);\n\t\n\t      // If more than one ring is returned,\n\t      // at most one of these rings can be the exterior;\n\t      // choose the one with the greatest absolute area.\n\t      if ((n = arcs.length) > 1) {\n\t        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n\t          if ((ki = area(arcs[i])) > k) {\n\t            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n\t          }\n\t        }\n\t      }\n\t\n\t      return arcs;\n\t    })\n\t  };\n\t}\n\t\n\tvar bisect = function(a, x) {\n\t  var lo = 0, hi = a.length;\n\t  while (lo < hi) {\n\t    var mid = lo + hi >>> 1;\n\t    if (a[mid] < x) lo = mid + 1;\n\t    else hi = mid;\n\t  }\n\t  return lo;\n\t};\n\t\n\tvar neighbors = function(objects) {\n\t  var indexesByArc = {}, // arc index -> array of object indexes\n\t      neighbors = objects.map(function() { return []; });\n\t\n\t  function line(arcs, i) {\n\t    arcs.forEach(function(a) {\n\t      if (a < 0) a = ~a;\n\t      var o = indexesByArc[a];\n\t      if (o) o.push(i);\n\t      else indexesByArc[a] = [i];\n\t    });\n\t  }\n\t\n\t  function polygon(arcs, i) {\n\t    arcs.forEach(function(arc) { line(arc, i); });\n\t  }\n\t\n\t  function geometry(o, i) {\n\t    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n\t    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n\t  }\n\t\n\t  var geometryType = {\n\t    LineString: line,\n\t    MultiLineString: polygon,\n\t    Polygon: polygon,\n\t    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n\t  };\n\t\n\t  objects.forEach(geometry);\n\t\n\t  for (var i in indexesByArc) {\n\t    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n\t      for (var k = j + 1; k < m; ++k) {\n\t        var ij = indexes[j], ik = indexes[k], n;\n\t        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n\t        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n\t      }\n\t    }\n\t  }\n\t\n\t  return neighbors;\n\t};\n\t\n\tvar untransform = function(transform) {\n\t  if (transform == null) return identity;\n\t  var x0,\n\t      y0,\n\t      kx = transform.scale[0],\n\t      ky = transform.scale[1],\n\t      dx = transform.translate[0],\n\t      dy = transform.translate[1];\n\t  return function(input, i) {\n\t    if (!i) x0 = y0 = 0;\n\t    var j = 2,\n\t        n = input.length,\n\t        output = new Array(n),\n\t        x1 = Math.round((input[0] - dx) / kx),\n\t        y1 = Math.round((input[1] - dy) / ky);\n\t    output[0] = x1 - x0, x0 = x1;\n\t    output[1] = y1 - y0, y0 = y1;\n\t    while (j < n) output[j] = input[j], ++j;\n\t    return output;\n\t  };\n\t};\n\t\n\tvar quantize = function(topology, transform) {\n\t  if (topology.transform) throw new Error(\"already quantized\");\n\t\n\t  if (!transform || !transform.scale) {\n\t    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n\t    box = topology.bbox || bbox(topology);\n\t    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n\t    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n\t  } else {\n\t    box = topology.bbox;\n\t  }\n\t\n\t  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\t\n\t  function quantizePoint(point) {\n\t    return t(point);\n\t  }\n\t\n\t  function quantizeGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n\t      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n\t      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function quantizeArc(input) {\n\t    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n\t    output[0] = t(input[0], 0);\n\t    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n\t    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n\t    output.length = j;\n\t    return output;\n\t  }\n\t\n\t  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: box,\n\t    transform: transform,\n\t    objects: outputs,\n\t    arcs: topology.arcs.map(quantizeArc)\n\t  };\n\t};\n\t\n\t// Computes the bounding box of the specified hash of GeoJSON objects.\n\tvar bounds = function(objects) {\n\t  var x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  function boundGeometry(geometry) {\n\t    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var boundGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n\t    Point: function(o) { boundPoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n\t    LineString: function(o) { boundLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n\t    Polygon: function(o) { o.arcs.forEach(boundLine); },\n\t    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n\t  };\n\t\n\t  function boundPoint(coordinates) {\n\t    var x = coordinates[0],\n\t        y = coordinates[1];\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  function boundLine(coordinates) {\n\t    coordinates.forEach(boundPoint);\n\t  }\n\t\n\t  function boundMultiLine(coordinates) {\n\t    coordinates.forEach(boundLine);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    boundGeometry(objects[key]);\n\t  }\n\t\n\t  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n\t};\n\t\n\tvar hashset = function(size, hash, equal, type, empty) {\n\t  if (arguments.length === 3) {\n\t    type = Array;\n\t    empty = null;\n\t  }\n\t\n\t  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    store[i] = empty;\n\t  }\n\t\n\t  function add(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) throw new Error(\"full hashset\");\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    store[index] = value;\n\t    return true;\n\t  }\n\t\n\t  function has(value) {\n\t    var index = hash(value) & mask,\n\t        match = store[index],\n\t        collisions = 0;\n\t    while (match != empty) {\n\t      if (equal(match, value)) return true;\n\t      if (++collisions >= size) break;\n\t      match = store[index = (index + 1) & mask];\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function values() {\n\t    var values = [];\n\t    for (var i = 0, n = store.length; i < n; ++i) {\n\t      var match = store[i];\n\t      if (match != empty) values.push(match);\n\t    }\n\t    return values;\n\t  }\n\t\n\t  return {\n\t    add: add,\n\t    has: has,\n\t    values: values\n\t  };\n\t};\n\t\n\tvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n\t  if (arguments.length === 3) {\n\t    keyType = valueType = Array;\n\t    keyEmpty = null;\n\t  }\n\t\n\t  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n\t      valstore = new valueType(size),\n\t      mask = size - 1;\n\t\n\t  for (var i = 0; i < size; ++i) {\n\t    keystore[i] = keyEmpty;\n\t  }\n\t\n\t  function set(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index] = value;\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function maybeSet(key, value) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) throw new Error(\"full hashmap\");\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    keystore[index] = key;\n\t    valstore[index] = value;\n\t    return value;\n\t  }\n\t\n\t  function get(key, missingValue) {\n\t    var index = hash(key) & mask,\n\t        matchKey = keystore[index],\n\t        collisions = 0;\n\t    while (matchKey != keyEmpty) {\n\t      if (equal(matchKey, key)) return valstore[index];\n\t      if (++collisions >= size) break;\n\t      matchKey = keystore[index = (index + 1) & mask];\n\t    }\n\t    return missingValue;\n\t  }\n\t\n\t  function keys() {\n\t    var keys = [];\n\t    for (var i = 0, n = keystore.length; i < n; ++i) {\n\t      var matchKey = keystore[i];\n\t      if (matchKey != keyEmpty) keys.push(matchKey);\n\t    }\n\t    return keys;\n\t  }\n\t\n\t  return {\n\t    set: set,\n\t    maybeSet: maybeSet, // set if unset\n\t    get: get,\n\t    keys: keys\n\t  };\n\t};\n\t\n\tvar equalPoint = function(pointA, pointB) {\n\t  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n\t};\n\t\n\t// TODO if quantized, use simpler Int32 hashing?\n\t\n\tvar buffer = new ArrayBuffer(16);\n\tvar floats = new Float64Array(buffer);\n\tvar uints = new Uint32Array(buffer);\n\t\n\tvar hashPoint = function(point) {\n\t  floats[0] = point[0];\n\t  floats[1] = point[1];\n\t  var hash = uints[0] ^ uints[1];\n\t  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n\t  return hash & 0x7fffffff;\n\t};\n\t\n\t// Given an extracted (pre-)topology, identifies all of the junctions. These are\n\t// the points at which arcs (lines or rings) will need to be cut so that each\n\t// arc is represented uniquely.\n\t//\n\t// A junction is a point where at least one arc deviates from another arc going\n\t// through the same point. For example, consider the point B. If there is a arc\n\t// through ABC and another arc through CBA, then B is not a junction because in\n\t// both cases the adjacent point pairs are {A,C}. However, if there is an\n\t// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n\t//\n\t// For a closed ring ABCA, the first point A’s adjacent points are the second\n\t// and last point {B,C}. For a line, the first and last point are always\n\t// considered junctions, even if the line is closed; this ensures that a closed\n\t// line is never rotated.\n\tvar join = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      indexes = index(),\n\t      visitedByIndex = new Int32Array(coordinates.length),\n\t      leftByIndex = new Int32Array(coordinates.length),\n\t      rightByIndex = new Int32Array(coordinates.length),\n\t      junctionByIndex = new Int8Array(coordinates.length),\n\t      junctionCount = 0, // upper bound on number of junctions\n\t      i, n,\n\t      previousIndex,\n\t      currentIndex,\n\t      nextIndex;\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineStart = line[0],\n\t        lineEnd = line[1];\n\t    currentIndex = indexes[lineStart];\n\t    nextIndex = indexes[++lineStart];\n\t    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n\t    while (++lineStart <= lineEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n\t    }\n\t    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n\t  }\n\t\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    visitedByIndex[i] = -1;\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0] + 1,\n\t        ringEnd = ring[1];\n\t    previousIndex = indexes[ringEnd - 1];\n\t    currentIndex = indexes[ringStart - 1];\n\t    nextIndex = indexes[ringStart];\n\t    sequence(i, previousIndex, currentIndex, nextIndex);\n\t    while (++ringStart <= ringEnd) {\n\t      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n\t    }\n\t  }\n\t\n\t  function sequence(i, previousIndex, currentIndex, nextIndex) {\n\t    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n\t    visitedByIndex[currentIndex] = i;\n\t    var leftIndex = leftByIndex[currentIndex];\n\t    if (leftIndex >= 0) {\n\t      var rightIndex = rightByIndex[currentIndex];\n\t      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n\t        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n\t        ++junctionCount, junctionByIndex[currentIndex] = 1;\n\t      }\n\t    } else {\n\t      leftByIndex[currentIndex] = previousIndex;\n\t      rightByIndex[currentIndex] = nextIndex;\n\t    }\n\t  }\n\t\n\t  function index() {\n\t    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n\t        indexes = new Int32Array(coordinates.length);\n\t\n\t    for (var i = 0, n = coordinates.length; i < n; ++i) {\n\t      indexes[i] = indexByPoint.maybeSet(i, i);\n\t    }\n\t\n\t    return indexes;\n\t  }\n\t\n\t  function hashIndex(i) {\n\t    return hashPoint(coordinates[i]);\n\t  }\n\t\n\t  function equalIndex(i, j) {\n\t    return equalPoint(coordinates[i], coordinates[j]);\n\t  }\n\t\n\t  visitedByIndex = leftByIndex = rightByIndex = null;\n\t\n\t  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\t\n\t  // Convert back to a standard hashset by point for caller convenience.\n\t  for (i = 0, n = coordinates.length; i < n; ++i) {\n\t    if (junctionByIndex[j = indexes[i]]) {\n\t      junctionByPoint.add(coordinates[j]);\n\t    }\n\t  }\n\t\n\t  return junctionByPoint;\n\t};\n\t\n\t// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n\t// point sequences are identified. The topology can then be subsequently deduped\n\t// to remove exact duplicate arcs.\n\tvar cut = function(topology) {\n\t  var junctions = join(topology),\n\t      coordinates = topology.coordinates,\n\t      lines = topology.lines,\n\t      rings = topology.rings,\n\t      next,\n\t      i, n;\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    var line = lines[i],\n\t        lineMid = line[0],\n\t        lineEnd = line[1];\n\t    while (++lineMid < lineEnd) {\n\t      if (junctions.has(coordinates[lineMid])) {\n\t        next = {0: lineMid, 1: line[1]};\n\t        line[1] = lineMid;\n\t        line = line.next = next;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    var ring = rings[i],\n\t        ringStart = ring[0],\n\t        ringMid = ringStart,\n\t        ringEnd = ring[1],\n\t        ringFixed = junctions.has(coordinates[ringStart]);\n\t    while (++ringMid < ringEnd) {\n\t      if (junctions.has(coordinates[ringMid])) {\n\t        if (ringFixed) {\n\t          next = {0: ringMid, 1: ring[1]};\n\t          ring[1] = ringMid;\n\t          ring = ring.next = next;\n\t        } else { // For the first junction, we can rotate rather than cut.\n\t          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n\t          coordinates[ringEnd] = coordinates[ringStart];\n\t          ringFixed = true;\n\t          ringMid = ringStart; // restart; we may have skipped junctions\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction rotateArray(array, start, end, offset) {\n\t  reverse$1(array, start, end);\n\t  reverse$1(array, start, start + offset);\n\t  reverse$1(array, start + offset, end);\n\t}\n\t\n\tfunction reverse$1(array, start, end) {\n\t  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n\t    t = array[start], array[start] = array[end], array[end] = t;\n\t  }\n\t}\n\t\n\t// Given a cut topology, combines duplicate arcs.\n\tvar dedup = function(topology) {\n\t  var coordinates = topology.coordinates,\n\t      lines = topology.lines, line,\n\t      rings = topology.rings, ring,\n\t      arcCount = lines.length + rings.length,\n\t      i, n;\n\t\n\t  delete topology.lines;\n\t  delete topology.rings;\n\t\n\t  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i]; while (line = line.next) ++arcCount;\n\t  }\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i]; while (ring = ring.next) ++arcCount;\n\t  }\n\t\n\t  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n\t      arcs = topology.arcs = [];\n\t\n\t  for (i = 0, n = lines.length; i < n; ++i) {\n\t    line = lines[i];\n\t    do {\n\t      dedupLine(line);\n\t    } while (line = line.next);\n\t  }\n\t\n\t  for (i = 0, n = rings.length; i < n; ++i) {\n\t    ring = rings[i];\n\t    if (ring.next) { // arc is no longer closed\n\t      do {\n\t        dedupLine(ring);\n\t      } while (ring = ring.next);\n\t    } else {\n\t      dedupRing(ring);\n\t    }\n\t  }\n\t\n\t  function dedupLine(arc) {\n\t    var startPoint,\n\t        endPoint,\n\t        startArcs, startArc,\n\t        endArcs, endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing arc in order?\n\t    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = startArcs.length; i < n; ++i) {\n\t        startArc = startArcs[i];\n\t        if (equalLine(startArc, arc)) {\n\t          arc[0] = startArc[0];\n\t          arc[1] = startArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Does this arc match an existing arc in reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (reverseEqualLine(endArc, arc)) {\n\t          arc[1] = endArc[0];\n\t          arc[0] = endArc[1];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function dedupRing(arc) {\n\t    var endPoint,\n\t        endArcs,\n\t        endArc,\n\t        i, n;\n\t\n\t    // Does this arc match an existing line in order, or reverse order?\n\t    // Rings are closed, so their start point and end point is the same.\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Otherwise, does this arc match an existing ring in order, or reverse order?\n\t    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n\t      for (i = 0, n = endArcs.length; i < n; ++i) {\n\t        endArc = endArcs[i];\n\t        if (equalRing(endArc, arc)) {\n\t          arc[0] = endArc[0];\n\t          arc[1] = endArc[1];\n\t          return;\n\t        }\n\t        if (reverseEqualRing(endArc, arc)) {\n\t          arc[0] = endArc[1];\n\t          arc[1] = endArc[0];\n\t          return;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n\t    arcs.push(arc);\n\t  }\n\t\n\t  function equalLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualLine(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1];\n\t    if (ia - ja !== ib - jb) return false;\n\t    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n\t    return true;\n\t  }\n\t\n\t  function equalRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  function reverseEqualRing(arcA, arcB) {\n\t    var ia = arcA[0], ib = arcB[0],\n\t        ja = arcA[1], jb = arcB[1],\n\t        n = ja - ia;\n\t    if (n !== jb - ib) return false;\n\t    var ka = findMinimumOffset(arcA),\n\t        kb = n - findMinimumOffset(arcB);\n\t    for (var i = 0; i < n; ++i) {\n\t      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // Rings are rotated to a consistent, but arbitrary, start point.\n\t  // This is necessary to detect when a ring and a rotated copy are dupes.\n\t  function findMinimumOffset(arc) {\n\t    var start = arc[0],\n\t        end = arc[1],\n\t        mid = start,\n\t        minimum = mid,\n\t        minimumPoint = coordinates[mid];\n\t    while (++mid < end) {\n\t      var point = coordinates[mid];\n\t      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n\t        minimum = mid;\n\t        minimumPoint = point;\n\t      }\n\t    }\n\t    return minimum - start;\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\t// Given an array of arcs in absolute (but already quantized!) coordinates,\n\t// converts to fixed-point delta encoding.\n\t// This is a destructive operation that modifies the given arcs!\n\tvar delta = function(arcs) {\n\t  var i = -1,\n\t      n = arcs.length;\n\t\n\t  while (++i < n) {\n\t    var arc = arcs[i],\n\t        j = 0,\n\t        k = 1,\n\t        m = arc.length,\n\t        point = arc[0],\n\t        x0 = point[0],\n\t        y0 = point[1],\n\t        x1,\n\t        y1;\n\t\n\t    while (++j < m) {\n\t      point = arc[j], x1 = point[0], y1 = point[1];\n\t      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n\t    }\n\t\n\t    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\t\n\t    arc.length = k;\n\t  }\n\t\n\t  return arcs;\n\t};\n\t\n\t// Extracts the lines and rings from the specified hash of geometry objects.\n\t//\n\t// Returns an object with three properties:\n\t//\n\t// * coordinates - shared buffer of [x, y] coordinates\n\t// * lines - lines extracted from the hash, of the form [start, end]\n\t// * rings - rings extracted from the hash, of the form [start, end]\n\t//\n\t// For each ring or line, start and end represent inclusive indexes into the\n\t// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n\t// coordinates[end].\n\t//\n\t// For each line or polygon geometry in the input hash, including nested\n\t// geometries as in geometry collections, the `coordinates` array is replaced\n\t// with an equivalent `arcs` array that, for each line (for line string\n\t// geometries) or ring (for polygon geometries), points to one of the above\n\t// lines or rings.\n\tvar extract = function(objects) {\n\t  var index = -1,\n\t      lines = [],\n\t      rings = [],\n\t      coordinates = [];\n\t\n\t  function extractGeometry(geometry) {\n\t    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n\t  }\n\t\n\t  var extractGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n\t    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n\t  };\n\t\n\t  function extractLine(line) {\n\t    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    lines.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractRing(ring) {\n\t    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n\t    var arc = {0: index - n + 1, 1: index};\n\t    rings.push(arc);\n\t    return arc;\n\t  }\n\t\n\t  function extractMultiRing(rings) {\n\t    return rings.map(extractRing);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    extractGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    coordinates: coordinates,\n\t    lines: lines,\n\t    rings: rings,\n\t    objects: objects\n\t  };\n\t};\n\t\n\t// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n\t// Any null input geometry objects are represented as {type: null} in the output.\n\t// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n\t// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\n\tvar geometry = function(inputs) {\n\t  var outputs = {}, key;\n\t  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n\t  return outputs;\n\t};\n\t\n\tfunction geomifyObject(input) {\n\t  return input == null ? {type: null}\n\t      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n\t      : input.type === \"Feature\" ? geomifyFeature\n\t      : geomifyGeometry)(input);\n\t}\n\t\n\tfunction geomifyFeatureCollection(input) {\n\t  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tfunction geomifyFeature(input) {\n\t  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n\t  if (input.id != null) output.id = input.id;\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  for (key in input.properties) { output.properties = input.properties; break; }\n\t  return output;\n\t}\n\t\n\tfunction geomifyGeometry(input) {\n\t  if (input == null) return {type: null};\n\t  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n\t      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n\t      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n\t  if (input.bbox != null) output.bbox = input.bbox;\n\t  return output;\n\t}\n\t\n\tvar prequantize = function(objects, bbox, n) {\n\t  var x0 = bbox[0],\n\t      y0 = bbox[1],\n\t      x1 = bbox[2],\n\t      y1 = bbox[3],\n\t      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n\t      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\t\n\t  function quantizePoint(input) {\n\t    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n\t  }\n\t\n\t  function quantizePoints(input, m) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        pi,\n\t        px,\n\t        py,\n\t        x,\n\t        y;\n\t\n\t    while (++i < n) {\n\t      pi = input[i];\n\t      x = Math.round((pi[0] - x0) * kx);\n\t      y = Math.round((pi[1] - y0) * ky);\n\t      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n\t    }\n\t\n\t    output.length = j;\n\t    while (j < m) j = output.push([output[0][0], output[0][1]]);\n\t    return output;\n\t  }\n\t\n\t  function quantizeLine(input) {\n\t    return quantizePoints(input, 2);\n\t  }\n\t\n\t  function quantizeRing(input) {\n\t    return quantizePoints(input, 4);\n\t  }\n\t\n\t  function quantizePolygon(input) {\n\t    return input.map(quantizeRing);\n\t  }\n\t\n\t  function quantizeGeometry(o) {\n\t    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n\t  }\n\t\n\t  var quantizeGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n\t    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n\t    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n\t    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n\t    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n\t  };\n\t\n\t  for (var key in objects) {\n\t    quantizeGeometry(objects[key]);\n\t  }\n\t\n\t  return {\n\t    scale: [1 / kx, 1 / ky],\n\t    translate: [x0, y0]\n\t  };\n\t};\n\t\n\t// Constructs the TopoJSON Topology for the specified hash of features.\n\t// Each object in the specified hash must be a GeoJSON object,\n\t// meaning FeatureCollection, a Feature or a geometry object.\n\tvar topology = function(objects, quantization) {\n\t  var bbox = bounds(objects = geometry(objects)),\n\t      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n\t      topology = dedup(cut(extract(objects))),\n\t      coordinates = topology.coordinates,\n\t      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\t\n\t  objects = topology.objects; // for garbage collection\n\t  topology.bbox = bbox;\n\t  topology.arcs = topology.arcs.map(function(arc, i) {\n\t    indexByArc.set(arc, i);\n\t    return coordinates.slice(arc[0], arc[1] + 1);\n\t  });\n\t\n\t  delete topology.coordinates;\n\t  coordinates = null;\n\t\n\t  function indexGeometry(geometry$$1) {\n\t    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n\t  }\n\t\n\t  var indexGeometryType = {\n\t    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n\t    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n\t    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n\t    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n\t  };\n\t\n\t  function indexArcs(arc) {\n\t    var indexes = [];\n\t    do {\n\t      var index = indexByArc.get(arc);\n\t      indexes.push(arc[0] < arc[1] ? index : ~index);\n\t    } while (arc = arc.next);\n\t    return indexes;\n\t  }\n\t\n\t  function indexMultiArcs(arcs) {\n\t    return arcs.map(indexArcs);\n\t  }\n\t\n\t  for (var key in objects) {\n\t    indexGeometry(objects[key]);\n\t  }\n\t\n\t  if (transform) {\n\t    topology.transform = transform;\n\t    topology.arcs = delta(topology.arcs);\n\t  }\n\t\n\t  return topology;\n\t};\n\t\n\tfunction hashArc(arc) {\n\t  var i = arc[0], j = arc[1], t;\n\t  if (j < i) t = i, i = j, j = t;\n\t  return i + 31 * j;\n\t}\n\t\n\tfunction equalArc(arcA, arcB) {\n\t  var ia = arcA[0], ja = arcA[1],\n\t      ib = arcB[0], jb = arcB[1], t;\n\t  if (ja < ia) t = ia, ia = ja, ja = t;\n\t  if (jb < ib) t = ib, ib = jb, jb = t;\n\t  return ia === ib && ja === jb;\n\t}\n\t\n\tvar prune = function(topology) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      oldArcs = topology.arcs,\n\t      newArcs = [],\n\t      newArcIndex = -1,\n\t      newIndexByOldIndex = new Array(oldArcs.length),\n\t      key;\n\t\n\t  function pruneGeometry(input) {\n\t    var output;\n\t    switch (input.type) {\n\t      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n\t      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n\t      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n\t      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function pruneArc(oldIndex) {\n\t    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\t\n\t    // If this is the first instance of this arc, record it under its new index.\n\t    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n\t      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n\t      newArcs[newIndex] = oldArcs[oldIndex];\n\t    }\n\t\n\t    return oldReverse ? ~newIndex : newIndex;\n\t  }\n\t\n\t  function pruneArcs(arcs) {\n\t    return arcs.map(pruneArc);\n\t  }\n\t\n\t  function pruneMultiArcs(arcs) {\n\t    return arcs.map(pruneArcs);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = pruneGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: newArcs\n\t  };\n\t};\n\t\n\tvar filter = function(topology, filter) {\n\t  var oldObjects = topology.objects,\n\t      newObjects = {},\n\t      key;\n\t\n\t  if (filter == null) filter = filterTrue;\n\t\n\t  function filterGeometry(input) {\n\t    var output, arcs;\n\t    switch (input.type) {\n\t      case \"Polygon\": {\n\t        arcs = filterRings(input.arcs);\n\t        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"MultiPolygon\": {\n\t        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n\t        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n\t        break;\n\t      }\n\t      case \"GeometryCollection\": {\n\t        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n\t        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n\t        break;\n\t      }\n\t      default: return input;\n\t    }\n\t    if (input.id != null) output.id = input.id;\n\t    if (input.bbox != null) output.bbox = input.bbox;\n\t    if (input.properties != null) output.properties = input.properties;\n\t    return output;\n\t  }\n\t\n\t  function filterRings(arcs) {\n\t    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n\t        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n\t        : null;\n\t  }\n\t\n\t  function filterExteriorRing(ring) {\n\t    return filter(ring, false);\n\t  }\n\t\n\t  function filterInteriorRing(ring) {\n\t    return filter(ring, true);\n\t  }\n\t\n\t  for (key in oldObjects) {\n\t    newObjects[key] = filterGeometry(oldObjects[key]);\n\t  }\n\t\n\t  return prune({\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    transform: topology.transform,\n\t    objects: newObjects,\n\t    arcs: topology.arcs\n\t  });\n\t};\n\t\n\tfunction filterTrue() {\n\t  return true;\n\t}\n\t\n\tfunction filterIdentity(x) {\n\t  return x;\n\t}\n\t\n\tfunction filterNotNull(geometry) {\n\t  return geometry.type != null;\n\t}\n\t\n\tvar filterAttached = function(topology) {\n\t  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n\t      ringIndex = 0,\n\t      name;\n\t\n\t  function testGeometry(o) {\n\t    switch (o.type) {\n\t      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n\t      case \"Polygon\": testArcs(o.arcs); break;\n\t      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n\t    }\n\t  }\n\t\n\t  function testArcs(arcs) {\n\t    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n\t      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n\t        var arc = ring[j];\n\t        if (arc < 0) arc = ~arc;\n\t        var uniqueRing = uniqueRingByArc[arc];\n\t        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n\t        else uniqueRingByArc[arc] = ringIndex;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (name in topology.objects) {\n\t    testGeometry(topology.objects[name]);\n\t  }\n\t\n\t  return function(ring) {\n\t    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n\t      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t};\n\t\n\tfunction planarTriangleArea(triangle) {\n\t  var a = triangle[0], b = triangle[1], c = triangle[2];\n\t  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n\t}\n\t\n\tfunction planarRingArea$1(ring) {\n\t  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n\t  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\t  return Math.abs(area) / 2;\n\t}\n\t\n\tvar filterWeight = function(topology, minWeight, weight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  if (weight == null) weight = planarRingArea$1;\n\t\n\t  return function(ring, interior) {\n\t    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n\t  };\n\t};\n\t\n\tvar filterAttachedWeight = function(topology, minWeight, weight) {\n\t  var a = filterAttached(topology),\n\t      w = filterWeight(topology, minWeight, weight);\n\t  return function(ring, interior) {\n\t    return a(ring, interior) || w(ring, interior);\n\t  };\n\t};\n\t\n\tfunction compare(a, b) {\n\t  return a[1][2] - b[1][2];\n\t}\n\t\n\tvar newHeap = function() {\n\t  var heap = {},\n\t      array = [],\n\t      size = 0;\n\t\n\t  heap.push = function(object) {\n\t    up(array[object._ = size] = object, size++);\n\t    return size;\n\t  };\n\t\n\t  heap.pop = function() {\n\t    if (size <= 0) return;\n\t    var removed = array[0], object;\n\t    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n\t    return removed;\n\t  };\n\t\n\t  heap.remove = function(removed) {\n\t    var i = removed._, object;\n\t    if (array[i] !== removed) return; // invalid request\n\t    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n\t    return i;\n\t  };\n\t\n\t  function up(object, i) {\n\t    while (i > 0) {\n\t      var j = ((i + 1) >> 1) - 1,\n\t          parent = array[j];\n\t      if (compare(object, parent) >= 0) break;\n\t      array[parent._ = i] = parent;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  function down(object, i) {\n\t    while (true) {\n\t      var r = (i + 1) << 1,\n\t          l = r - 1,\n\t          j = i,\n\t          child = array[j];\n\t      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n\t      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n\t      if (j === i) break;\n\t      array[child._ = i] = child;\n\t      array[object._ = i = j] = object;\n\t    }\n\t  }\n\t\n\t  return heap;\n\t};\n\t\n\tfunction copy(point) {\n\t  return [point[0], point[1], 0];\n\t}\n\t\n\tvar presimplify = function(topology, weight) {\n\t  var point = topology.transform ? transform(topology.transform) : copy,\n\t      heap = newHeap();\n\t\n\t  if (weight == null) weight = planarTriangleArea;\n\t\n\t  var arcs = topology.arcs.map(function(arc) {\n\t    var triangles = [],\n\t        maxWeight = 0,\n\t        triangle,\n\t        i,\n\t        n;\n\t\n\t    arc = arc.map(point);\n\t\n\t    for (i = 1, n = arc.length - 1; i < n; ++i) {\n\t      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n\t      triangle[1][2] = weight(triangle);\n\t      triangles.push(triangle);\n\t      heap.push(triangle);\n\t    }\n\t\n\t    // Always keep the arc endpoints!\n\t    arc[0][2] = arc[n][2] = Infinity;\n\t\n\t    for (i = 0, n = triangles.length; i < n; ++i) {\n\t      triangle = triangles[i];\n\t      triangle.previous = triangles[i - 1];\n\t      triangle.next = triangles[i + 1];\n\t    }\n\t\n\t    while (triangle = heap.pop()) {\n\t      var previous = triangle.previous,\n\t          next = triangle.next;\n\t\n\t      // If the weight of the current point is less than that of the previous\n\t      // point to be eliminated, use the latter’s weight instead. This ensures\n\t      // that the current point cannot be eliminated without eliminating\n\t      // previously- eliminated points.\n\t      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n\t      else maxWeight = triangle[1][2];\n\t\n\t      if (previous) {\n\t        previous.next = next;\n\t        previous[2] = triangle[2];\n\t        update(previous);\n\t      }\n\t\n\t      if (next) {\n\t        next.previous = previous;\n\t        next[0] = triangle[0];\n\t        update(next);\n\t      }\n\t    }\n\t\n\t    return arc;\n\t  });\n\t\n\t  function update(triangle) {\n\t    heap.remove(triangle);\n\t    triangle[1][2] = weight(triangle);\n\t    heap.push(triangle);\n\t  }\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar quantile = function(topology, p) {\n\t  var array = [];\n\t\n\t  topology.arcs.forEach(function(arc) {\n\t    arc.forEach(function(point) {\n\t      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n\t        array.push(point[2]);\n\t      }\n\t    });\n\t  });\n\t\n\t  return array.length && quantile$1(array.sort(descending), p);\n\t};\n\t\n\tfunction quantile$1(array, p) {\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return array[0];\n\t  if (p >= 1) return array[n - 1];\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = array[i],\n\t      b = array[i + 1];\n\t  return a + (b - a) * (h - i);\n\t}\n\t\n\tfunction descending(a, b) {\n\t  return b - a;\n\t}\n\t\n\tvar simplify = function(topology, minWeight) {\n\t  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\t\n\t  // Remove points whose weight is less than the minimum weight.\n\t  var arcs = topology.arcs.map(function(input) {\n\t    var i = -1,\n\t        j = 0,\n\t        n = input.length,\n\t        output = new Array(n), // pessimistic\n\t        point;\n\t\n\t    while (++i < n) {\n\t      if ((point = input[i])[2] >= minWeight) {\n\t        output[j++] = [point[0], point[1]];\n\t      }\n\t    }\n\t\n\t    output.length = j;\n\t    return output;\n\t  });\n\t\n\t  return {\n\t    type: \"Topology\",\n\t    transform: topology.transform,\n\t    bbox: topology.bbox,\n\t    objects: topology.objects,\n\t    arcs: arcs\n\t  };\n\t};\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar quarterPi = pi / 4;\n\tvar radians = pi / 180;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\t\n\tfunction halfArea(ring, closed) {\n\t  var i = 0,\n\t      n = ring.length,\n\t      sum = 0,\n\t      point = ring[closed ? i++ : n - 1],\n\t      lambda0, lambda1 = point[0] * radians,\n\t      phi1 = (point[1] * radians) / 2 + quarterPi,\n\t      cosPhi0, cosPhi1 = cos(phi1),\n\t      sinPhi0, sinPhi1 = sin(phi1);\n\t\n\t  for (; i < n; ++i) {\n\t    point = ring[i];\n\t    lambda0 = lambda1, lambda1 = point[0] * radians;\n\t    phi1 = (point[1] * radians) / 2 + quarterPi;\n\t    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n\t    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n\t    var dLambda = lambda1 - lambda0,\n\t        sdLambda = dLambda >= 0 ? 1 : -1,\n\t        adLambda = sdLambda * dLambda,\n\t        k = sinPhi0 * sinPhi1,\n\t        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n\t        v = k * sdLambda * sin(adLambda);\n\t    sum += atan2(v, u);\n\t  }\n\t\n\t  return sum;\n\t}\n\t\n\tfunction sphericalRingArea(ring, interior) {\n\t  var sum = halfArea(ring, true);\n\t  if (interior) sum *= -1;\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\tfunction sphericalTriangleArea(t) {\n\t  var sum = halfArea(t, false);\n\t  return (sum < 0 ? tau + sum : sum) * 2;\n\t}\n\t\n\texports.bbox = bbox;\n\texports.feature = feature;\n\texports.mesh = mesh;\n\texports.meshArcs = meshArcs;\n\texports.merge = merge;\n\texports.mergeArcs = mergeArcs;\n\texports.neighbors = neighbors;\n\texports.quantize = quantize;\n\texports.transform = transform;\n\texports.untransform = untransform;\n\texports.topology = topology;\n\texports.filter = filter;\n\texports.filterAttached = filterAttached;\n\texports.filterAttachedWeight = filterAttachedWeight;\n\texports.filterWeight = filterWeight;\n\texports.planarRingArea = planarRingArea$1;\n\texports.planarTriangleArea = planarTriangleArea;\n\texports.presimplify = presimplify;\n\texports.quantile = quantile;\n\texports.simplify = simplify;\n\texports.sphericalRingArea = sphericalRingArea;\n\texports.sphericalTriangleArea = sphericalTriangleArea;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73ab5a20d392a76b017b","/* Riot v3.6.1, @license MIT */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.riot = global.riot || {})));\n}(this, (function (exports) { 'use strict';\n\nvar __TAGS_CACHE = [];\nvar __TAG_IMPL = {};\nvar GLOBAL_MIXIN = '__global_mixin';\nvar ATTRS_PREFIX = 'riot-';\nvar REF_DIRECTIVES = ['ref', 'data-ref'];\nvar IS_DIRECTIVE = 'data-is';\nvar CONDITIONAL_DIRECTIVE = 'if';\nvar LOOP_DIRECTIVE = 'each';\nvar LOOP_NO_REORDER_DIRECTIVE = 'no-reorder';\nvar SHOW_DIRECTIVE = 'show';\nvar HIDE_DIRECTIVE = 'hide';\nvar RIOT_EVENTS_KEY = '__riot-events__';\nvar T_STRING = 'string';\nvar T_OBJECT = 'object';\nvar T_UNDEF  = 'undefined';\nvar T_FUNCTION = 'function';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar XLINK_REGEX = /^xlink:(\\w+)/;\nvar WIN = typeof window === T_UNDEF ? undefined : window;\nvar RE_SPECIAL_TAGS = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/;\nvar RE_SPECIAL_TAGS_NO_OPTION = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/;\nvar RE_EVENTS_PREFIX = /^on/;\nvar RE_RESERVED_NAMES = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|refs|parent|opts|trigger|o(?:n|ff|ne))$/;\nvar RE_HTML_ATTRS = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g;\nvar CASE_SENSITIVE_ATTRIBUTES = { 'viewbox': 'viewBox' };\nvar RE_BOOL_ATTRS = /^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/;\nvar IE_VERSION = (WIN && WIN.document || {}).documentMode | 0;\n\n/**\n * Check Check if the passed argument is undefined\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isBoolAttr(value) {\n  return RE_BOOL_ATTRS.test(value)\n}\n\n/**\n * Check if passed argument is a function\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isFunction(value) {\n  return typeof value === T_FUNCTION\n}\n\n/**\n * Check if passed argument is an object, exclude null\n * NOTE: use isObject(x) && !isArray(x) to excludes arrays.\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isObject(value) {\n  return value && typeof value === T_OBJECT // typeof null is 'object'\n}\n\n/**\n * Check if passed argument is undefined\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isUndefined(value) {\n  return typeof value === T_UNDEF\n}\n\n/**\n * Check if passed argument is a string\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isString(value) {\n  return typeof value === T_STRING\n}\n\n/**\n * Check if passed argument is empty. Different from falsy, because we dont consider 0 or false to be blank\n * @param { * } value -\n * @returns { Boolean } -\n */\nfunction isBlank(value) {\n  return isUndefined(value) || value === null || value === ''\n}\n\n/**\n * Check if passed argument is a kind of array\n * @param   { * } value -\n * @returns { Boolean } -\n */\nfunction isArray(value) {\n  return Array.isArray(value) || value instanceof Array\n}\n\n/**\n * Check whether object's property could be overridden\n * @param   { Object }  obj - source object\n * @param   { String }  key - object property\n * @returns { Boolean } -\n */\nfunction isWritable(obj, key) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, key);\n  return isUndefined(obj[key]) || descriptor && descriptor.writable\n}\n\n/**\n * Check if passed argument is a reserved name\n * @param   { String } value -\n * @returns { Boolean } -\n */\nfunction isReservedName(value) {\n  return RE_RESERVED_NAMES.test(value)\n}\n\nvar check = Object.freeze({\n\tisBoolAttr: isBoolAttr,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tisUndefined: isUndefined,\n\tisString: isString,\n\tisBlank: isBlank,\n\tisArray: isArray,\n\tisWritable: isWritable,\n\tisReservedName: isReservedName\n});\n\n/**\n * Shorter and fast way to select multiple nodes in the DOM\n * @param   { String } selector - DOM selector\n * @param   { Object } ctx - DOM node where the targets of our search will is located\n * @returns { Object } dom nodes found\n */\nfunction $$(selector, ctx) {\n  return Array.prototype.slice.call((ctx || document).querySelectorAll(selector))\n}\n\n/**\n * Shorter and fast way to select a single node in the DOM\n * @param   { String } selector - unique dom selector\n * @param   { Object } ctx - DOM node where the target of our search will is located\n * @returns { Object } dom node found\n */\nfunction $(selector, ctx) {\n  return (ctx || document).querySelector(selector)\n}\n\n/**\n * Create a document fragment\n * @returns { Object } document fragment\n */\nfunction createFrag() {\n  return document.createDocumentFragment()\n}\n\n/**\n * Create a document text node\n * @returns { Object } create a text node to use as placeholder\n */\nfunction createDOMPlaceholder() {\n  return document.createTextNode('')\n}\n\n/**\n * Check if a DOM node is an svg tag\n * @param   { HTMLElement }  el - node we want to test\n * @returns {Boolean} true if it's an svg node\n */\nfunction isSvg(el) {\n  return !!el.ownerSVGElement\n}\n\n/**\n * Create a generic DOM node\n * @param   { String } name - name of the DOM node we want to create\n * @param   { Boolean } isSvg - true if we need to use an svg node\n * @returns { Object } DOM node just created\n */\nfunction mkEl(name) {\n  return name === 'svg' ? document.createElementNS(SVG_NS, name) : document.createElement(name)\n}\n\n/**\n * Set the inner html of any DOM node SVGs included\n * @param { Object } container - DOM node where we'll inject new html\n * @param { String } html - html to inject\n */\n/* istanbul ignore next */\nfunction setInnerHTML(container, html) {\n  if (!isUndefined(container.innerHTML))\n    { container.innerHTML = html; }\n    // some browsers do not support innerHTML on the SVGs tags\n  else {\n    var doc = new DOMParser().parseFromString(html, 'application/xml');\n    var node = container.ownerDocument.importNode(doc.documentElement, true);\n    container.appendChild(node);\n  }\n}\n\n/**\n * Toggle the visibility of any DOM node\n * @param   { Object }  dom - DOM node we want to hide\n * @param   { Boolean } show - do we want to show it?\n */\n\nfunction toggleVisibility(dom, show) {\n  dom.style.display = show ? '' : 'none';\n  dom['hidden'] = show ? false : true;\n}\n\n/**\n * Remove any DOM attribute from a node\n * @param   { Object } dom - DOM node we want to update\n * @param   { String } name - name of the property we want to remove\n */\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name);\n}\n\n/**\n * Convert a style object to a string\n * @param   { Object } style - style object we need to parse\n * @returns { String } resulting css string\n * @example\n * styleObjectToString({ color: 'red', height: '10px'}) // => 'color: red; height: 10px'\n */\nfunction styleObjectToString(style) {\n  return Object.keys(style).reduce(function (acc, prop) {\n    return (acc + \" \" + prop + \": \" + (style[prop]) + \";\")\n  }, '')\n}\n\n/**\n * Get the value of any DOM attribute on a node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { String } name - name of the attribute we want to get\n * @returns { String | undefined } name of the node attribute whether it exists\n */\nfunction getAttr(dom, name) {\n  return dom.getAttribute(name)\n}\n\n/**\n * Set any DOM attribute\n * @param { Object } dom - DOM node we want to update\n * @param { String } name - name of the property we want to set\n * @param { String } val - value of the property we want to set\n */\nfunction setAttr(dom, name, val) {\n  var xlink = XLINK_REGEX.exec(name);\n  if (xlink && xlink[1])\n    { dom.setAttributeNS(XLINK_NS, xlink[1], val); }\n  else\n    { dom.setAttribute(name, val); }\n}\n\n/**\n * Insert safely a tag to fix #1962 #1649\n * @param   { HTMLElement } root - children container\n * @param   { HTMLElement } curr - node to insert\n * @param   { HTMLElement } next - node that should preceed the current node inserted\n */\nfunction safeInsert(root, curr, next) {\n  root.insertBefore(curr, next.parentNode && next);\n}\n\n/**\n * Minimize risk: only zero or one _space_ between attr & value\n * @param   { String }   html - html string we want to parse\n * @param   { Function } fn - callback function to apply on any attribute found\n */\nfunction walkAttrs(html, fn) {\n  if (!html)\n    { return }\n  var m;\n  while (m = RE_HTML_ATTRS.exec(html))\n    { fn(m[1].toLowerCase(), m[2] || m[3] || m[4]); }\n}\n\n/**\n * Walk down recursively all the children tags starting dom node\n * @param   { Object }   dom - starting node where we will start the recursion\n * @param   { Function } fn - callback to transform the child node just found\n * @param   { Object }   context - fn can optionally return an object, which is passed to children\n */\nfunction walkNodes(dom, fn, context) {\n  if (dom) {\n    var res = fn(dom, context);\n    var next;\n    // stop the recursion\n    if (res === false) { return }\n\n    dom = dom.firstChild;\n\n    while (dom) {\n      next = dom.nextSibling;\n      walkNodes(dom, fn, res);\n      dom = next;\n    }\n  }\n}\n\nvar dom = Object.freeze({\n\t$$: $$,\n\t$: $,\n\tcreateFrag: createFrag,\n\tcreateDOMPlaceholder: createDOMPlaceholder,\n\tisSvg: isSvg,\n\tmkEl: mkEl,\n\tsetInnerHTML: setInnerHTML,\n\ttoggleVisibility: toggleVisibility,\n\tremAttr: remAttr,\n\tstyleObjectToString: styleObjectToString,\n\tgetAttr: getAttr,\n\tsetAttr: setAttr,\n\tsafeInsert: safeInsert,\n\twalkAttrs: walkAttrs,\n\twalkNodes: walkNodes\n});\n\nvar styleNode;\nvar cssTextProp;\nvar byName = {};\nvar remainder = [];\nvar needsInject = false;\n\n// skip the following code on the server\nif (WIN) {\n  styleNode = (function () {\n    // create a new style element with the correct type\n    var newNode = mkEl('style');\n    setAttr(newNode, 'type', 'text/css');\n\n    // replace any user node or insert the new one into the head\n    var userNode = $('style[type=riot]');\n    /* istanbul ignore next */\n    if (userNode) {\n      if (userNode.id) { newNode.id = userNode.id; }\n      userNode.parentNode.replaceChild(newNode, userNode);\n    }\n    else { document.getElementsByTagName('head')[0].appendChild(newNode); }\n\n    return newNode\n  })();\n  cssTextProp = styleNode.styleSheet;\n}\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nvar styleManager = {\n  styleNode: styleNode,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { String } css - css string\n   * @param { String } name - if it's passed we will map the css to a tagname\n   */\n  add: function add(css, name) {\n    if (name) { byName[name] = css; }\n    else { remainder.push(css); }\n    needsInject = true;\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   */\n  inject: function inject() {\n    if (!WIN || !needsInject) { return }\n    needsInject = false;\n    var style = Object.keys(byName)\n      .map(function(k) { return byName[k] })\n      .concat(remainder).join('\\n');\n    /* istanbul ignore next */\n    if (cssTextProp) { cssTextProp.cssText = style; }\n    else { styleNode.innerHTML = style; }\n  }\n};\n\n/**\n * The riot template engine\n * @version v3.0.8\n */\n\nvar skipRegex = (function () { //eslint-disable-line no-unused-vars\n\n  var beforeReChars = '[{(,;:?=|&!^~>%*/';\n\n  var beforeReWords = [\n    'case',\n    'default',\n    'do',\n    'else',\n    'in',\n    'instanceof',\n    'prefix',\n    'return',\n    'typeof',\n    'void',\n    'yield'\n  ];\n\n  var wordsLastChar = beforeReWords.reduce(function (s, w) {\n    return s + w.slice(-1)\n  }, '');\n\n  var RE_REGEX = /^\\/(?=[^*>/])[^[/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\/]*)*?\\/[gimuy]*/;\n  var RE_VN_CHAR = /[$\\w]/;\n\n  function prev (code, pos) {\n    while (--pos >= 0 && /\\s/.test(code[pos])){  }\n    return pos\n  }\n\n  function _skipRegex (code, start) {\n\n    var re = /.*/g;\n    var pos = re.lastIndex = start++;\n    var match = re.exec(code)[0].match(RE_REGEX);\n\n    if (match) {\n      var next = pos + match[0].length;\n\n      pos = prev(code, pos);\n      var c = code[pos];\n\n      if (pos < 0 || ~beforeReChars.indexOf(c)) {\n        return next\n      }\n\n      if (c === '.') {\n\n        if (code[pos - 1] === '.') {\n          start = next;\n        }\n\n      } else if (c === '+' || c === '-') {\n\n        if (code[--pos] !== c ||\n            (pos = prev(code, pos)) < 0 ||\n            !RE_VN_CHAR.test(code[pos])) {\n          start = next;\n        }\n\n      } else if (~wordsLastChar.indexOf(c)) {\n\n        var end = pos + 1;\n\n        while (--pos >= 0 && RE_VN_CHAR.test(code[pos])){  }\n        if (~beforeReWords.indexOf(code.slice(pos + 1, end))) {\n          start = next;\n        }\n      }\n    }\n\n    return start\n  }\n\n  return _skipRegex\n\n})();\n\n/**\n * riot.util.brackets\n *\n * - `brackets    ` - Returns a string or regex based on its parameter\n * - `brackets.set` - Change the current riot brackets\n *\n * @module\n */\n\n/* global riot */\n\n/* istanbul ignore next */\nvar brackets = (function (UNDEF) {\n\n  var\n    REGLOB = 'g',\n\n    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\n    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`/g,\n\n    S_QBLOCKS = R_STRINGS.source + '|' +\n      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?([^<]\\/)[gim]*/.source,\n\n    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\n    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\n    S_QBLOCK2 = R_STRINGS.source + '|' + /(\\/)(?![*\\/])/.source,\n\n    FINDBRACES = {\n      '(': RegExp('([()])|'   + S_QBLOCK2, REGLOB),\n      '[': RegExp('([[\\\\]])|' + S_QBLOCK2, REGLOB),\n      '{': RegExp('([{}])|'   + S_QBLOCK2, REGLOB)\n    },\n\n    DEFAULT = '{ }';\n\n  var _pairs = [\n    '{', '}',\n    '{', '}',\n    /{[^}]*}/,\n    /\\\\([{}])/g,\n    /\\\\({)|{/g,\n    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCK2, REGLOB),\n    DEFAULT,\n    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n    /(^|[^\\\\]){=[\\S\\s]*?}/\n  ];\n\n  var\n    cachedBrackets = UNDEF,\n    _regex,\n    _cache = [],\n    _settings;\n\n  function _loopback (re) { return re }\n\n  function _rewrite (re, bp) {\n    if (!bp) { bp = _cache; }\n    return new RegExp(\n      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n    )\n  }\n\n  function _create (pair) {\n    if (pair === DEFAULT) { return _pairs }\n\n    var arr = pair.split(' ');\n\n    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n      throw new Error('Unsupported brackets \"' + pair + '\"')\n    }\n    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '));\n\n    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr);\n    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr);\n    arr[6] = _rewrite(_pairs[6], arr);\n    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCK2, REGLOB);\n    arr[8] = pair;\n    return arr\n  }\n\n  function _brackets (reOrIdx) {\n    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n  }\n\n  _brackets.split = function split (str, tmpl, _bp) {\n    // istanbul ignore next: _bp is for the compiler\n    if (!_bp) { _bp = _cache; }\n\n    var\n      parts = [],\n      match,\n      isexpr,\n      start,\n      pos,\n      re = _bp[6];\n\n    var qblocks = [];\n    var prevStr = '';\n    var mark, lastIndex;\n\n    isexpr = start = re.lastIndex = 0;\n\n    while ((match = re.exec(str))) {\n\n      lastIndex = re.lastIndex;\n      pos = match.index;\n\n      if (isexpr) {\n\n        if (match[2]) {\n\n          var ch = match[2];\n          var rech = FINDBRACES[ch];\n          var ix = 1;\n\n          rech.lastIndex = lastIndex;\n          while ((match = rech.exec(str))) {\n            if (match[1]) {\n              if (match[1] === ch) { ++ix; }\n              else if (!--ix) { break }\n            } else {\n              rech.lastIndex = pushQBlock(match.index, rech.lastIndex, match[2]);\n            }\n          }\n          re.lastIndex = ix ? str.length : rech.lastIndex;\n          continue\n        }\n\n        if (!match[3]) {\n          re.lastIndex = pushQBlock(pos, lastIndex, match[4]);\n          continue\n        }\n      }\n\n      if (!match[1]) {\n        unescapeStr(str.slice(start, pos));\n        start = re.lastIndex;\n        re = _bp[6 + (isexpr ^= 1)];\n        re.lastIndex = start;\n      }\n    }\n\n    if (str && start < str.length) {\n      unescapeStr(str.slice(start));\n    }\n\n    parts.qblocks = qblocks;\n\n    return parts\n\n    function unescapeStr (s) {\n      if (prevStr) {\n        s = prevStr + s;\n        prevStr = '';\n      }\n      if (tmpl || isexpr) {\n        parts.push(s && s.replace(_bp[5], '$1'));\n      } else {\n        parts.push(s);\n      }\n    }\n\n    function pushQBlock(_pos, _lastIndex, slash) { //eslint-disable-line\n      if (slash) {\n        _lastIndex = skipRegex(str, _pos);\n      }\n\n      if (tmpl && _lastIndex > _pos + 2) {\n        mark = '\\u2057' + qblocks.length + '~';\n        qblocks.push(str.slice(_pos, _lastIndex));\n        prevStr += str.slice(start, _pos) + mark;\n        start = _lastIndex;\n      }\n      return _lastIndex\n    }\n  };\n\n  _brackets.hasExpr = function hasExpr (str) {\n    return _cache[4].test(str)\n  };\n\n  _brackets.loopKeys = function loopKeys (expr) {\n    var m = expr.match(_cache[9]);\n\n    return m\n      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n      : { val: expr.trim() }\n  };\n\n  _brackets.array = function array (pair) {\n    return pair ? _create(pair) : _cache\n  };\n\n  function _reset (pair) {\n    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n      _cache = _create(pair);\n      _regex = pair === DEFAULT ? _loopback : _rewrite;\n      _cache[9] = _regex(_pairs[9]);\n    }\n    cachedBrackets = pair;\n  }\n\n  function _setSettings (o) {\n    var b;\n\n    o = o || {};\n    b = o.brackets;\n    Object.defineProperty(o, 'brackets', {\n      set: _reset,\n      get: function () { return cachedBrackets },\n      enumerable: true\n    });\n    _settings = o;\n    _reset(b);\n  }\n\n  Object.defineProperty(_brackets, 'settings', {\n    set: _setSettings,\n    get: function () { return _settings }\n  });\n\n  /* istanbul ignore next: in the browser riot is always in the scope */\n  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {};\n  _brackets.set = _reset;\n  _brackets.skipRegex = skipRegex;\n\n  _brackets.R_STRINGS = R_STRINGS;\n  _brackets.R_MLCOMMS = R_MLCOMMS;\n  _brackets.S_QBLOCKS = S_QBLOCKS;\n  _brackets.S_QBLOCK2 = S_QBLOCK2;\n\n  return _brackets\n\n})();\n\n/**\n * @module tmpl\n *\n * tmpl          - Root function, returns the template value, render with data\n * tmpl.hasExpr  - Test the existence of a expression inside a string\n * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n */\n\n/* istanbul ignore next */\nvar tmpl = (function () {\n\n  var _cache = {};\n\n  function _tmpl (str, data) {\n    if (!str) { return str }\n\n    return (_cache[str] || (_cache[str] = _create(str))).call(\n      data, _logErr.bind({\n        data: data,\n        tmpl: str\n      })\n    )\n  }\n\n  _tmpl.hasExpr = brackets.hasExpr;\n\n  _tmpl.loopKeys = brackets.loopKeys;\n\n  // istanbul ignore next\n  _tmpl.clearCache = function () { _cache = {}; };\n\n  _tmpl.errorHandler = null;\n\n  function _logErr (err, ctx) {\n\n    err.riotData = {\n      tagName: ctx && ctx.__ && ctx.__.tagName,\n      _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n    };\n\n    if (_tmpl.errorHandler) { _tmpl.errorHandler(err); }\n    else if (\n      typeof console !== 'undefined' &&\n      typeof console.error === 'function'\n    ) {\n      console.error(err.message);\n      console.log('<%s> %s', err.riotData.tagName || 'Unknown tag', this.tmpl); // eslint-disable-line\n      console.log(this.data); // eslint-disable-line\n    }\n  }\n\n  function _create (str) {\n    var expr = _getTmpl(str);\n\n    if (expr.slice(0, 11) !== 'try{return ') { expr = 'return ' + expr; }\n\n    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n  }\n\n  var RE_DQUOTE = /\\u2057/g;\n  var RE_QBMARK = /\\u2057(\\d+)~/g;\n\n  function _getTmpl (str) {\n    var parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1);\n    var qstr = parts.qblocks;\n    var expr;\n\n    if (parts.length > 2 || parts[0]) {\n      var i, j, list = [];\n\n      for (i = j = 0; i < parts.length; ++i) {\n\n        expr = parts[i];\n\n        if (expr && (expr = i & 1\n\n            ? _parseExpr(expr, 1, qstr)\n\n            : '\"' + expr\n                .replace(/\\\\/g, '\\\\\\\\')\n                .replace(/\\r\\n?|\\n/g, '\\\\n')\n                .replace(/\"/g, '\\\\\"') +\n              '\"'\n\n          )) { list[j++] = expr; }\n\n      }\n\n      expr = j < 2 ? list[0]\n           : '[' + list.join(',') + '].join(\"\")';\n\n    } else {\n\n      expr = _parseExpr(parts[1], 0, qstr);\n    }\n\n    if (qstr.length) {\n      expr = expr.replace(RE_QBMARK, function (_, pos) {\n        return qstr[pos]\n          .replace(/\\r/g, '\\\\r')\n          .replace(/\\n/g, '\\\\n')\n      });\n    }\n    return expr\n  }\n\n  var RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/;\n  var\n    RE_BREND = {\n      '(': /[()]/g,\n      '[': /[[\\]]/g,\n      '{': /[{}]/g\n    };\n\n  function _parseExpr (expr, asText, qstr) {\n\n    expr = expr\n      .replace(/\\s+/g, ' ').trim()\n      .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1');\n\n    if (expr) {\n      var\n        list = [],\n        cnt = 0,\n        match;\n\n      while (expr &&\n            (match = expr.match(RE_CSNAME)) &&\n            !match.index\n        ) {\n        var\n          key,\n          jsb,\n          re = /,|([[{(])|$/g;\n\n        expr = RegExp.rightContext;\n        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1];\n\n        while (jsb = (match = re.exec(expr))[1]) { skipBraces(jsb, re); }\n\n        jsb  = expr.slice(0, match.index);\n        expr = RegExp.rightContext;\n\n        list[cnt++] = _wrapExpr(jsb, 1, key);\n      }\n\n      expr = !cnt ? _wrapExpr(expr, asText)\n           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0];\n    }\n    return expr\n\n    function skipBraces (ch, re) {\n      var\n        mm,\n        lv = 1,\n        ir = RE_BREND[ch];\n\n      ir.lastIndex = re.lastIndex;\n      while (mm = ir.exec(expr)) {\n        if (mm[0] === ch) { ++lv; }\n        else if (!--lv) { break }\n      }\n      re.lastIndex = lv ? expr.length : ir.lastIndex;\n    }\n  }\n\n  // istanbul ignore next: not both\n  var // eslint-disable-next-line max-len\n    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/;\n\n  function _wrapExpr (expr, asText, key) {\n    var tb;\n\n    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n      if (mvar) {\n        pos = tb ? 0 : pos + match.length;\n\n        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n          match = p + '(\"' + mvar + JS_CONTEXT + mvar;\n          if (pos) { tb = (s = s[pos]) === '.' || s === '(' || s === '['; }\n        } else if (pos) {\n          tb = !JS_NOPROPS.test(s.slice(pos));\n        }\n      }\n      return match\n    });\n\n    if (tb) {\n      expr = 'try{return ' + expr + '}catch(e){E(e,this)}';\n    }\n\n    if (key) {\n\n      expr = (tb\n          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n        ) + '?\"' + key + '\":\"\"';\n\n    } else if (asText) {\n\n      expr = 'function(v){' + (tb\n          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n        ) + ';return v||v===0?v:\"\"}.call(this)';\n    }\n\n    return expr\n  }\n\n  _tmpl.version = brackets.version = 'v3.0.8';\n\n  return _tmpl\n\n})();\n\n/* istanbul ignore next */\nvar observable$1 = function(el) {\n\n  /**\n   * Extend the original object or create a new empty one\n   * @type { Object }\n   */\n\n  el = el || {};\n\n  /**\n   * Private variables\n   */\n  var callbacks = {},\n    slice = Array.prototype.slice;\n\n  /**\n   * Public Api\n   */\n\n  // extend the el object adding the observable methods\n  Object.defineProperties(el, {\n    /**\n     * Listen to the given `event` ands\n     * execute the `callback` each time an event is triggered.\n     * @param  { String } event - event id\n     * @param  { Function } fn - callback function\n     * @returns { Object } el\n     */\n    on: {\n      value: function(event, fn) {\n        if (typeof fn == 'function')\n          { (callbacks[event] = callbacks[event] || []).push(fn); }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Removes the given `event` listeners\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    off: {\n      value: function(event, fn) {\n        if (event == '*' && !fn) { callbacks = {}; }\n        else {\n          if (fn) {\n            var arr = callbacks[event];\n            for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n              if (cb == fn) { arr.splice(i--, 1); }\n            }\n          } else { delete callbacks[event]; }\n        }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Listen to the given `event` and\n     * execute the `callback` at most once\n     * @param   { String } event - event id\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    one: {\n      value: function(event, fn) {\n        function on() {\n          el.off(event, on);\n          fn.apply(el, arguments);\n        }\n        return el.on(event, on)\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Execute all callback functions that listen to\n     * the given `event`\n     * @param   { String } event - event id\n     * @returns { Object } el\n     */\n    trigger: {\n      value: function(event) {\n        var arguments$1 = arguments;\n\n\n        // getting the arguments\n        var arglen = arguments.length - 1,\n          args = new Array(arglen),\n          fns,\n          fn,\n          i;\n\n        for (i = 0; i < arglen; i++) {\n          args[i] = arguments$1[i + 1]; // skip first argument\n        }\n\n        fns = slice.call(callbacks[event] || [], 0);\n\n        for (i = 0; fn = fns[i]; ++i) {\n          fn.apply(el, args);\n        }\n\n        if (callbacks['*'] && event != '*')\n          { el.trigger.apply(el, ['*', event].concat(args)); }\n\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    }\n  });\n\n  return el\n\n};\n\n/**\n * Specialized function for looping an array-like collection with `each={}`\n * @param   { Array } list - collection of items\n * @param   {Function} fn - callback function\n * @returns { Array } the array looped\n */\nfunction each(list, fn) {\n  var len = list ? list.length : 0;\n  var i = 0;\n  for (; i < len; ++i) {\n    fn(list[i], i);\n  }\n  return list\n}\n\n/**\n * Check whether an array contains an item\n * @param   { Array } array - target array\n * @param   { * } item - item to test\n * @returns { Boolean } -\n */\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   { String } str - input string\n * @returns { String } my-string -> myString\n */\nfunction toCamel(str) {\n  return str.replace(/-(\\w)/g, function (_, c) { return c.toUpperCase(); })\n}\n\n/**\n * Faster String startsWith alternative\n * @param   { String } str - source string\n * @param   { String } value - test string\n * @returns { Boolean } -\n */\nfunction startsWith(str, value) {\n  return str.slice(0, value.length) === value\n}\n\n/**\n * Helper function to set an immutable property\n * @param   { Object } el - object where the new property will be set\n * @param   { String } key - object key where the new property will be stored\n * @param   { * } value - value of the new property\n * @param   { Object } options - set the propery overriding the default options\n * @returns { Object } - the initial object\n */\nfunction defineProperty(el, key, value, options) {\n  Object.defineProperty(el, key, extend({\n    value: value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  return el\n}\n\n/**\n * Extend any object with other properties\n * @param   { Object } src - source object\n * @returns { Object } the resulting extended object\n *\n * var obj = { foo: 'baz' }\n * extend(obj, {bar: 'bar', foo: 'bar'})\n * console.log(obj) => {bar: 'bar', foo: 'bar'}\n *\n */\nfunction extend(src) {\n  var obj, args = arguments;\n  for (var i = 1; i < args.length; ++i) {\n    if (obj = args[i]) {\n      for (var key in obj) {\n        // check if this property of the source object could be overridden\n        if (isWritable(src, key))\n          { src[key] = obj[key]; }\n      }\n    }\n  }\n  return src\n}\n\nvar misc = Object.freeze({\n\teach: each,\n\tcontains: contains,\n\ttoCamel: toCamel,\n\tstartsWith: startsWith,\n\tdefineProperty: defineProperty,\n\textend: extend\n});\n\nvar settings$1 = extend(Object.create(brackets.settings), {\n  skipAnonymousTags: true,\n  // handle the auto updates on any DOM event\n  autoUpdate: true\n});\n\n/**\n * Trigger DOM events\n * @param   { HTMLElement } dom - dom element target of the event\n * @param   { Function } handler - user function\n * @param   { Object } e - event object\n */\nfunction handleEvent(dom, handler, e) {\n  var ptag = this.__.parent,\n    item = this.__.item;\n\n  if (!item)\n    { while (ptag && !item) {\n      item = ptag.__.item;\n      ptag = ptag.__.parent;\n    } }\n\n  // override the event properties\n  /* istanbul ignore next */\n  if (isWritable(e, 'currentTarget')) { e.currentTarget = dom; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'target')) { e.target = e.srcElement; }\n  /* istanbul ignore next */\n  if (isWritable(e, 'which')) { e.which = e.charCode || e.keyCode; }\n\n  e.item = item;\n\n  handler.call(this, e);\n\n  // avoid auto updates\n  if (!settings$1.autoUpdate) { return }\n\n  if (!e.preventUpdate) {\n    var p = getImmediateCustomParentTag(this);\n    // fixes #2083\n    if (p.isMounted) { p.update(); }\n  }\n}\n\n/**\n * Attach an event to a DOM node\n * @param { String } name - event name\n * @param { Function } handler - event callback\n * @param { Object } dom - dom node\n * @param { Tag } tag - tag instance\n */\nfunction setEventHandler(name, handler, dom, tag) {\n  var eventName,\n    cb = handleEvent.bind(tag, dom, handler);\n\n  // avoid to bind twice the same event\n  // possible fix for #2332\n  dom[name] = null;\n\n  // normalize event name\n  eventName = name.replace(RE_EVENTS_PREFIX, '');\n\n  // cache the listener into the listeners array\n  if (!contains(tag.__.listeners, dom)) { tag.__.listeners.push(dom); }\n  if (!dom[RIOT_EVENTS_KEY]) { dom[RIOT_EVENTS_KEY] = {}; }\n  if (dom[RIOT_EVENTS_KEY][name]) { dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][name]); }\n\n  dom[RIOT_EVENTS_KEY][name] = cb;\n  dom.addEventListener(eventName, cb, false);\n}\n\n/**\n * Update dynamically created data-is tags with changing expressions\n * @param { Object } expr - expression tag and expression info\n * @param { Tag }    parent - parent for tag creation\n * @param { String } tagName - tag implementation we want to use\n */\nfunction updateDataIs(expr, parent, tagName) {\n  var conf, isVirtual, head, ref;\n\n  if (expr.tag && expr.tagName === tagName) {\n    expr.tag.update();\n    return\n  }\n\n  isVirtual = expr.dom.tagName === 'VIRTUAL';\n  // sync _parent to accommodate changing tagnames\n  if (expr.tag) {\n    // need placeholder before unmount\n    if(isVirtual) {\n      head = expr.tag.__.head;\n      ref = createDOMPlaceholder();\n      head.parentNode.insertBefore(ref, head);\n    }\n\n    expr.tag.unmount(true);\n  }\n\n  if (!isString(tagName)) { return }\n\n  expr.impl = __TAG_IMPL[tagName];\n  conf = {root: expr.dom, parent: parent, hasImpl: true, tagName: tagName};\n  expr.tag = initChildTag(expr.impl, conf, expr.dom.innerHTML, parent);\n  each(expr.attrs, function (a) { return setAttr(expr.tag.root, a.name, a.value); });\n  expr.tagName = tagName;\n  expr.tag.mount();\n  if (isVirtual)\n    { makeReplaceVirtual(expr.tag, ref || expr.tag.root); } // root exist first time, after use placeholder\n\n  // parent is the placeholder tag, not the dynamic tag so clean up\n  parent.__.onUnmount = function() {\n    var delName = expr.tag.opts.dataIs,\n      tags = expr.tag.parent.tags,\n      _tags = expr.tag.__.parent.tags;\n    arrayishRemove(tags, delName, expr.tag);\n    arrayishRemove(_tags, delName, expr.tag);\n    expr.tag.unmount();\n  };\n}\n\n/**\n * Nomalize any attribute removing the \"riot-\" prefix\n * @param   { String } attrName - original attribute name\n * @returns { String } valid html attribute name\n */\nfunction normalizeAttrName(attrName) {\n  if (!attrName) { return null }\n  attrName = attrName.replace(ATTRS_PREFIX, '');\n  if (CASE_SENSITIVE_ATTRIBUTES[attrName]) { attrName = CASE_SENSITIVE_ATTRIBUTES[attrName]; }\n  return attrName\n}\n\n/**\n * Update on single tag expression\n * @this Tag\n * @param { Object } expr - expression logic\n * @returns { undefined }\n */\nfunction updateExpression(expr) {\n  if (this.root && getAttr(this.root,'virtualized')) { return }\n\n  var dom = expr.dom,\n    // remove the riot- prefix\n    attrName = normalizeAttrName(expr.attr),\n    isToggle = contains([SHOW_DIRECTIVE, HIDE_DIRECTIVE], attrName),\n    isVirtual = expr.root && expr.root.tagName === 'VIRTUAL',\n    parent = dom && (expr.parent || dom.parentNode),\n    // detect the style attributes\n    isStyleAttr = attrName === 'style',\n    isClassAttr = attrName === 'class',\n    hasValue,\n    isObj,\n    value;\n\n  // if it's a tag we could totally skip the rest\n  if (expr._riot_id) {\n    if (expr.isMounted) {\n      expr.update();\n    // if it hasn't been mounted yet, do that now.\n    } else {\n      expr.mount();\n      if (isVirtual) {\n        makeReplaceVirtual(expr, expr.root);\n      }\n    }\n    return\n  }\n  // if this expression has the update method it means it can handle the DOM changes by itself\n  if (expr.update) { return expr.update() }\n\n  // ...it seems to be a simple expression so we try to calculat its value\n  value = tmpl(expr.expr, isToggle ? extend({}, Object.create(this.parent), this) : this);\n  hasValue = !isBlank(value);\n  isObj = isObject(value);\n\n  // convert the style/class objects to strings\n  if (isObj) {\n    isObj = !isClassAttr && !isStyleAttr;\n    if (isClassAttr) {\n      value = tmpl(JSON.stringify(value), this);\n    } else if (isStyleAttr) {\n      value = styleObjectToString(value);\n    }\n  }\n\n  // remove original attribute\n  if (expr.attr && (!expr.isAttrRemoved || !hasValue || value === false)) {\n    remAttr(dom, expr.attr);\n    expr.isAttrRemoved = true;\n  }\n\n  // for the boolean attributes we don't need the value\n  // we can convert it to checked=true to checked=checked\n  if (expr.bool) { value = value ? attrName : false; }\n  if (expr.isRtag) { return updateDataIs(expr, this, value) }\n  if (expr.wasParsedOnce && expr.value === value) { return }\n\n  // update the expression value\n  expr.value = value;\n  expr.wasParsedOnce = true;\n\n  // if the value is an object we can not do much more with it\n  if (isObj && !isToggle) { return }\n  // avoid to render undefined/null values\n  if (isBlank(value)) { value = ''; }\n\n  // textarea and text nodes have no attribute name\n  if (!attrName) {\n    // about #815 w/o replace: the browser converts the value to a string,\n    // the comparison by \"==\" does too, but not in the server\n    value += '';\n    // test for parent avoids error with invalid assignment to nodeValue\n    if (parent) {\n      // cache the parent node because somehow it will become null on IE\n      // on the next iteration\n      expr.parent = parent;\n      if (parent.tagName === 'TEXTAREA') {\n        parent.value = value;                    // #1113\n        if (!IE_VERSION) { dom.nodeValue = value; }  // #1625 IE throws here, nodeValue\n      }                                         // will be available on 'updated'\n      else { dom.nodeValue = value; }\n    }\n    return\n  }\n\n\n  // event handler\n  if (isFunction(value)) {\n    setEventHandler(attrName, value, dom, this);\n  // show / hide\n  } else if (isToggle) {\n    toggleVisibility(dom, attrName === HIDE_DIRECTIVE ? !value : value);\n  // handle attributes\n  } else {\n    if (expr.bool) {\n      dom[attrName] = value;\n    }\n\n    if (attrName === 'value' && dom.value !== value) {\n      dom.value = value;\n    }\n\n    if (hasValue && value !== false) {\n      setAttr(dom, attrName, value);\n    }\n\n    // make sure that in case of style changes\n    // the element stays hidden\n    if (isStyleAttr && dom.hidden) { toggleVisibility(dom, false); }\n  }\n}\n\n/**\n * Update all the expressions in a Tag instance\n * @this Tag\n * @param { Array } expressions - expression that must be re evaluated\n */\nfunction updateAllExpressions(expressions) {\n  each(expressions, updateExpression.bind(this));\n}\n\nvar IfExpr = {\n  init: function init(dom, tag, expr) {\n    remAttr(dom, CONDITIONAL_DIRECTIVE);\n    this.tag = tag;\n    this.expr = expr;\n    this.stub = createDOMPlaceholder();\n    this.pristine = dom;\n\n    var p = dom.parentNode;\n    p.insertBefore(this.stub, dom);\n    p.removeChild(dom);\n\n    return this\n  },\n  update: function update() {\n    this.value = tmpl(this.expr, this.tag);\n\n    if (this.value && !this.current) { // insert\n      this.current = this.pristine.cloneNode(true);\n      this.stub.parentNode.insertBefore(this.current, this.stub);\n      this.expressions = [];\n      parseExpressions.apply(this.tag, [this.current, this.expressions, true]);\n    } else if (!this.value && this.current) { // remove\n      unmountAll(this.expressions);\n      if (this.current._tag) {\n        this.current._tag.unmount();\n      } else if (this.current.parentNode) {\n        this.current.parentNode.removeChild(this.current);\n      }\n      this.current = null;\n      this.expressions = [];\n    }\n\n    if (this.value) { updateAllExpressions.call(this.tag, this.expressions); }\n  },\n  unmount: function unmount() {\n    unmountAll(this.expressions || []);\n  }\n};\n\nvar RefExpr = {\n  init: function init(dom, parent, attrName, attrValue) {\n    this.dom = dom;\n    this.attr = attrName;\n    this.rawValue = attrValue;\n    this.parent = parent;\n    this.hasExp = tmpl.hasExpr(attrValue);\n    return this\n  },\n  update: function update() {\n    var old = this.value;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    // if the referenced element is a custom tag, then we set the tag itself, rather than DOM\n    var tagOrDom = this.dom.__ref || this.tag || this.dom;\n\n    this.value = this.hasExp ? tmpl(this.rawValue, this.parent) : this.rawValue;\n\n    // the name changed, so we need to remove it from the old key (if present)\n    if (!isBlank(old) && customParent) { arrayishRemove(customParent.refs, old, tagOrDom); }\n    if (!isBlank(this.value) && isString(this.value)) {\n      // add it to the refs of parent tag (this behavior was changed >=3.0)\n      if (customParent) { arrayishAdd(\n        customParent.refs,\n        this.value,\n        tagOrDom,\n        // use an array if it's a looped node and the ref is not an expression\n        null,\n        this.parent.__.index\n      ); }\n\n      if (this.value !== old) {\n        setAttr(this.dom, this.attr, this.value);\n      }\n    } else {\n      remAttr(this.dom, this.attr);\n    }\n\n    // cache the ref bound to this dom node\n    // to reuse it in future (see also #2329)\n    if (!this.dom.__ref) { this.dom.__ref = tagOrDom; }\n  },\n  unmount: function unmount() {\n    var tagOrDom = this.tag || this.dom;\n    var customParent = this.parent && getImmediateCustomParentTag(this.parent);\n    if (!isBlank(this.value) && customParent)\n      { arrayishRemove(customParent.refs, this.value, tagOrDom); }\n  }\n};\n\n/**\n * Convert the item looped into an object used to extend the child tag properties\n * @param   { Object } expr - object containing the keys used to extend the children tags\n * @param   { * } key - value to assign to the new object returned\n * @param   { * } val - value containing the position of the item in the array\n * @param   { Object } base - prototype object for the new item\n * @returns { Object } - new object containing the values of the original item\n *\n * The variables 'key' and 'val' are arbitrary.\n * They depend on the collection type looped (Array, Object)\n * and on the expression used on the each tag\n *\n */\nfunction mkitem(expr, key, val, base) {\n  var item = base ? Object.create(base) : {};\n  item[expr.key] = key;\n  if (expr.pos) { item[expr.pos] = val; }\n  return item\n}\n\n/**\n * Unmount the redundant tags\n * @param   { Array } items - array containing the current items to loop\n * @param   { Array } tags - array containing all the children tags\n */\nfunction unmountRedundant(items, tags) {\n  var i = tags.length,\n    j = items.length;\n\n  while (i > j) {\n    i--;\n    remove.apply(tags[i], [tags, i]);\n  }\n}\n\n\n/**\n * Remove a child tag\n * @this Tag\n * @param   { Array } tags - tags collection\n * @param   { Number } i - index of the tag to remove\n */\nfunction remove(tags, i) {\n  tags.splice(i, 1);\n  this.unmount();\n  arrayishRemove(this.parent, this, this.__.tagName, true);\n}\n\n/**\n * Move the nested custom tags in non custom loop tags\n * @this Tag\n * @param   { Number } i - current position of the loop tag\n */\nfunction moveNestedTags(i) {\n  var this$1 = this;\n\n  each(Object.keys(this.tags), function (tagName) {\n    moveChildTag.apply(this$1.tags[tagName], [tagName, i]);\n  });\n}\n\n/**\n * Move a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to move\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction move(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { moveVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Insert and mount a child tag\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Tag } nextTag - instance of the next tag preceding the one we want to insert\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction insert(root, nextTag, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.apply(this, [root, nextTag]); }\n  else\n    { safeInsert(root, this.root, nextTag.root); }\n}\n\n/**\n * Append a new tag into the DOM\n * @this Tag\n * @param   { HTMLElement } root - dom node containing all the loop children\n * @param   { Boolean } isVirtual - is it a virtual tag?\n */\nfunction append(root, isVirtual) {\n  if (isVirtual)\n    { makeVirtual.call(this, root); }\n  else\n    { root.appendChild(this.root); }\n}\n\n/**\n * Manage tags having the 'each'\n * @param   { HTMLElement } dom - DOM node we need to loop\n * @param   { Tag } parent - parent tag instance where the dom node is contained\n * @param   { String } expr - string contained in the 'each' attribute\n * @returns { Object } expression object for this each loop\n */\nfunction _each(dom, parent, expr) {\n\n  // remove the each property from the original tag\n  remAttr(dom, LOOP_DIRECTIVE);\n\n  var mustReorder = typeof getAttr(dom, LOOP_NO_REORDER_DIRECTIVE) !== T_STRING || remAttr(dom, LOOP_NO_REORDER_DIRECTIVE),\n    tagName = getTagName(dom),\n    impl = __TAG_IMPL[tagName],\n    parentNode = dom.parentNode,\n    placeholder = createDOMPlaceholder(),\n    child = getTag(dom),\n    ifExpr = getAttr(dom, CONDITIONAL_DIRECTIVE),\n    tags = [],\n    oldItems = [],\n    hasKeys,\n    isLoop = true,\n    isAnonymous = !__TAG_IMPL[tagName],\n    isVirtual = dom.tagName === 'VIRTUAL';\n\n  // parse the each expression\n  expr = tmpl.loopKeys(expr);\n  expr.isLoop = true;\n\n  if (ifExpr) { remAttr(dom, CONDITIONAL_DIRECTIVE); }\n\n  // insert a marked where the loop tags will be injected\n  parentNode.insertBefore(placeholder, dom);\n  parentNode.removeChild(dom);\n\n  expr.update = function updateEach() {\n    // get the new items collection\n    expr.value = tmpl(expr.val, parent);\n\n    var frag = createFrag(),\n      items = expr.value,\n      isObject$$1 = !isArray(items) && !isString(items),\n      root = placeholder.parentNode;\n\n    // if this DOM was removed the update here is useless\n    // this condition fixes also a weird async issue on IE in our unit test\n    if (!root) { return }\n\n    // object loop. any changes cause full redraw\n    if (isObject$$1) {\n      hasKeys = items || false;\n      items = hasKeys ?\n        Object.keys(items).map(function (key) {\n          return mkitem(expr, items[key], key)\n        }) : [];\n    } else {\n      hasKeys = false;\n    }\n\n    if (ifExpr) {\n      items = items.filter(function(item, i) {\n        if (expr.key && !isObject$$1)\n          { return !!tmpl(ifExpr, mkitem(expr, item, i, parent)) }\n\n        return !!tmpl(ifExpr, extend(Object.create(parent), item))\n      });\n    }\n\n    // loop all the new items\n    each(items, function(item, i) {\n      // reorder only if the items are objects\n      var\n        doReorder = mustReorder && typeof item === T_OBJECT && !hasKeys,\n        oldPos = oldItems.indexOf(item),\n        isNew = oldPos === -1,\n        pos = !isNew && doReorder ? oldPos : i,\n        // does a tag exist in this position?\n        tag = tags[pos],\n        mustAppend = i >= oldItems.length,\n        mustCreate =  doReorder && isNew || !doReorder && !tag;\n\n      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item;\n\n      // new tag\n      if (mustCreate) {\n        tag = new Tag$1(impl, {\n          parent: parent,\n          isLoop: isLoop,\n          isAnonymous: isAnonymous,\n          tagName: tagName,\n          root: dom.cloneNode(isAnonymous),\n          item: item,\n          index: i,\n        }, dom.innerHTML);\n\n        // mount the tag\n        tag.mount();\n\n        if (mustAppend)\n          { append.apply(tag, [frag || root, isVirtual]); }\n        else\n          { insert.apply(tag, [root, tags[i], isVirtual]); }\n\n        if (!mustAppend) { oldItems.splice(i, 0, item); }\n        tags.splice(i, 0, tag);\n        if (child) { arrayishAdd(parent.tags, tagName, tag, true); }\n      } else if (pos !== i && doReorder) {\n        // move\n        if (contains(items, oldItems[pos])) {\n          move.apply(tag, [root, tags[i], isVirtual]);\n          // move the old tag instance\n          tags.splice(i, 0, tags.splice(pos, 1)[0]);\n          // move the old item\n          oldItems.splice(i, 0, oldItems.splice(pos, 1)[0]);\n        }\n\n        // update the position attribute if it exists\n        if (expr.pos) { tag[expr.pos] = i; }\n\n        // if the loop tags are not custom\n        // we need to move all their custom tags into the right position\n        if (!child && tag.tags) { moveNestedTags.call(tag, i); }\n      }\n\n      // cache the original item to use it in the events bound to this node\n      // and its children\n      tag.__.item = item;\n      tag.__.index = i;\n      tag.__.parent = parent;\n\n      if (!mustCreate) { tag.update(item); }\n    });\n\n    // remove the redundant tags\n    unmountRedundant(items, tags);\n\n    // clone the items array\n    oldItems = items.slice();\n\n    // this condition is weird u\n    root.insertBefore(frag, placeholder);\n  };\n\n  expr.unmount = function() {\n    each(tags, function(t) { t.unmount(); });\n  };\n\n  return expr\n}\n\n/**\n * Walk the tag DOM to detect the expressions to evaluate\n * @this Tag\n * @param   { HTMLElement } root - root tag where we will start digging the expressions\n * @param   { Array } expressions - empty array where the expressions will be added\n * @param   { Boolean } mustIncludeRoot - flag to decide whether the root must be parsed as well\n * @returns { Object } an object containing the root noode and the dom tree\n */\nfunction parseExpressions(root, expressions, mustIncludeRoot) {\n  var this$1 = this;\n\n  var tree = {parent: {children: expressions}};\n\n  walkNodes(root, function (dom, ctx) {\n    var type = dom.nodeType, parent = ctx.parent, attr, expr, tagImpl;\n    if (!mustIncludeRoot && dom === root) { return {parent: parent} }\n\n    // text node\n    if (type === 3 && dom.parentNode.tagName !== 'STYLE' && tmpl.hasExpr(dom.nodeValue))\n      { parent.children.push({dom: dom, expr: dom.nodeValue}); }\n\n    if (type !== 1) { return ctx } // not an element\n\n    var isVirtual = dom.tagName === 'VIRTUAL';\n\n    // loop. each does it's own thing (for now)\n    if (attr = getAttr(dom, LOOP_DIRECTIVE)) {\n      if(isVirtual) { setAttr(dom, 'loopVirtual', true); } // ignore here, handled in _each\n      parent.children.push(_each(dom, this$1, attr));\n      return false\n    }\n\n    // if-attrs become the new parent. Any following expressions (either on the current\n    // element, or below it) become children of this expression.\n    if (attr = getAttr(dom, CONDITIONAL_DIRECTIVE)) {\n      parent.children.push(Object.create(IfExpr).init(dom, this$1, attr));\n      return false\n    }\n\n    if (expr = getAttr(dom, IS_DIRECTIVE)) {\n      if (tmpl.hasExpr(expr)) {\n        parent.children.push({isRtag: true, expr: expr, dom: dom, attrs: [].slice.call(dom.attributes)});\n        return false\n      }\n    }\n\n    // if this is a tag, stop traversing here.\n    // we ignore the root, since parseExpressions is called while we're mounting that root\n    tagImpl = getTag(dom);\n    if(isVirtual) {\n      if(getAttr(dom, 'virtualized')) {dom.parentElement.removeChild(dom); } // tag created, remove from dom\n      if(!tagImpl && !getAttr(dom, 'virtualized') && !getAttr(dom, 'loopVirtual'))  // ok to create virtual tag\n        { tagImpl = { tmpl: dom.outerHTML }; }\n    }\n\n    if (tagImpl && (dom !== root || mustIncludeRoot)) {\n      if(isVirtual && !getAttr(dom, IS_DIRECTIVE)) { // handled in update\n        // can not remove attribute like directives\n        // so flag for removal after creation to prevent maximum stack error\n        setAttr(dom, 'virtualized', true);\n\n        var tag = new Tag$1({ tmpl: dom.outerHTML },\n          {root: dom, parent: this$1},\n          dom.innerHTML);\n        parent.children.push(tag); // no return, anonymous tag, keep parsing\n      } else {\n        var conf = {root: dom, parent: this$1, hasImpl: true};\n        parent.children.push(initChildTag(tagImpl, conf, dom.innerHTML, this$1));\n        return false\n      }\n    }\n\n    // attribute expressions\n    parseAttributes.apply(this$1, [dom, dom.attributes, function(attr, expr) {\n      if (!expr) { return }\n      parent.children.push(expr);\n    }]);\n\n    // whatever the parent is, all child elements get the same parent.\n    // If this element had an if-attr, that's the parent for all child elements\n    return {parent: parent}\n  }, tree);\n}\n\n/**\n * Calls `fn` for every attribute on an element. If that attr has an expression,\n * it is also passed to fn.\n * @this Tag\n * @param   { HTMLElement } dom - dom node to parse\n * @param   { Array } attrs - array of attributes\n * @param   { Function } fn - callback to exec on any iteration\n */\nfunction parseAttributes(dom, attrs, fn) {\n  var this$1 = this;\n\n  each(attrs, function (attr) {\n    if (!attr) { return false }\n\n    var name = attr.name, bool = isBoolAttr(name), expr;\n\n    if (contains(REF_DIRECTIVES, name)) {\n      expr =  Object.create(RefExpr).init(dom, this$1, name, attr.value);\n    } else if (tmpl.hasExpr(attr.value)) {\n      expr = {dom: dom, expr: attr.value, attr: name, bool: bool};\n    }\n\n    fn(attr, expr);\n  });\n}\n\n/*\n  Includes hacks needed for the Internet Explorer version 9 and below\n  See: http://kangax.github.io/compat-table/es5/#ie8\n       http://codeplanet.io/dropping-ie8/\n*/\n\nvar reHasYield  = /<yield\\b/i;\nvar reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig;\nvar reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig;\nvar reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig;\nvar rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' };\nvar tblTags = IE_VERSION && IE_VERSION < 10 ? RE_SPECIAL_TAGS : RE_SPECIAL_TAGS_NO_OPTION;\nvar GENERIC = 'div';\nvar SVG = 'svg';\n\n\n/*\n  Creates the root element for table or select child elements:\n  tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n*/\nfunction specialTags(el, tmpl, tagName) {\n\n  var\n    select = tagName[0] === 'o',\n    parent = select ? 'select>' : 'table>';\n\n  // trim() is important here, this ensures we don't have artifacts,\n  // so we can check if we have only one element inside the parent\n  el.innerHTML = '<' + parent + tmpl.trim() + '</' + parent;\n  parent = el.firstChild;\n\n  // returns the immediate parent if tr/th/td/col is the only element, if not\n  // returns the whole tree, as this can include additional elements\n  /* istanbul ignore next */\n  if (select) {\n    parent.selectedIndex = -1;  // for IE9, compatible w/current riot behavior\n  } else {\n    // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n    var tname = rootEls[tagName];\n    if (tname && parent.childElementCount === 1) { parent = $(tname, parent); }\n  }\n  return parent\n}\n\n/*\n  Replace the yield tag from any tag template with the innerHTML of the\n  original tag in the page\n*/\nfunction replaceYield(tmpl, html) {\n  // do nothing if no yield\n  if (!reHasYield.test(tmpl)) { return tmpl }\n\n  // be careful with #1343 - string on the source having `$1`\n  var src = {};\n\n  html = html && html.replace(reYieldSrc, function (_, ref, text) {\n    src[ref] = src[ref] || text;   // preserve first definition\n    return ''\n  }).trim();\n\n  return tmpl\n    .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n      return src[ref] || def || ''\n    })\n    .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n      return html || def || ''\n    })\n}\n\n/**\n * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n *\n * @param   { String } tmpl  - The template coming from the custom tag definition\n * @param   { String } html - HTML content that comes from the DOM element where you\n *           will mount the tag, mostly the original tag in the page\n * @param   { Boolean } isSvg - true if the root node is an svg\n * @returns { HTMLElement } DOM element with _tmpl_ merged through `YIELD` with the _html_.\n */\nfunction mkdom(tmpl, html, isSvg$$1) {\n  var match   = tmpl && tmpl.match(/^\\s*<([-\\w]+)/),\n    tagName = match && match[1].toLowerCase(),\n    el = mkEl(isSvg$$1 ? SVG : GENERIC);\n\n  // replace all the yield tags with the tag inner html\n  tmpl = replaceYield(tmpl, html);\n\n  /* istanbul ignore next */\n  if (tblTags.test(tagName))\n    { el = specialTags(el, tmpl, tagName); }\n  else\n    { setInnerHTML(el, tmpl); }\n\n  return el\n}\n\n/**\n * Another way to create a riot tag a bit more es6 friendly\n * @param { HTMLElement } el - tag DOM selector or DOM node/s\n * @param { Object } opts - tag logic\n * @returns { Tag } new riot tag instance\n */\nfunction Tag$2(el, opts) {\n  // get the tag properties from the class constructor\n  var ref = this;\n  var name = ref.name;\n  var tmpl = ref.tmpl;\n  var css = ref.css;\n  var attrs = ref.attrs;\n  var onCreate = ref.onCreate;\n  // register a new tag and cache the class prototype\n  if (!__TAG_IMPL[name]) {\n    tag$1(name, tmpl, css, attrs, onCreate);\n    // cache the class constructor\n    __TAG_IMPL[name].class = this.constructor;\n  }\n\n  // mount the tag using the class instance\n  mountTo(el, name, opts, this);\n  // inject the component css\n  if (css) { styleManager.inject(); }\n\n  return this\n}\n\n/**\n * Create a new riot tag implementation\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag$1(name, tmpl, css, attrs, fn) {\n  if (isFunction(attrs)) {\n    fn = attrs;\n\n    if (/^[\\w\\-]+\\s?=/.test(css)) {\n      attrs = css;\n      css = '';\n    } else\n      { attrs = ''; }\n  }\n\n  if (css) {\n    if (isFunction(css))\n      { fn = css; }\n    else\n      { styleManager.add(css); }\n  }\n\n  name = name.toLowerCase();\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Create a new riot tag implementation (for use by the compiler)\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   tmpl - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nfunction tag2$1(name, tmpl, css, attrs, fn) {\n  if (css) { styleManager.add(css, name); }\n\n  __TAG_IMPL[name] = { name: name, tmpl: tmpl, attrs: attrs, fn: fn };\n\n  return name\n}\n\n/**\n * Mount a tag using a specific tag implementation\n * @param   { * } selector - tag DOM selector or DOM node/s\n * @param   { String } tagName - tag implementation name\n * @param   { Object } opts - tag logic\n * @returns { Array } new tags instances\n */\nfunction mount$1(selector, tagName, opts) {\n  var tags = [];\n  var elem, allTags;\n\n  function pushTagsTo(root) {\n    if (root.tagName) {\n      var riotTag = getAttr(root, IS_DIRECTIVE), tag;\n\n      // have tagName? force riot-tag to be the same\n      if (tagName && riotTag !== tagName) {\n        riotTag = tagName;\n        setAttr(root, IS_DIRECTIVE, tagName);\n      }\n\n      tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts);\n\n      if (tag)\n        { tags.push(tag); }\n    } else if (root.length)\n      { each(root, pushTagsTo); } // assume nodeList\n  }\n\n  // inject styles into DOM\n  styleManager.inject();\n\n  if (isObject(tagName)) {\n    opts = tagName;\n    tagName = 0;\n  }\n\n  // crawl the DOM to find the tag\n  if (isString(selector)) {\n    selector = selector === '*' ?\n      // select all registered tags\n      // & tags found with the riot-tag attribute set\n      allTags = selectTags() :\n      // or just the ones named like the selector\n      selector + selectTags(selector.split(/, */));\n\n    // make sure to pass always a selector\n    // to the querySelectorAll function\n    elem = selector ? $$(selector) : [];\n  }\n  else\n    // probably you have passed already a tag or a NodeList\n    { elem = selector; }\n\n  // select all the registered and mount them inside their root elements\n  if (tagName === '*') {\n    // get all custom tags\n    tagName = allTags || selectTags();\n    // if the root els it's just a single tag\n    if (elem.tagName)\n      { elem = $$(tagName, elem); }\n    else {\n      // select all the children for all the different root elements\n      var nodeList = [];\n\n      each(elem, function (_el) { return nodeList.push($$(tagName, _el)); });\n\n      elem = nodeList;\n    }\n    // get rid of the tagName\n    tagName = 0;\n  }\n\n  pushTagsTo(elem);\n\n  return tags\n}\n\n// Create a mixin that could be globally shared across all the tags\nvar mixins = {};\nvar globals = mixins[GLOBAL_MIXIN] = {};\nvar mixins_id = 0;\n\n/**\n * Create/Return a mixin by its name\n * @param   { String }  name - mixin name (global mixin if object)\n * @param   { Object }  mix - mixin logic\n * @param   { Boolean } g - is global?\n * @returns { Object }  the mixin logic\n */\nfunction mixin$1(name, mix, g) {\n  // Unnamed global\n  if (isObject(name)) {\n    mixin$1((\"__\" + (mixins_id++) + \"__\"), name, true);\n    return\n  }\n\n  var store = g ? globals : mixins;\n\n  // Getter\n  if (!mix) {\n    if (isUndefined(store[name]))\n      { throw new Error((\"Unregistered mixin: \" + name)) }\n\n    return store[name]\n  }\n\n  // Setter\n  store[name] = isFunction(mix) ?\n    extend(mix.prototype, store[name] || {}) && mix :\n    extend(store[name] || {}, mix);\n}\n\n/**\n * Update all the tags instances created\n * @returns { Array } all the tags instances\n */\nfunction update$1() {\n  return each(__TAGS_CACHE, function (tag) { return tag.update(); })\n}\n\nfunction unregister$1(name) {\n  __TAG_IMPL[name] = null;\n}\n\nvar version$1 = 'v3.6.1';\n\n\nvar core = Object.freeze({\n\tTag: Tag$2,\n\ttag: tag$1,\n\ttag2: tag2$1,\n\tmount: mount$1,\n\tmixin: mixin$1,\n\tupdate: update$1,\n\tunregister: unregister$1,\n\tversion: version$1\n});\n\n// counter to give a unique id to all the Tag instances\nvar __uid = 0;\n\n/**\n * We need to update opts for this tag. That requires updating the expressions\n * in any attributes on the tag, and then copying the result onto opts.\n * @this Tag\n * @param   {Boolean} isLoop - is it a loop tag?\n * @param   { Tag }  parent - parent tag node\n * @param   { Boolean }  isAnonymous - is it a tag without any impl? (a tag not registered)\n * @param   { Object }  opts - tag options\n * @param   { Array }  instAttrs - tag attributes array\n */\nfunction updateOpts(isLoop, parent, isAnonymous, opts, instAttrs) {\n  // isAnonymous `each` tags treat `dom` and `root` differently. In this case\n  // (and only this case) we don't need to do updateOpts, because the regular parse\n  // will update those attrs. Plus, isAnonymous tags don't need opts anyway\n  if (isLoop && isAnonymous) { return }\n\n  var ctx = !isAnonymous && isLoop ? this : parent || this;\n  each(instAttrs, function (attr) {\n    if (attr.expr) { updateAllExpressions.call(ctx, [attr.expr]); }\n    // normalize the attribute names\n    opts[toCamel(attr.name).replace(ATTRS_PREFIX, '')] = attr.expr ? attr.expr.value : attr.value;\n  });\n}\n\n\n/**\n * Tag class\n * @constructor\n * @param { Object } impl - it contains the tag template, and logic\n * @param { Object } conf - tag options\n * @param { String } innerHTML - html that eventually we need to inject in the tag\n */\nfunction Tag$1(impl, conf, innerHTML) {\n  if ( impl === void 0 ) impl = {};\n  if ( conf === void 0 ) conf = {};\n\n  var opts = extend({}, conf.opts),\n    parent = conf.parent,\n    isLoop = conf.isLoop,\n    isAnonymous = !!conf.isAnonymous,\n    skipAnonymous = settings$1.skipAnonymousTags && isAnonymous,\n    item = cleanUpData(conf.item),\n    index = conf.index, // available only for the looped nodes\n    instAttrs = [], // All attributes on the Tag when it's first parsed\n    implAttrs = [], // expressions on this type of Tag\n    expressions = [],\n    root = conf.root,\n    tagName = conf.tagName || getTagName(root),\n    isVirtual = tagName === 'virtual',\n    isInline = !isVirtual && !impl.tmpl,\n    propsInSyncWithParent = [],\n    dom;\n\n  // make this tag observable\n  if (!skipAnonymous) { observable$1(this); }\n  // only call unmount if we have a valid __TAG_IMPL (has name property)\n  if (impl.name && root._tag) { root._tag.unmount(true); }\n\n  // not yet mounted\n  this.isMounted = false;\n\n  defineProperty(this, '__', {\n    isAnonymous: isAnonymous,\n    instAttrs: instAttrs,\n    innerHTML: innerHTML,\n    tagName: tagName,\n    index: index,\n    isLoop: isLoop,\n    isInline: isInline,\n    // tags having event listeners\n    // it would be better to use weak maps here but we can not introduce breaking changes now\n    listeners: [],\n    // these vars will be needed only for the virtual tags\n    virts: [],\n    tail: null,\n    head: null,\n    parent: null,\n    item: null\n  });\n\n  // create a unique id to this tag\n  // it could be handy to use it also to improve the virtual dom rendering speed\n  defineProperty(this, '_riot_id', ++__uid); // base 1 allows test !t._riot_id\n  defineProperty(this, 'root', root);\n  extend(this, { opts: opts }, item);\n  // protect the \"tags\" and \"refs\" property from being overridden\n  defineProperty(this, 'parent', parent || null);\n  defineProperty(this, 'tags', {});\n  defineProperty(this, 'refs', {});\n\n  if (isInline || isLoop && isAnonymous) {\n    dom = root;\n  } else {\n    if (!isVirtual) { root.innerHTML = ''; }\n    dom = mkdom(impl.tmpl, innerHTML, isSvg(root));\n  }\n\n  /**\n   * Update the tag expressions and options\n   * @param   { * }  data - data we want to use to extend the tag properties\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'update', function tagUpdate(data) {\n    var nextOpts = {},\n      canTrigger = this.isMounted && !skipAnonymous;\n\n    // make sure the data passed will not override\n    // the component core methods\n    data = cleanUpData(data);\n    extend(this, data);\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, nextOpts, instAttrs]);\n\n    if (canTrigger && this.isMounted && isFunction(this.shouldUpdate) && !this.shouldUpdate(data, nextOpts)) {\n      return this\n    }\n\n    // inherit properties from the parent, but only for isAnonymous tags\n    if (isLoop && isAnonymous) { inheritFrom.apply(this, [this.parent, propsInSyncWithParent]); }\n    extend(opts, nextOpts);\n    if (canTrigger) { this.trigger('update', data); }\n    updateAllExpressions.call(this, expressions);\n    if (canTrigger) { this.trigger('updated'); }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Add a mixin to this tag\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mixin', function tagMixin() {\n    var this$1 = this;\n\n    each(arguments, function (mix) {\n      var instance, obj;\n      var props = [];\n\n      // properties blacklisted and will not be bound to the tag instance\n      var propsBlacklist = ['init', '__proto__'];\n\n      mix = isString(mix) ? mixin$1(mix) : mix;\n\n      // check if the mixin is a function\n      if (isFunction(mix)) {\n        // create the new mixin instance\n        instance = new mix();\n      } else { instance = mix; }\n\n      var proto = Object.getPrototypeOf(instance);\n\n      // build multilevel prototype inheritance chain property list\n      do { props = props.concat(Object.getOwnPropertyNames(obj || instance)); }\n      while (obj = Object.getPrototypeOf(obj || instance))\n\n      // loop the keys in the function prototype or the all object keys\n      each(props, function (key) {\n        // bind methods to this\n        // allow mixins to override other properties/parent mixins\n        if (!contains(propsBlacklist, key)) {\n          // check for getters/setters\n          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key);\n          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set);\n\n          // apply method only if it does not already exist on the instance\n          if (!this$1.hasOwnProperty(key) && hasGetterSetter) {\n            Object.defineProperty(this$1, key, descriptor);\n          } else {\n            this$1[key] = isFunction(instance[key]) ?\n              instance[key].bind(this$1) :\n              instance[key];\n          }\n        }\n      });\n\n      // init method will be called automatically\n      if (instance.init)\n        { instance.init.bind(this$1)(); }\n    });\n    return this\n  }.bind(this));\n\n  /**\n   * Mount the current tag instance\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'mount', function tagMount() {\n    var this$1 = this;\n\n    root._tag = this; // keep a reference to the tag just created\n\n    // Read all the attrs on this instance. This give us the info we need for updateOpts\n    parseAttributes.apply(parent, [root, root.attributes, function (attr, expr) {\n      if (!isAnonymous && RefExpr.isPrototypeOf(expr)) { expr.tag = this$1; }\n      attr.expr = expr;\n      instAttrs.push(attr);\n    }]);\n\n    // update the root adding custom attributes coming from the compiler\n    implAttrs = [];\n    walkAttrs(impl.attrs, function (k, v) { implAttrs.push({name: k, value: v}); });\n    parseAttributes.apply(this, [root, implAttrs, function (attr, expr) {\n      if (expr) { expressions.push(expr); }\n      else { setAttr(root, attr.name, attr.value); }\n    }]);\n\n    // initialiation\n    updateOpts.apply(this, [isLoop, parent, isAnonymous, opts, instAttrs]);\n\n    // add global mixins\n    var globalMixin = mixin$1(GLOBAL_MIXIN);\n\n    if (globalMixin && !skipAnonymous) {\n      for (var i in globalMixin) {\n        if (globalMixin.hasOwnProperty(i)) {\n          this$1.mixin(globalMixin[i]);\n        }\n      }\n    }\n\n    if (impl.fn) { impl.fn.call(this, opts); }\n\n    if (!skipAnonymous) { this.trigger('before-mount'); }\n\n    // parse layout after init. fn may calculate args for nested custom tags\n    parseExpressions.apply(this, [dom, expressions, isAnonymous]);\n\n    this.update(item);\n\n    if (!isAnonymous && !isInline) {\n      while (dom.firstChild) { root.appendChild(dom.firstChild); }\n    }\n\n    defineProperty(this, 'root', root);\n    defineProperty(this, 'isMounted', true);\n\n    if (skipAnonymous) { return }\n\n    // if it's not a child tag we can trigger its mount event\n    if (!this.parent) {\n      this.trigger('mount');\n    }\n    // otherwise we need to wait that the parent \"mount\" or \"updated\" event gets triggered\n    else {\n      var p = getImmediateCustomParentTag(this.parent);\n      p.one(!p.isMounted ? 'mount' : 'updated', function () {\n        this$1.trigger('mount');\n      });\n    }\n\n    return this\n\n  }.bind(this));\n\n  /**\n   * Unmount the tag instance\n   * @param { Boolean } mustKeepRoot - if it's true the root node will not be removed\n   * @returns { Tag } the current tag instance\n   */\n  defineProperty(this, 'unmount', function tagUnmount(mustKeepRoot) {\n    var this$1 = this;\n\n    var el = this.root,\n      p = el.parentNode,\n      ptag,\n      tagIndex = __TAGS_CACHE.indexOf(this);\n\n    if (!skipAnonymous) { this.trigger('before-unmount'); }\n\n    // clear all attributes coming from the mounted tag\n    walkAttrs(impl.attrs, function (name) {\n      if (startsWith(name, ATTRS_PREFIX))\n        { name = name.slice(ATTRS_PREFIX.length); }\n\n      remAttr(root, name);\n    });\n\n    // remove all the event listeners\n    this.__.listeners.forEach(function (dom) {\n      Object.keys(dom[RIOT_EVENTS_KEY]).forEach(function (eventName) {\n        dom.removeEventListener(eventName, dom[RIOT_EVENTS_KEY][eventName]);\n      });\n    });\n\n    // remove this tag instance from the global virtualDom variable\n    if (tagIndex !== -1)\n      { __TAGS_CACHE.splice(tagIndex, 1); }\n\n    if (p || isVirtual) {\n      if (parent) {\n        ptag = getImmediateCustomParentTag(parent);\n\n        if (isVirtual) {\n          Object.keys(this.tags).forEach(function (tagName) {\n            arrayishRemove(ptag.tags, tagName, this$1.tags[tagName]);\n          });\n        } else {\n          arrayishRemove(ptag.tags, tagName, this);\n          // remove from _parent too\n          if(parent !== ptag) {\n            arrayishRemove(parent.tags, tagName, this);\n          }\n        }\n      } else {\n        // remove the tag contents\n        setInnerHTML(el, '');\n      }\n\n      if (p && !mustKeepRoot) { p.removeChild(el); }\n    }\n\n    if (this.__.virts) {\n      each(this.__.virts, function (v) {\n        if (v.parentNode) { v.parentNode.removeChild(v); }\n      });\n    }\n\n    // allow expressions to unmount themselves\n    unmountAll(expressions);\n    each(instAttrs, function (a) { return a.expr && a.expr.unmount && a.expr.unmount(); });\n\n    // custom internal unmount function to avoid relying on the observable\n    if (this.__.onUnmount) { this.__.onUnmount(); }\n\n    if (!skipAnonymous) {\n      this.trigger('unmount');\n      this.off('*');\n    }\n\n    defineProperty(this, 'isMounted', false);\n\n    delete this.root._tag;\n\n    return this\n\n  }.bind(this));\n}\n\n/**\n * Detect the tag implementation by a DOM node\n * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n */\nfunction getTag(dom) {\n  return dom.tagName && __TAG_IMPL[getAttr(dom, IS_DIRECTIVE) ||\n    getAttr(dom, IS_DIRECTIVE) || dom.tagName.toLowerCase()]\n}\n\n/**\n * Inherit properties from a target tag instance\n * @this Tag\n * @param   { Tag } target - tag where we will inherit properties\n * @param   { Array } propsInSyncWithParent - array of properties to sync with the target\n */\nfunction inheritFrom(target, propsInSyncWithParent) {\n  var this$1 = this;\n\n  each(Object.keys(target), function (k) {\n    // some properties must be always in sync with the parent tag\n    var mustSync = !isReservedName(k) && contains(propsInSyncWithParent, k);\n\n    if (isUndefined(this$1[k]) || mustSync) {\n      // track the property to keep in sync\n      // so we can keep it updated\n      if (!mustSync) { propsInSyncWithParent.push(k); }\n      this$1[k] = target[k];\n    }\n  });\n}\n\n/**\n * Move the position of a custom tag in its parent tag\n * @this Tag\n * @param   { String } tagName - key where the tag was stored\n * @param   { Number } newPos - index where the new tag will be stored\n */\nfunction moveChildTag(tagName, newPos) {\n  var parent = this.parent,\n    tags;\n  // no parent no move\n  if (!parent) { return }\n\n  tags = parent.tags[tagName];\n\n  if (isArray(tags))\n    { tags.splice(newPos, 0, tags.splice(tags.indexOf(this), 1)[0]); }\n  else { arrayishAdd(parent.tags, tagName, this); }\n}\n\n/**\n * Create a new child tag including it correctly into its parent\n * @param   { Object } child - child tag implementation\n * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n * @param   { String } innerHTML - inner html of the child node\n * @param   { Object } parent - instance of the parent tag including the child custom tag\n * @returns { Object } instance of the new child tag just created\n */\nfunction initChildTag(child, opts, innerHTML, parent) {\n  var tag = new Tag$1(child, opts, innerHTML),\n    tagName = opts.tagName || getTagName(opts.root, true),\n    ptag = getImmediateCustomParentTag(parent);\n  // fix for the parent attribute in the looped elements\n  defineProperty(tag, 'parent', ptag);\n  // store the real parent tag\n  // in some cases this could be different from the custom parent tag\n  // for example in nested loops\n  tag.__.parent = parent;\n\n  // add this tag to the custom parent tag\n  arrayishAdd(ptag.tags, tagName, tag);\n\n  // and also to the real parent tag\n  if (ptag !== parent)\n    { arrayishAdd(parent.tags, tagName, tag); }\n\n  return tag\n}\n\n/**\n * Loop backward all the parents tree to detect the first custom parent tag\n * @param   { Object } tag - a Tag instance\n * @returns { Object } the instance of the first custom parent tag found\n */\nfunction getImmediateCustomParentTag(tag) {\n  var ptag = tag;\n  while (ptag.__.isAnonymous) {\n    if (!ptag.parent) { break }\n    ptag = ptag.parent;\n  }\n  return ptag\n}\n\n/**\n * Trigger the unmount method on all the expressions\n * @param   { Array } expressions - DOM expressions\n */\nfunction unmountAll(expressions) {\n  each(expressions, function(expr) {\n    if (expr instanceof Tag$1) { expr.unmount(true); }\n    else if (expr.tagName) { expr.tag.unmount(true); }\n    else if (expr.unmount) { expr.unmount(); }\n  });\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { Boolean } skipDataIs - hack to ignore the data-is attribute when attaching to parent\n * @returns { String } name to identify this dom node in riot\n */\nfunction getTagName(dom, skipDataIs) {\n  var child = getTag(dom),\n    namedTag = !skipDataIs && getAttr(dom, IS_DIRECTIVE);\n  return namedTag && !tmpl.hasExpr(namedTag) ?\n                namedTag :\n              child ? child.name : dom.tagName.toLowerCase()\n}\n\n/**\n * With this function we avoid that the internal Tag methods get overridden\n * @param   { Object } data - options we want to use to extend the tag instance\n * @returns { Object } clean object without containing the riot internal reserved words\n */\nfunction cleanUpData(data) {\n  if (!(data instanceof Tag$1) && !(data && isFunction(data.trigger)))\n    { return data }\n\n  var o = {};\n  for (var key in data) {\n    if (!RE_RESERVED_NAMES.test(key)) { o[key] = data[key]; }\n  }\n  return o\n}\n\n/**\n * Set the property of an object for a given key. If something already\n * exists there, then it becomes an array containing both the old and new value.\n * @param { Object } obj - object on which to set the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be set\n * @param { Boolean } ensureArray - ensure that the property remains an array\n * @param { Number } index - add the new item in a certain array position\n */\nfunction arrayishAdd(obj, key, value, ensureArray, index) {\n  var dest = obj[key];\n  var isArr = isArray(dest);\n  var hasIndex = !isUndefined(index);\n\n  if (dest && dest === value) { return }\n\n  // if the key was never set, set it once\n  if (!dest && ensureArray) { obj[key] = [value]; }\n  else if (!dest) { obj[key] = value; }\n  // if it was an array and not yet set\n  else {\n    if (isArr) {\n      var oldIndex = dest.indexOf(value);\n      // this item never changed its position\n      if (oldIndex === index) { return }\n      // remove the item from its old position\n      if (oldIndex !== -1) { dest.splice(oldIndex, 1); }\n      // move or add the item\n      if (hasIndex) {\n        dest.splice(index, 0, value);\n      } else {\n        dest.push(value);\n      }\n    } else { obj[key] = [dest, value]; }\n  }\n}\n\n/**\n * Removes an item from an object at a given key. If the key points to an array,\n * then the item is just removed from the array.\n * @param { Object } obj - object on which to remove the property\n * @param { String } key - property name\n * @param { Object } value - the value of the property to be removed\n * @param { Boolean } ensureArray - ensure that the property remains an array\n*/\nfunction arrayishRemove(obj, key, value, ensureArray) {\n  if (isArray(obj[key])) {\n    var index = obj[key].indexOf(value);\n    if (index !== -1) { obj[key].splice(index, 1); }\n    if (!obj[key].length) { delete obj[key]; }\n    else if (obj[key].length === 1 && !ensureArray) { obj[key] = obj[key][0]; }\n  } else\n    { delete obj[key]; } // otherwise just delete the key\n}\n\n/**\n * Mount a tag creating new Tag instance\n * @param   { Object } root - dom node where the tag will be mounted\n * @param   { String } tagName - name of the riot tag we want to mount\n * @param   { Object } opts - options to pass to the Tag instance\n * @param   { Object } ctx - optional context that will be used to extend an existing class ( used in riot.Tag )\n * @returns { Tag } a new Tag instance\n */\nfunction mountTo(root, tagName, opts, ctx) {\n  var impl = __TAG_IMPL[tagName],\n    implClass = __TAG_IMPL[tagName].class,\n    tag = ctx || (implClass ? Object.create(implClass.prototype) : {}),\n    // cache the inner HTML to fix #855\n    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML;\n\n  var conf = extend({ root: root, opts: opts }, { parent: opts ? opts.parent : null });\n\n  if (impl && root) { Tag$1.apply(tag, [impl, conf, innerHTML]); }\n\n  if (tag && tag.mount) {\n    tag.mount(true);\n    // add this tag to the virtualDom variable\n    if (!contains(__TAGS_CACHE, tag)) { __TAGS_CACHE.push(tag); }\n  }\n\n  return tag\n}\n\n/**\n * makes a tag virtual and replaces a reference in the dom\n * @this Tag\n * @param { tag } the tag to make virtual\n * @param { ref } the dom reference location\n */\nfunction makeReplaceVirtual(tag, ref) {\n  var frag = createFrag();\n  makeVirtual.call(tag, frag);\n  ref.parentNode.replaceChild(frag, ref);\n}\n\n/**\n * Adds the elements for a virtual tag\n * @this Tag\n * @param { Node } src - the node that will do the inserting or appending\n * @param { Tag } target - only if inserting, insert before this tag's first child\n */\nfunction makeVirtual(src, target) {\n  var this$1 = this;\n\n  var head = createDOMPlaceholder(),\n    tail = createDOMPlaceholder(),\n    frag = createFrag(),\n    sib, el;\n\n  this.root.insertBefore(head, this.root.firstChild);\n  this.root.appendChild(tail);\n\n  this.__.head = el = head;\n  this.__.tail = tail;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    this$1.__.virts.push(el); // hold for unmounting\n    el = sib;\n  }\n\n  if (target)\n    { src.insertBefore(frag, target.__.head); }\n  else\n    { src.appendChild(frag); }\n}\n\n/**\n * Move virtual tag and all child nodes\n * @this Tag\n * @param { Node } src  - the node that will do the inserting\n * @param { Tag } target - insert before this tag's first child\n */\nfunction moveVirtual(src, target) {\n  var this$1 = this;\n\n  var el = this.__.head,\n    frag = createFrag(),\n    sib;\n\n  while (el) {\n    sib = el.nextSibling;\n    frag.appendChild(el);\n    el = sib;\n    if (el === this$1.__.tail) {\n      frag.appendChild(el);\n      src.insertBefore(frag, target.__.head);\n      break\n    }\n  }\n}\n\n/**\n * Get selectors for tags\n * @param   { Array } tags - tag names to select\n * @returns { String } selector\n */\nfunction selectTags(tags) {\n  // select all tags\n  if (!tags) {\n    var keys = Object.keys(__TAG_IMPL);\n    return keys + selectTags(keys)\n  }\n\n  return tags\n    .filter(function (t) { return !/[^-\\w]/.test(t); })\n    .reduce(function (list, t) {\n      var name = t.trim().toLowerCase();\n      return list + \",[\" + IS_DIRECTIVE + \"=\\\"\" + name + \"\\\"]\"\n    }, '')\n}\n\n\nvar tags = Object.freeze({\n\tgetTag: getTag,\n\tinheritFrom: inheritFrom,\n\tmoveChildTag: moveChildTag,\n\tinitChildTag: initChildTag,\n\tgetImmediateCustomParentTag: getImmediateCustomParentTag,\n\tunmountAll: unmountAll,\n\tgetTagName: getTagName,\n\tcleanUpData: cleanUpData,\n\tarrayishAdd: arrayishAdd,\n\tarrayishRemove: arrayishRemove,\n\tmountTo: mountTo,\n\tmakeReplaceVirtual: makeReplaceVirtual,\n\tmakeVirtual: makeVirtual,\n\tmoveVirtual: moveVirtual,\n\tselectTags: selectTags\n});\n\n/**\n * Riot public api\n */\nvar settings = settings$1;\nvar util = {\n  tmpl: tmpl,\n  brackets: brackets,\n  styleManager: styleManager,\n  vdom: __TAGS_CACHE,\n  styleNode: styleManager.styleNode,\n  // export the riot internal utils as well\n  dom: dom,\n  check: check,\n  misc: misc,\n  tags: tags\n};\n\n// export the core props/methods\nvar Tag$$1 = Tag$2;\nvar tag$$1 = tag$1;\nvar tag2$$1 = tag2$1;\nvar mount$$1 = mount$1;\nvar mixin$$1 = mixin$1;\nvar update$$1 = update$1;\nvar unregister$$1 = unregister$1;\nvar version$$1 = version$1;\nvar observable = observable$1;\n\nvar riot$1 = extend({}, core, {\n  observable: observable$1,\n  settings: settings,\n  util: util,\n});\n\nexports.settings = settings;\nexports.util = util;\nexports.Tag = Tag$$1;\nexports.tag = tag$$1;\nexports.tag2 = tag2$$1;\nexports.mount = mount$$1;\nexports.mixin = mixin$$1;\nexports.update = update$$1;\nexports.unregister = unregister$$1;\nexports.version = version$$1;\nexports.observable = observable;\nexports['default'] = riot$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/riot/riot.js\n// module id = 1\n// module chunks = 0","export {\n  scaleQuantile\n} from 'd3-scale'\n\nexport {\n  select,\n} from 'd3-selection'\n\nexport {\n  csvParse\n} from 'd3-dsv'\n\nexport {\n  geoPath,\n  geoMercator\n} from 'd3-geo'\n\nexport {\n  formatLocale\n} from 'd3-format'\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/lib/d3.js","import * as topojson from 'topojson'\nimport * as d3 from './lib/d3.js'\n\nconst geoSrc = require('json!../data/nrw-bb.topo.json')\nconst geoData = topojson.feature(geoSrc, geoSrc.objects['nrw-bb'])\n\nconst states = {\n  '05': ['Nordrhein-Westfalen', 'NRW'],\n  '12': ['Brandenburg', 'BB']\n}\nconst data = d3.csvParse(require('raw!../data/nrw_bb.csv')).map(d => {\n  const [state, stateShort] = states[d.state]\n  d.state = state\n  d.stateShort = stateShort\n  return d\n})\nconst search = str => data.filter(d => d.name.toLowerCase().indexOf(str) > -1)\n\ngeoData.features.map(f => {\n  f.id = f.properties.AGS\n  const _data = data.find(d => d.ags === f.id)\n  const {f_sum, t_sum} = _data\n  _data.fRatio = Math.round(f_sum / t_sum * 1000) / 10\n  f.properties = _data\n})\n\nmodule.exports = {\n  geoData,\n  data,\n  search\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/data.js","import * as d3 from '../../scripts/lib/d3.js'\n\n// const colors = ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026']\nconst colors = ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b']\nexport default d3.scaleQuantile().domain([650, 1100]).range(colors)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/get_color.js","export default hilighted => {\n  hilighted && hilighted.classed('-hilight', false)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/unhilight_path.js","// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 6\n// module chunks = 0","// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/build/d3-color.js\n// module id = 7\n// module chunks = 0","// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 8\n// module chunks = 0","// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = 9\n// module chunks = 0","import getColor from './get_color.js'\n\nriot.tag2('districts-map-legend', '<span class=\"{getClass(\\'annotation\\')}\">Dauer in Tagen</span> <ul class=\"{getClass(\\'list\\')}\"> <li each=\"{ticks}\" class=\"{parent.getClass(\\'list-item\\')}\"> {value}<span riot-style=\"background-color:{color};\"></span> </li> </ul>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.ticks = getColor.quantiles().map(q => {\n    return {\n      color: getColor(q),\n      value: Math.round(q)\n    }\n  })\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/districts-map-legend.tag","import * as d3 from '../../scripts/lib/d3.js'\nimport renderMap from './render_map.js'\nimport hilight from './hilight_path.js'\nimport unhilight from './unhilight_path.js'\n\nriot.tag2('districts-map', '<h4 class=\"{getClass(\\'title\\')}\">{titles[opts.gender]}</h4> <span class=\"{getClass(\\'subtitle\\')}\">Durchschnittliche Dauer im Minijob</span> <div class=\"{getClass(\\'svg-wrapper\\')}\" id=\"svg-map-ew-{opts.gender}\"></div> <div class=\"{getClass(\\'labelling\\')}\"> <span class=\"{getClass(\\'labelling__name\\', \\'left\\')}\">Nordrhein-Westfalen</span> <span class=\"{getClass(\\'labelling__name\\', \\'right\\')}\">Brandenburg</span> </div>', '', 'class=\"{getClass()} {getClass()}--{opts.gender}\"', function(opts) {\n\n  this.titles = {\n    f: 'Frauen',\n    m: 'Männer'\n  }\n\n  this.on('mount', () => {\n    this.selection = renderMap({\n      element: d3.select(`#svg-map-ew-${this.opts.gender}`),\n      gender: this.opts.gender,\n      getClass: this.getClass\n    })\n  })\n\n  riot.control.on(riot.EVT.hilight, id => this.hilighted = hilight(this.selection, id, this.hilighted))\n  riot.control.on(riot.EVT.unhilight, () => unhilight(this.hilighted))\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/districts-map.tag","import './districts-map/districts-map.tag'\nimport './districts-map/districts-map-legend.tag'\nimport './map-infobox/map-infobox.tag'\nimport './map-searchbox/map-searchbox-container.tag'\n\nriot.tag2('cor-mj-nrwbb-map', '<map-searchbox-container ref=\"searchbox-container\"></map-searchbox-container> <map-infobox ref=\"infobox\"></map-infobox> <districts-map-legend ref=\"districts-map-legend\"></districts-map-legend> <section class=\"{getClass(\\'districts-map-container\\')}\"> <districts-map ref=\"districts-map\" gender=\"m\"></districts-map> <districts-map ref=\"districts-map\" gender=\"f\"></districts-map> </section>', '', 'class=\"{getClass(\\'app-container\\')}\"', function(opts) {\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-nrwbb-map.tag","riot.tag2('map-infobox', '<button class=\"{getClass(\\'close-btn\\')}\" aria-label=\"Close\" onclick=\"{close}\"></button> <header class=\"{getClass(\\'header\\')}\"> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'state\\')}\">{data.state}</span> <h3 class=\"{getClass(\\'title\\')}\">{data.name}</h3> </section> <section class=\"{getClass(\\'header__section\\')}\"> <span class=\"{getClass(\\'population\\')}\"><strong>{_f(data.t_sum)}</strong>&nbsp;Minijobber</span> <span class=\"{getClass(\\'f-ratio\\')}\">davon <strong>{_f(data.fRatio)}&nbsp;%</strong>&nbsp;Frauen</span> </section> <span class=\"-clear-\"></span> </header> <section class=\"{getClass(\\'section\\')}\"> <h4 class=\"{getClass(\\'section__title\\')}\">Durchschnittliche Dauer</h4> <dl> <dt>{_f(data.f_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--f\">Frauen</dd> </dl> <dl> <dt>{_f(data.m_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--m\">Männer</dd> </dl> <dl> <dt>{_f(data.t_mean)}</dt> <dt class=\"-small\">Tage</dt> <dd class=\"badge badge--t\">Gesamt</dd> </dl> <span class=\"-clear-\"></span> </section> <section class=\"{getClass(\\'section\\')}\"> <p class=\"{getClass(\\'annotation\\')}\"><strong>{_f(data.f_o5_rel)}&nbsp;%</strong> der Frauen sind <strong>länger als fünf Jahre</strong> in einem Minijob.</p> </section> <span class=\"-clear-\"></span>', '', 'if=\"{data}\" class=\"{getClass()} {-visible: visible}\"', function(opts) {\n\n  this.visible = false\n  this.data = {}\n\n  riot.control.on(riot.EVT.updateInfobox, data => {\n    this.update({\n      data,\n      visible: true\n    })\n  })\n\n  riot.control.on(riot.EVT.hideInfobox, () => {\n    this.update({visible: false})\n  })\n\n  this.close = () => this.update({visible: false})\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-infobox/map-infobox.tag","import {data} from '../../scripts/data.js'\n\nriot.tag2('items-selector', '<select onchange=\"{jumpTo}\"> <option each=\"{item, i in items}\" riot-value=\"{i}\">{item.stateShort} - {item.name}</option> </select>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.items = data.sort((a, b) => a.stateShort + a.name > b.stateShort + b.name ? 1 : -1)\n\n  this.jumpTo = e => {\n    const data = this.items[e.target.value]\n    this.parent.jumpTo(data)\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-searchbox/items-selector.tag","import './items-selector.tag'\nimport './map-searchbox.tag'\n\nriot.tag2('map-searchbox-container', '<items-selector ref=\"selector\" if=\"{showSelector}\"></items-selector> <map-searchbox ref=\"searchbox\" if=\"{showSearchbox}\"></map-searchbox> <span class=\"{getClass(\\'selector-toggle\\')}\" onclick=\"{toggleSelector}\">{getToggleText()}</a>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.showSelector = false\n  this.showSearchbox = true\n  this.toggleSelector = () => this.update({\n    showSelector: !this.showSelector,\n    showSearchbox: !this.showSearchbox\n  })\n\n  this.jumpTo = data => {\n    riot.control.trigger(riot.EVT.updateInfobox, data)\n    riot.control.trigger(riot.EVT.hilight, data.ags)\n  }\n\n  this.getToggleText = () => this.showSearchbox ? 'Wähle aus einer Liste aus' : 'Benutze die Suche'\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-searchbox/map-searchbox-container.tag","import {search} from '../../scripts/data.js'\n\nriot.tag2('map-searchbox', '<section class=\"{getClass(\\'input-wrapper\\')}\"> <input type=\"text\" oninput=\"{doSearch}\" class=\"{getClass(\\'input\\')}\" placeholder=\"Suche nach Deinem Landkreis...\"> </section> <ul if=\"{results.length}\" class=\"{getClass(\\'result-list\\')}\"> <li each=\"{results}\" class=\"{parent.getClass(\\'result-list__item\\')}\" onclick=\"{handleClick}\"> {name}<span>{state}</span> </li> </ul>', '', 'class=\"{getClass()}\"', function(opts) {\n\n  this.results = []\n\n  this.doSearch = e => {\n    riot.control.trigger(riot.EVT.hideInfobox)\n    const str = e.target.value.toLowerCase()\n    if (str.length > 2) this.update({results: search(str)})\n    else this.clearResults()\n  }\n\n  this.handleClick = e => {\n    this.clearResults()\n    this.parent.jumpTo(e.item)\n  }\n\n  this.clearResults = () => {\n    this.update({results: []})\n  }\n\n  riot.control.on(riot.EVT.clearResults, () => {\n    this.clearResults()\n  })\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/map-searchbox/map-searchbox.tag","import unhilight from './unhilight_path.js'\n\nexport default (selection, id, hilighted) => {\n  hilighted && unhilight(hilighted)\n  const path = selection.select(function(d) {\n    return d.id === id && this\n  })\n  path.node().parentNode.appendChild(path.node())\n  path.classed('-hilight', true)\n  return path\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/hilight_path.js","import * as d3 from '../../scripts/lib/d3.js'\nimport {geoData} from '../../scripts/data.js'\nimport getColor from './get_color.js'\n\nexport default ({\n  element,\n  colorCol,\n  getClass,\n  gender\n}) => {\n\n  const data = geoData\n  const path = d3.geoPath().projection(d3.geoMercator().fitSize([620, 300], data))\n\n  return element.append('svg')\n      .attr('class', getClass('svg'))\n      .attr('preserveAspectRatio', 'xMinYMin meet')\n      .attr('viewBox', '0 0 620 300')\n    .append('g')\n    .selectAll('path').data(data.features).enter().append('path')\n      .attr('class', getClass('path'))\n      .attr('d', path)\n      .attr('fill', d => getColor(+d.properties[`${gender}_mean`]))\n      .on('mouseover', d => {\n        riot.control.trigger(riot.EVT.hilight, d.id)\n        riot.control.trigger(riot.EVT.updateInfobox, d.properties)\n      })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/districts-map/render_map.js","'use strict'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\n// import 'babel-polyfill'\nimport '../styles/index.scss'\n\n// event bus\nimport './riot_event_bus.js'\n\n// config\nconst config = require('json!../config.json')\n\n// setup responsiveness\n// import {getWindowWidth, getActiveBreakpointFunc} from './responsive.js'\n// const getActiveBreakpoint = getActiveBreakpointFunc(config.global.breakpoints)\n// riot.STORE.breakpoint = getActiveBreakpoint(getWindowWidth())\n// riot.STORE.getActiveBreakpoint = getActiveBreakpoint\n\n// mixins\nimport getClass from './mixins/class_name.js'\nimport numberFormat from './mixins/number_format.js'\nriot.mixin(getClass(config.global.cssNamespace))\nriot.mixin(numberFormat)\n\n// mount vizes\nimport '../components/districts-nrwbb-map.tag'\n// import '../components/duration-viz.tag'\n// import '../components/intro-viz.tag'\nimport {select} from './lib/d3.js'\n\nconst mount = (name) => {\n  const selector = `[data-riot-mount=\"${name}\"]`\n  select(selector).node() && riot.mount(selector, name)\n}\n\nmount('cor-mj-nrwbb-map')\n// mount('cor-mj-gender-durations')\n// mount('cor-mj-gender-intro')\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/index.js","// riot mixin for computing class names\n//\n// it takes a global `cssNamespace` on init that becomes prefix for all classes.\n//\n// components can have the `ref`-attribute set to append this (say, the name for this component) to the\n// global prefix\n//\n// components then have `this.getClass` that computes the acutal class name for something, e.g:\n//    global namespace is 'foo', components ref-attr is 'bar', then\n//      `getClass('title')` results in a class named 'foo-bar__title'\n//     if ref is undefined, `getClass('title')` becomes 'foo-title'\n\nexport default cssNamespace => {\n  return {\n    getClass: function(name, modifier) {\n      const ref = this.opts.ref\n      const part = ref ? `${cssNamespace}-${ref}` : false\n      const _class = name ?\n        part ? `${part}__${name}` : `${cssNamespace}-${name}`\n        : part\n      return modifier ? `${_class} ${_class}--${modifier}` : _class\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mixins/class_name.js","// riot mixin for formatting numbers to german locale\nimport * as d3 from '../lib/d3.js'\n\nconst loc = d3.formatLocale({\n  thousands: '.',\n  decimal: ',',\n  grouping: [3]\n})\n\nconst format = loc.format(',')\n\nmodule.exports = {_f: val => val && format(val)}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/mixins/number_format.js","import * as d3 from './lib/d3.js'\n\n// store\n// const S = {\n//   breakpoint: null,\n//   getActiveBreakpoint: null\n// }\n\n// event names\nconst E = {\n  updateInfobox: 'uib',\n  hideInfobox: 'hib',\n  clearResults: 'cr',\n  // windowResize: 'wr',\n  // breakpointChanged: 'bc',\n  hilight: 'hi',\n  unhilight: 'uh',\n  showSelector: 'ss'\n}\n\n// event bus\nconst C = riot.observable()\n\n// trigger actual breakpoint\n// C.on(E.windowResize, width => {\n//   const bp = S.getActiveBreakpoint(width)\n//   if (S.breakpoint !== bp) {\n//     S.breakpoint = bp\n//     C.trigger(E.breakpointChanged, bp)\n//   }\n// })\n\n\n// make available\n// riot.STORE = S\nriot.EVT = E\nriot.control = C\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/riot_event_bus.js","// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-collection/build/d3-collection.js\n// module id = 23\n// module chunks = 0","// https://d3js.org/d3-dsv/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dsv/build/d3-dsv.js\n// module id = 24\n// module chunks = 0","// https://d3js.org/d3-geo/ Version 1.6.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range$$1, x) {\n  return range$$1[0] <= range$$1[1] ? range$$1[0] <= x && x <= range$$1[1] : x < range$$1[0] || range$$1[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nvar circle = function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$1 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoPath = index;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$1;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-geo/build/d3-geo.js\n// module id = 25\n// module chunks = 0","// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/build/d3-interpolate.js\n// module id = 26\n// module chunks = 0","// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = d3Array.tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale/build/d3-scale.js\n// module id = 27\n// module chunks = 0","// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-selection/build/d3-selection.js\n// module id = 28\n// module chunks = 0","// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = 29\n// module chunks = 0","module.exports = {\n\t\"global\": {\n\t\t\"cssNamespace\": \"mjew\",\n\t\t\"breakpoints\": {\n\t\t\t\"small\": 600,\n\t\t\t\"medium\": 768,\n\t\t\t\"large\": 1280\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/config.json\n// module id = 31\n// module chunks = 0","module.exports = {\n\t\"type\": \"Topology\",\n\t\"arcs\": [\n\t\t[\n\t\t\t[\n\t\t\t\t7977,\n\t\t\t\t5401\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-102\n\t\t\t],\n\t\t\t[\n\t\t\t\t-151,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-102\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-138,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7660,\n\t\t\t\t4228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-148,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-155,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t172,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t127\n\t\t\t],\n\t\t\t[\n\t\t\t\t171,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t130,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t157,\n\t\t\t\t131\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10954,\n\t\t\t\t4423\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10921,\n\t\t\t\t4435\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10742,\n\t\t\t\t4343\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10711,\n\t\t\t\t4353\n\t\t\t],\n\t\t\t[\n\t\t\t\t-112,\n\t\t\t\t127\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10531,\n\t\t\t\t4670\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10420,\n\t\t\t\t4685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9967,\n\t\t\t\t4498\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9886,\n\t\t\t\t4493\n\t\t\t],\n\t\t\t[\n\t\t\t\t-145,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-170,\n\t\t\t\t217\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9479,\n\t\t\t\t5151\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-85\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t145\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t102,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t123,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-119\n\t\t\t],\n\t\t\t[\n\t\t\t\t166,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-147\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-173\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t-133\n\t\t\t],\n\t\t\t[\n\t\t\t\t-189,\n\t\t\t\t-113\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9064,\n\t\t\t\t4957\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9089,\n\t\t\t\t4939\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9097,\n\t\t\t\t4924\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8796,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8809,\n\t\t\t\t3662\n\t\t\t],\n\t\t\t[\n\t\t\t\t-152,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t69\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8625,\n\t\t\t\t3865\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8546,\n\t\t\t\t3902\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8503,\n\t\t\t\t3965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8445,\n\t\t\t\t3957\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-225,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8121,\n\t\t\t\t3854\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8103,\n\t\t\t\t3892\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7887,\n\t\t\t\t3987\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-165,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t7977,\n\t\t\t\t5401\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-141\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t134,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2147,\n\t\t\t\t4019\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-47\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2326,\n\t\t\t\t3704\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2343,\n\t\t\t\t3696\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2380,\n\t\t\t\t3679\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2402,\n\t\t\t\t3661\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2478,\n\t\t\t\t3605\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2571,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2593,\n\t\t\t\t3521\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2587,\n\t\t\t\t3482\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2590,\n\t\t\t\t3461\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t3397\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-139\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2409,\n\t\t\t\t3252\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t3201\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2317,\n\t\t\t\t3232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t98\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2269,\n\t\t\t\t3330\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2232,\n\t\t\t\t3344\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2207,\n\t\t\t\t3319\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2064,\n\t\t\t\t3342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2010,\n\t\t\t\t3400\n\t\t\t],\n\t\t\t[\n\t\t\t\t-120,\n\t\t\t\t100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1890,\n\t\t\t\t3500\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1872,\n\t\t\t\t3502\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1853,\n\t\t\t\t3233\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1834,\n\t\t\t\t3236\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1804,\n\t\t\t\t3269\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1770,\n\t\t\t\t3275\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1725,\n\t\t\t\t3314\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1751,\n\t\t\t\t3510\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t3537\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1677,\n\t\t\t\t3513\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1672,\n\t\t\t\t3561\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t214\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1715,\n\t\t\t\t3775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1701,\n\t\t\t\t3899\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1764,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t3962\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2056,\n\t\t\t\t3970\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11539,\n\t\t\t\t1832\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11864,\n\t\t\t\t1830\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-149\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-136\n\t\t\t],\n\t\t\t[\n\t\t\t\t-170,\n\t\t\t\t-174\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-93\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-147\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-149,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-164,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-181,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10986,\n\t\t\t\t564\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10968,\n\t\t\t\t623\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10977,\n\t\t\t\t702\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11030,\n\t\t\t\t720\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11060,\n\t\t\t\t772\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11043,\n\t\t\t\t783\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10891,\n\t\t\t\t899\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10885,\n\t\t\t\t943\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t159\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10903,\n\t\t\t\t1102\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10905,\n\t\t\t\t1232\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10922,\n\t\t\t\t1265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10910,\n\t\t\t\t1308\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10884,\n\t\t\t\t1340\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10851,\n\t\t\t\t1420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10864,\n\t\t\t\t1480\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10877,\n\t\t\t\t1468\n\t\t\t],\n\t\t\t[\n\t\t\t\t126,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t176\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11449,\n\t\t\t\t1883\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11524,\n\t\t\t\t1854\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11216,\n\t\t\t\t1442\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11218,\n\t\t\t\t1366\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-135,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t169\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11245,\n\t\t\t\t1438\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4603,\n\t\t\t\t4115\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4698,\n\t\t\t\t4119\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4719,\n\t\t\t\t4094\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t165,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4932,\n\t\t\t\t3970\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4992,\n\t\t\t\t3981\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5022,\n\t\t\t\t3945\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5033,\n\t\t\t\t3952\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5044,\n\t\t\t\t3932\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5062,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5132,\n\t\t\t\t3406\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5112,\n\t\t\t\t3357\n\t\t\t],\n\t\t\t[\n\t\t\t\t-153,\n\t\t\t\t-120\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4959,\n\t\t\t\t3237\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4932,\n\t\t\t\t3234\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4934,\n\t\t\t\t3274\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4882,\n\t\t\t\t3273\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4878,\n\t\t\t\t3267\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t3271\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4563,\n\t\t\t\t3071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4501,\n\t\t\t\t3085\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4370,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t140,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4175,\n\t\t\t\t3742\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4133,\n\t\t\t\t3740\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t110\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4157,\n\t\t\t\t3850\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t3937\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t194,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4542,\n\t\t\t\t4139\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10616,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10769,\n\t\t\t\t1497\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10851,\n\t\t\t\t1420\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10910,\n\t\t\t\t1308\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10905,\n\t\t\t\t1232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10885,\n\t\t\t\t943\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11043,\n\t\t\t\t783\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11060,\n\t\t\t\t772\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10977,\n\t\t\t\t702\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10986,\n\t\t\t\t564\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-198,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10195,\n\t\t\t\t216\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10253,\n\t\t\t\t283\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10243,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t152\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10539,\n\t\t\t\t776\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10521,\n\t\t\t\t866\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10388,\n\t\t\t\t1097\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10422,\n\t\t\t\t1102\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10463,\n\t\t\t\t1091\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10475,\n\t\t\t\t1155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10426,\n\t\t\t\t1200\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10416,\n\t\t\t\t1239\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t134\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10462,\n\t\t\t\t1399\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10438,\n\t\t\t\t1413\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10469,\n\t\t\t\t1475\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10592,\n\t\t\t\t1548\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2093,\n\t\t\t\t1117\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2135,\n\t\t\t\t1111\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2162,\n\t\t\t\t1100\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2179,\n\t\t\t\t1071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2158,\n\t\t\t\t1006\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2112,\n\t\t\t\t980\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2182,\n\t\t\t\t834\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2133,\n\t\t\t\t841\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1881,\n\t\t\t\t848\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1898,\n\t\t\t\t867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t132\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1944,\n\t\t\t\t1166\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2011,\n\t\t\t\t1143\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2042,\n\t\t\t\t1173\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2405,\n\t\t\t\t2440\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2414,\n\t\t\t\t2435\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2450,\n\t\t\t\t2457\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2457,\n\t\t\t\t2443\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2475,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2496,\n\t\t\t\t2434\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2497,\n\t\t\t\t2387\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2514,\n\t\t\t\t2386\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2514,\n\t\t\t\t2406\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t2372\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t2342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2535,\n\t\t\t\t2295\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2545,\n\t\t\t\t2277\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-148\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-103\n\t\t\t],\n\t\t\t[\n\t\t\t\t107,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3009,\n\t\t\t\t1984\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2990,\n\t\t\t\t1974\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-123\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-96\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3127,\n\t\t\t\t1635\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2893,\n\t\t\t\t1329\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2564,\n\t\t\t\t1643\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2470,\n\t\t\t\t1674\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2302,\n\t\t\t\t1707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2287,\n\t\t\t\t1821\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2317,\n\t\t\t\t2001\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2286,\n\t\t\t\t2011\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2285,\n\t\t\t\t2094\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t2196\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2325,\n\t\t\t\t2240\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2340,\n\t\t\t\t2300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2326,\n\t\t\t\t2294\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2325,\n\t\t\t\t2318\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2328,\n\t\t\t\t2357\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2350,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2340,\n\t\t\t\t2425\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2339,\n\t\t\t\t2435\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2363,\n\t\t\t\t2449\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8631,\n\t\t\t\t3280\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8610,\n\t\t\t\t3213\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8618,\n\t\t\t\t3238\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8665,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8720,\n\t\t\t\t3067\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8905,\n\t\t\t\t3034\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8998,\n\t\t\t\t3013\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-139\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t204,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9323,\n\t\t\t\t2793\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t113\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9593,\n\t\t\t\t2896\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9565,\n\t\t\t\t2845\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9532,\n\t\t\t\t2778\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9446,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9380,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9317,\n\t\t\t\t2624\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9316,\n\t\t\t\t2598\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-140,\n\t\t\t\t-115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-136\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9033,\n\t\t\t\t1883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9020,\n\t\t\t\t1878\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-123,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8705,\n\t\t\t\t1755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t107\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t196\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8036,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8057,\n\t\t\t\t2983\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t141,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t123\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8384,\n\t\t\t\t3022\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8389,\n\t\t\t\t3048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8383,\n\t\t\t\t3072\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8425,\n\t\t\t\t3110\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8467,\n\t\t\t\t3121\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8484,\n\t\t\t\t3136\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8545,\n\t\t\t\t3161\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8578,\n\t\t\t\t3185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8535,\n\t\t\t\t3172\n\t\t\t],\n\t\t\t[\n\t\t\t\t-115,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8420,\n\t\t\t\t3115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8372,\n\t\t\t\t3040\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8145,\n\t\t\t\t2978\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8141,\n\t\t\t\t3012\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8135,\n\t\t\t\t3032\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8146,\n\t\t\t\t3056\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8162,\n\t\t\t\t3068\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8168,\n\t\t\t\t3092\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8181,\n\t\t\t\t3112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t167\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t188,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4882,\n\t\t\t\t3273\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4932,\n\t\t\t\t3234\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5002,\n\t\t\t\t3188\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5062,\n\t\t\t\t3163\n\t\t\t],\n\t\t\t[\n\t\t\t\t-131,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-79,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-125\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-83\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t145,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-109,\n\t\t\t\t-120\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-176,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4372,\n\t\t\t\t2063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4300,\n\t\t\t\t2148\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4269,\n\t\t\t\t2192\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4214,\n\t\t\t\t2151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4077,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3929,\n\t\t\t\t2066\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3864,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3843,\n\t\t\t\t2118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3812,\n\t\t\t\t2125\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3545,\n\t\t\t\t2430\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3518,\n\t\t\t\t2432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3504,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3376,\n\t\t\t\t2437\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3362,\n\t\t\t\t2453\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t129\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3356,\n\t\t\t\t2669\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3338,\n\t\t\t\t2724\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3320,\n\t\t\t\t2730\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3295,\n\t\t\t\t2846\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3292,\n\t\t\t\t2882\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3295,\n\t\t\t\t2921\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t112\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3250,\n\t\t\t\t3033\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t3040\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3290,\n\t\t\t\t3099\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3337,\n\t\t\t\t3105\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t131,\n\t\t\t\t-108\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t201,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t207,\n\t\t\t\t156\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4501,\n\t\t\t\t3085\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4855,\n\t\t\t\t3271\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3434,\n\t\t\t\t3743\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3520,\n\t\t\t\t3734\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3575,\n\t\t\t\t3718\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-100\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3808,\n\t\t\t\t3608\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3841,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3884,\n\t\t\t\t3579\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3957,\n\t\t\t\t3625\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3983,\n\t\t\t\t3741\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4012,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4105,\n\t\t\t\t3735\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3337,\n\t\t\t\t3105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3266,\n\t\t\t\t3040\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3244,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3228,\n\t\t\t\t3047\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3208,\n\t\t\t\t3086\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3227,\n\t\t\t\t3105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3200,\n\t\t\t\t3250\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3191,\n\t\t\t\t3358\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3263,\n\t\t\t\t3400\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t119\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t146\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3430,\n\t\t\t\t3665\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3410,\n\t\t\t\t3710\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2669,\n\t\t\t\t2921\n\t\t\t],\n\t\t\t[\n\t\t\t\t130,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2799,\n\t\t\t\t2847\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2796,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2807,\n\t\t\t\t2707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2735,\n\t\t\t\t2518\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2683,\n\t\t\t\t2505\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2669,\n\t\t\t\t2525\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2626,\n\t\t\t\t2546\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-130,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2531,\n\t\t\t\t2655\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2527,\n\t\t\t\t2685\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2484,\n\t\t\t\t2673\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2476,\n\t\t\t\t2711\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2465,\n\t\t\t\t2703\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2482,\n\t\t\t\t2749\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2502,\n\t\t\t\t2817\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t2847\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2550,\n\t\t\t\t2856\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2580,\n\t\t\t\t2897\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3208,\n\t\t\t\t3086\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3244,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3295,\n\t\t\t\t2921\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3295,\n\t\t\t\t2846\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-116\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3338,\n\t\t\t\t2724\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3362,\n\t\t\t\t2453\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3384,\n\t\t\t\t2420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-130,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3177,\n\t\t\t\t2207\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3167,\n\t\t\t\t2179\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3186,\n\t\t\t\t2007\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3147,\n\t\t\t\t1991\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3126,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t-59,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3067,\n\t\t\t\t1981\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2545,\n\t\t\t\t2277\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t2342\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2578,\n\t\t\t\t2411\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2675,\n\t\t\t\t2503\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2807,\n\t\t\t\t2707\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t84\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2799,\n\t\t\t\t2847\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2840,\n\t\t\t\t2834\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2847,\n\t\t\t\t2923\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2841,\n\t\t\t\t3001\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2877,\n\t\t\t\t3017\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2910,\n\t\t\t\t3051\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3029,\n\t\t\t\t3068\n\t\t\t],\n\t\t\t[\n\t\t\t\t150,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3179,\n\t\t\t\t3069\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11161,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11185,\n\t\t\t\t2965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11180,\n\t\t\t\t2923\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11234,\n\t\t\t\t2849\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11291,\n\t\t\t\t2827\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11413,\n\t\t\t\t2827\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11380,\n\t\t\t\t2610\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11457,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t137,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11661,\n\t\t\t\t2589\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11698,\n\t\t\t\t2538\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11703,\n\t\t\t\t2550\n\t\t\t],\n\t\t\t[\n\t\t\t\t146,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11539,\n\t\t\t\t1832\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11449,\n\t\t\t\t1883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11375,\n\t\t\t\t1956\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t52\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11260,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11218,\n\t\t\t\t1964\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t81\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11098,\n\t\t\t\t2036\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11124,\n\t\t\t\t2047\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t-11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-199,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t-159,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t194\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t146\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10472,\n\t\t\t\t2544\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10476,\n\t\t\t\t2587\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10235,\n\t\t\t\t2863\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t164\n\t\t\t],\n\t\t\t[\n\t\t\t\t-141,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10174,\n\t\t\t\t3099\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t99,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t149,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t136,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1486,\n\t\t\t\t2723\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1500,\n\t\t\t\t2737\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1518,\n\t\t\t\t2734\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-190\n\t\t\t],\n\t\t\t[\n\t\t\t\t170,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-23\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1715,\n\t\t\t\t2157\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1671,\n\t\t\t\t2124\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1601,\n\t\t\t\t2129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1587,\n\t\t\t\t2228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1507,\n\t\t\t\t2178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t181\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1390,\n\t\t\t\t2484\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t103\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1370,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1413,\n\t\t\t\t2737\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2352,\n\t\t\t\t3205\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2398,\n\t\t\t\t3099\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2396,\n\t\t\t\t3024\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2307,\n\t\t\t\t3020\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2296,\n\t\t\t\t2982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2260,\n\t\t\t\t2932\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2210,\n\t\t\t\t2902\n\t\t\t],\n\t\t\t[\n\t\t\t\t-137,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2073,\n\t\t\t\t2936\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2038,\n\t\t\t\t2966\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2035,\n\t\t\t\t3022\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2023,\n\t\t\t\t3067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2007,\n\t\t\t\t3093\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2062,\n\t\t\t\t3119\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2085,\n\t\t\t\t3153\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2114,\n\t\t\t\t3156\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2152,\n\t\t\t\t3170\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2176,\n\t\t\t\t3204\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2209,\n\t\t\t\t3192\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2248,\n\t\t\t\t3207\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2257,\n\t\t\t\t3220\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2525,\n\t\t\t\t3380\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2860,\n\t\t\t\t3285\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2874,\n\t\t\t\t3268\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-132\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2669,\n\t\t\t\t2921\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2598,\n\t\t\t\t2916\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2604,\n\t\t\t\t2960\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2530,\n\t\t\t\t2962\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t111\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2416,\n\t\t\t\t3101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2352,\n\t\t\t\t3205\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2386,\n\t\t\t\t3201\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2491,\n\t\t\t\t3397\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2521,\n\t\t\t\t3415\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2533,\n\t\t\t\t3401\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t898,\n\t\t\t\t4011\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t953,\n\t\t\t\t3971\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1002,\n\t\t\t\t3990\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-150\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t954,\n\t\t\t\t3693\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t879,\n\t\t\t\t3829\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-134\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t-89\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t6\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1028,\n\t\t\t\t3057\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1053,\n\t\t\t\t2983\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1033,\n\t\t\t\t2925\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t620,\n\t\t\t\t2770\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t567,\n\t\t\t\t2777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t94\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-90,\n\t\t\t\t145\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t136\n\t\t\t],\n\t\t\t[\n\t\t\t\t-133,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t160\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t182,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t157\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t148,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t82,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t2867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-137\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1000,\n\t\t\t\t2610\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1016,\n\t\t\t\t2588\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1075,\n\t\t\t\t2575\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1176,\n\t\t\t\t2497\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1068,\n\t\t\t\t2390\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1046,\n\t\t\t\t2405\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1021,\n\t\t\t\t2424\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t949,\n\t\t\t\t2459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-137,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t676,\n\t\t\t\t2263\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t637,\n\t\t\t\t2276\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t610,\n\t\t\t\t2302\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t486,\n\t\t\t\t2287\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t162\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t158\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t567,\n\t\t\t\t2777\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1033,\n\t\t\t\t2925\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5573,\n\t\t\t\t4114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5473,\n\t\t\t\t4104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5443,\n\t\t\t\t4115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5334,\n\t\t\t\t4254\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5277,\n\t\t\t\t4213\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5033,\n\t\t\t\t4059\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5033,\n\t\t\t\t3952\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4992,\n\t\t\t\t3981\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4719,\n\t\t\t\t4094\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t115\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4651,\n\t\t\t\t4209\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4517,\n\t\t\t\t4289\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4498,\n\t\t\t\t4332\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t109\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4544,\n\t\t\t\t4441\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4524,\n\t\t\t\t4572\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4560,\n\t\t\t\t4649\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4568,\n\t\t\t\t4723\n\t\t\t],\n\t\t\t[\n\t\t\t\t128,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4875,\n\t\t\t\t4779\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4933,\n\t\t\t\t4807\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4948,\n\t\t\t\t4851\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4954,\n\t\t\t\t4955\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t43\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5081,\n\t\t\t\t5017\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5087,\n\t\t\t\t5032\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-79\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t133,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-80\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-66\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1046,\n\t\t\t\t2405\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t2399\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1006,\n\t\t\t\t2194\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t973,\n\t\t\t\t2150\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t963,\n\t\t\t\t2140\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t970,\n\t\t\t\t2089\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t929,\n\t\t\t\t2090\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t887,\n\t\t\t\t2020\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t130\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t681,\n\t\t\t\t2241\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t949,\n\t\t\t\t2459\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5443,\n\t\t\t\t4115\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5573,\n\t\t\t\t4114\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-39\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t-129,\n\t\t\t\t-144\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5002,\n\t\t\t\t3188\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5112,\n\t\t\t\t3357\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5062,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t176\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5277,\n\t\t\t\t4213\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9413,\n\t\t\t\t1475\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t38\n\t\t\t],\n\t\t\t[\n\t\t\t\t179,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9912,\n\t\t\t\t1246\n\t\t\t],\n\t\t\t[\n\t\t\t\t70,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10363,\n\t\t\t\t1091\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10521,\n\t\t\t\t866\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10243,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10195,\n\t\t\t\t216\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-146,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t178\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t92\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t169,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t65\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t152\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9349,\n\t\t\t\t1432\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9382,\n\t\t\t\t1502\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4372,\n\t\t\t\t2063\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-65\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t-175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-131\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-105,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t-172\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t-140\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t131\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t162\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-88,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3230,\n\t\t\t\t1584\n\t\t\t],\n\t\t\t[\n\t\t\t\t98,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3364,\n\t\t\t\t1762\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3424,\n\t\t\t\t1864\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3791,\n\t\t\t\t1846\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3837,\n\t\t\t\t1863\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3840,\n\t\t\t\t1903\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3876,\n\t\t\t\t1966\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3846,\n\t\t\t\t2057\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4077,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4269,\n\t\t\t\t2192\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3206,\n\t\t\t\t3769\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3293,\n\t\t\t\t3695\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3374,\n\t\t\t\t3698\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3263,\n\t\t\t\t3400\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3170,\n\t\t\t\t3387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t133\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2981,\n\t\t\t\t3603\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3006,\n\t\t\t\t3608\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3007,\n\t\t\t\t3647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2991,\n\t\t\t\t3719\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3007,\n\t\t\t\t3742\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3041,\n\t\t\t\t3771\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3041,\n\t\t\t\t3789\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t57\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3188,\n\t\t\t\t3809\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9119,\n\t\t\t\t3158\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9148,\n\t\t\t\t3116\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9181,\n\t\t\t\t3064\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9334,\n\t\t\t\t3174\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-73\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8998,\n\t\t\t\t3013\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8899,\n\t\t\t\t3071\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8970,\n\t\t\t\t3132\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8993,\n\t\t\t\t3182\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9088,\n\t\t\t\t3210\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1131,\n\t\t\t\t3932\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1234,\n\t\t\t\t3958\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1277,\n\t\t\t\t3930\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1294,\n\t\t\t\t3897\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1359,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-16\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1576,\n\t\t\t\t3787\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t3766\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1691,\n\t\t\t\t3813\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1672,\n\t\t\t\t3561\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1677,\n\t\t\t\t3513\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t3501\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-94\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1617,\n\t\t\t\t3407\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1533,\n\t\t\t\t3346\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1545,\n\t\t\t\t3322\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1488,\n\t\t\t\t3282\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1479,\n\t\t\t\t3265\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1483,\n\t\t\t\t3235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1357,\n\t\t\t\t3282\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1323,\n\t\t\t\t3308\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1345,\n\t\t\t\t3211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t-88\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1297,\n\t\t\t\t3034\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1301,\n\t\t\t\t2988\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1248,\n\t\t\t\t2869\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1240,\n\t\t\t\t2854\n\t\t\t],\n\t\t\t[\n\t\t\t\t-125,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1078,\n\t\t\t\t2880\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t103\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1053,\n\t\t\t\t2983\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t74\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t879,\n\t\t\t\t3829\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1002,\n\t\t\t\t3990\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1036,\n\t\t\t\t3996\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1046,\n\t\t\t\t4005\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2110,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-100,\n\t\t\t\t-30\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1888,\n\t\t\t\t2459\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1861,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1921,\n\t\t\t\t2417\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1913,\n\t\t\t\t2349\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1781,\n\t\t\t\t2239\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1756,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1830,\n\t\t\t\t2178\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-80\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t2098\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t1990\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1772,\n\t\t\t\t1982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1737,\n\t\t\t\t1982\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1670,\n\t\t\t\t1962\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t21\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1671,\n\t\t\t\t2124\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1518,\n\t\t\t\t2734\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1539,\n\t\t\t\t2744\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1560,\n\t\t\t\t2740\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1591,\n\t\t\t\t2765\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1660,\n\t\t\t\t2795\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1712,\n\t\t\t\t2755\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2027,\n\t\t\t\t2807\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2037,\n\t\t\t\t2813\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1619,\n\t\t\t\t1138\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1665,\n\t\t\t\t1097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1661,\n\t\t\t\t1009\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1598,\n\t\t\t\t949\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-146\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1694,\n\t\t\t\t710\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1659,\n\t\t\t\t665\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1730,\n\t\t\t\t620\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1719,\n\t\t\t\t586\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-148,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-91\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-75,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-125,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t716,\n\t\t\t\t419\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t36\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t76\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t93\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t840,\n\t\t\t\t688\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t886,\n\t\t\t\t706\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t890,\n\t\t\t\t752\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t97,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1158,\n\t\t\t\t969\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1166,\n\t\t\t\t994\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1345,\n\t\t\t\t1105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1335,\n\t\t\t\t1117\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t3\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t1213\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-75\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1240,\n\t\t\t\t2854\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1243,\n\t\t\t\t2834\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1254,\n\t\t\t\t2838\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t2822\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1304,\n\t\t\t\t2791\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1356,\n\t\t\t\t2701\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1306,\n\t\t\t\t2658\n\t\t\t],\n\t\t\t[\n\t\t\t\t-87,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1219,\n\t\t\t\t2625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1217,\n\t\t\t\t2577\n\t\t\t],\n\t\t\t[\n\t\t\t\t-142,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1016,\n\t\t\t\t2588\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t2867\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t531,\n\t\t\t\t1633\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-183\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-162\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t665,\n\t\t\t\t910\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t690,\n\t\t\t\t878\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t847,\n\t\t\t\t747\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t864,\n\t\t\t\t714\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t886,\n\t\t\t\t706\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t716,\n\t\t\t\t419\n\t\t\t],\n\t\t\t[\n\t\t\t\t-74,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t169\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-127,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t220\n\t\t\t],\n\t\t\t[\n\t\t\t\t-134,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t103\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t381,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t506,\n\t\t\t\t1634\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t518,\n\t\t\t\t1650\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t589,\n\t\t\t\t639\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10711,\n\t\t\t\t4353\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10921,\n\t\t\t\t4435\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10954,\n\t\t\t\t4423\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-178\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10975,\n\t\t\t\t4245\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10932,\n\t\t\t\t4228\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10923,\n\t\t\t\t4265\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-124,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-64,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-213,\n\t\t\t\t-68\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-127\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-85\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10453,\n\t\t\t\t3586\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10446,\n\t\t\t\t3542\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10439,\n\t\t\t\t3508\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10255,\n\t\t\t\t3447\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10252,\n\t\t\t\t3458\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10171,\n\t\t\t\t3352\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10157,\n\t\t\t\t3362\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10082,\n\t\t\t\t3290\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t72\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t93\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t-139,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9746,\n\t\t\t\t3581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t17\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t163\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t63\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9930,\n\t\t\t\t4497\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10420,\n\t\t\t\t4685\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9745,\n\t\t\t\t4352\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9748,\n\t\t\t\t4351\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1507,\n\t\t\t\t2178\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1587,\n\t\t\t\t2228\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1601,\n\t\t\t\t2129\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1597,\n\t\t\t\t2015\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1511,\n\t\t\t\t1947\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1488,\n\t\t\t\t1973\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1466,\n\t\t\t\t1961\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t1965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-118,\n\t\t\t\t18\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1005,\n\t\t\t\t1914\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t986,\n\t\t\t\t1879\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t981,\n\t\t\t\t1938\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t952,\n\t\t\t\t1953\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t940,\n\t\t\t\t1948\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t937,\n\t\t\t\t2031\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t970,\n\t\t\t\t2089\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t973,\n\t\t\t\t2150\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1054,\n\t\t\t\t2399\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1176,\n\t\t\t\t2497\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1219,\n\t\t\t\t2625\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1306,\n\t\t\t\t2658\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1356,\n\t\t\t\t2701\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-36\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8545,\n\t\t\t\t3161\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8467,\n\t\t\t\t3121\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8425,\n\t\t\t\t3110\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8389,\n\t\t\t\t3048\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8057,\n\t\t\t\t2983\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8036,\n\t\t\t\t3014\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8089,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8129,\n\t\t\t\t3049\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8146,\n\t\t\t\t3056\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8141,\n\t\t\t\t3012\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8372,\n\t\t\t\t3040\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8535,\n\t\t\t\t3172\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8620,\n\t\t\t\t3275\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8628,\n\t\t\t\t3255\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8610,\n\t\t\t\t3213\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t19\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2610,\n\t\t\t\t3784\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t73\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2888,\n\t\t\t\t3724\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2912,\n\t\t\t\t3709\n\t\t\t],\n\t\t\t[\n\t\t\t\t65,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2977,\n\t\t\t\t3723\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3007,\n\t\t\t\t3647\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3006,\n\t\t\t\t3608\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3170,\n\t\t\t\t3387\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3191,\n\t\t\t\t3358\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-108\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3227,\n\t\t\t\t3105\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3029,\n\t\t\t\t3068\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2877,\n\t\t\t\t3017\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2847,\n\t\t\t\t2923\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-89\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2874,\n\t\t\t\t3268\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2525,\n\t\t\t\t3380\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2521,\n\t\t\t\t3415\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2587,\n\t\t\t\t3482\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2571,\n\t\t\t\t3563\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2510,\n\t\t\t\t3609\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2556,\n\t\t\t\t3619\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2526,\n\t\t\t\t3714\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2571,\n\t\t\t\t3756\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1988,\n\t\t\t\t2384\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2017,\n\t\t\t\t2301\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2036,\n\t\t\t\t2266\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2059,\n\t\t\t\t2211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2057,\n\t\t\t\t2192\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2097,\n\t\t\t\t2208\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2109,\n\t\t\t\t2204\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-72\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2121,\n\t\t\t\t2132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-48,\n\t\t\t\t-23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2073,\n\t\t\t\t2109\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t49\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1843,\n\t\t\t\t2120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1756,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1913,\n\t\t\t\t2349\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2265,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2286,\n\t\t\t\t2011\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2287,\n\t\t\t\t1821\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-72\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2470,\n\t\t\t\t1674\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2481,\n\t\t\t\t1647\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2482,\n\t\t\t\t1632\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2431,\n\t\t\t\t1608\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2424,\n\t\t\t\t1576\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2367,\n\t\t\t\t1560\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2287,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2140,\n\t\t\t\t1445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2087,\n\t\t\t\t1445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t171\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1938,\n\t\t\t\t1822\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1965,\n\t\t\t\t1859\n\t\t\t],\n\t\t\t[\n\t\t\t\t62,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1958,\n\t\t\t\t2049\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1821,\n\t\t\t\t2035\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1836,\n\t\t\t\t2098\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2073,\n\t\t\t\t2109\n\t\t\t],\n\t\t\t[\n\t\t\t\t48,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2109,\n\t\t\t\t2204\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2139,\n\t\t\t\t2209\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2196,\n\t\t\t\t2223\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3812,\n\t\t\t\t2125\n\t\t\t],\n\t\t\t[\n\t\t\t\t31,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3864,\n\t\t\t\t2069\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3876,\n\t\t\t\t1966\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3837,\n\t\t\t\t1863\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3424,\n\t\t\t\t1864\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-102\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3230,\n\t\t\t\t1584\n\t\t\t],\n\t\t\t[\n\t\t\t\t-103,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2990,\n\t\t\t\t1974\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3126,\n\t\t\t\t2002\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3147,\n\t\t\t\t1991\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3167,\n\t\t\t\t2179\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3384,\n\t\t\t\t2420\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3504,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3518,\n\t\t\t\t2432\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2871,\n\t\t\t\t4625\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2958,\n\t\t\t\t4594\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3017,\n\t\t\t\t4590\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-110\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3090,\n\t\t\t\t4329\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3094,\n\t\t\t\t4285\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-89,\n\t\t\t\t28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-116,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2848,\n\t\t\t\t4114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2820,\n\t\t\t\t4078\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t32\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2731,\n\t\t\t\t4180\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2713,\n\t\t\t\t4234\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2672,\n\t\t\t\t4329\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2621,\n\t\t\t\t4349\n\t\t\t],\n\t\t\t[\n\t\t\t\t69,\n\t\t\t\t95\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2675,\n\t\t\t\t4502\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2686,\n\t\t\t\t4504\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t110,\n\t\t\t\t74\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2846,\n\t\t\t\t4651\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3144,\n\t\t\t\t4785\n\t\t\t],\n\t\t\t[\n\t\t\t\t108,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3252,\n\t\t\t\t4739\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-87\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-35,\n\t\t\t\t-128\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3597,\n\t\t\t\t4532\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-54\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-94\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-99\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-96\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t-26\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-216\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-52\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3997,\n\t\t\t\t3758\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3957,\n\t\t\t\t3625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3841,\n\t\t\t\t3585\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3575,\n\t\t\t\t3718\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3434,\n\t\t\t\t3743\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3410,\n\t\t\t\t3710\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3374,\n\t\t\t\t3698\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3206,\n\t\t\t\t3769\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3041,\n\t\t\t\t3789\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3029,\n\t\t\t\t3827\n\t\t\t],\n\t\t\t[\n\t\t\t\t-113,\n\t\t\t\t202\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2870,\n\t\t\t\t4049\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3094,\n\t\t\t\t4285\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3017,\n\t\t\t\t4590\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3026,\n\t\t\t\t4642\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3035,\n\t\t\t\t4704\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3067,\n\t\t\t\t4767\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t1815\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t33\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1948,\n\t\t\t\t1837\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2087,\n\t\t\t\t1445\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-119,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1939,\n\t\t\t\t1323\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-110,\n\t\t\t\t-17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1810,\n\t\t\t\t1362\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1805,\n\t\t\t\t1354\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t97\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t34\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t108\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t130\n\t\t\t],\n\t\t\t[\n\t\t\t\t-80,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1467,\n\t\t\t\t1944\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1488,\n\t\t\t\t1973\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1597,\n\t\t\t\t2015\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-20\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1433,\n\t\t\t\t1965\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1805,\n\t\t\t\t1354\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1857,\n\t\t\t\t1306\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1886,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t-158,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1647,\n\t\t\t\t1231\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1614,\n\t\t\t\t1201\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1335,\n\t\t\t\t1117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1310,\n\t\t\t\t1172\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t129\n\t\t\t],\n\t\t\t[\n\t\t\t\t-157,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1127,\n\t\t\t\t1387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1102,\n\t\t\t\t1380\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t61\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t85\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t969,\n\t\t\t\t1860\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1995,\n\t\t\t\t5044\n\t\t\t],\n\t\t\t[\n\t\t\t\t88,\n\t\t\t\t-90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t109,\n\t\t\t\t-61\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2275,\n\t\t\t\t4662\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2238,\n\t\t\t\t4621\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2147,\n\t\t\t\t4634\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-95\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2022,\n\t\t\t\t4534\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t4535\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1931,\n\t\t\t\t4535\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1963,\n\t\t\t\t4457\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-133\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-100\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1963,\n\t\t\t\t4153\n\t\t\t],\n\t\t\t[\n\t\t\t\t78,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2041,\n\t\t\t\t4046\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t-76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t3962\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-79\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1701,\n\t\t\t\t3899\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-86\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1604,\n\t\t\t\t3766\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1359,\n\t\t\t\t3883\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1277,\n\t\t\t\t3930\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1131,\n\t\t\t\t3932\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t73\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1036,\n\t\t\t\t3996\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-44,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t898,\n\t\t\t\t4011\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t117\n\t\t\t],\n\t\t\t[\n\t\t\t\t103,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-31\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t147,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t40\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t106\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t80\n\t\t\t],\n\t\t\t[\n\t\t\t\t-184,\n\t\t\t\t126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t82\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t91\n\t\t\t],\n\t\t\t[\n\t\t\t\t155,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t84,\n\t\t\t\t149\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t121,\n\t\t\t\t46\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t-118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2319,\n\t\t\t\t4654\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t197,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2536,\n\t\t\t\t4528\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2579,\n\t\t\t\t4520\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t-31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2614,\n\t\t\t\t4489\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2621,\n\t\t\t\t4349\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2713,\n\t\t\t\t4234\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-54\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2820,\n\t\t\t\t4078\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3029,\n\t\t\t\t3827\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3007,\n\t\t\t\t3742\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2912,\n\t\t\t\t3709\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2610,\n\t\t\t\t3784\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2526,\n\t\t\t\t3714\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2510,\n\t\t\t\t3609\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2402,\n\t\t\t\t3661\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2343,\n\t\t\t\t3696\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2147,\n\t\t\t\t4019\n\t\t\t],\n\t\t\t[\n\t\t\t\t-106,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2041,\n\t\t\t\t4046\n\t\t\t],\n\t\t\t[\n\t\t\t\t-78,\n\t\t\t\t107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1963,\n\t\t\t\t4457\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t78\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1950,\n\t\t\t\t4535\n\t\t\t],\n\t\t\t[\n\t\t\t\t72,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2147,\n\t\t\t\t4634\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2275,\n\t\t\t\t4662\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2283,\n\t\t\t\t4657\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3144,\n\t\t\t\t4785\n\t\t\t],\n\t\t\t[\n\t\t\t\t-77,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3035,\n\t\t\t\t4704\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3026,\n\t\t\t\t4642\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2871,\n\t\t\t\t4625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2686,\n\t\t\t\t4504\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2579,\n\t\t\t\t4520\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2319,\n\t\t\t\t4654\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1995,\n\t\t\t\t5044\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t110\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t243,\n\t\t\t\t-5\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t41,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t53\n\t\t\t],\n\t\t\t[\n\t\t\t\t151,\n\t\t\t\t99\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t116\n\t\t\t],\n\t\t\t[\n\t\t\t\t139,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-143\n\t\t\t],\n\t\t\t[\n\t\t\t\t153,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t138,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-81\n\t\t\t],\n\t\t\t[\n\t\t\t\t64,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-196\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-46\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-234,\n\t\t\t\t-77\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2010,\n\t\t\t\t3400\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2064,\n\t\t\t\t3342\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-70\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2039,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-104\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2063,\n\t\t\t\t3168\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2007,\n\t\t\t\t3093\n\t\t\t],\n\t\t\t[\n\t\t\t\t-54,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1953,\n\t\t\t\t3104\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1920,\n\t\t\t\t3175\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1872,\n\t\t\t\t3502\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11218,\n\t\t\t\t1366\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t76\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11216,\n\t\t\t\t1442\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2317,\n\t\t\t\t3232\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t-12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2248,\n\t\t\t\t3207\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2176,\n\t\t\t\t3204\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2152,\n\t\t\t\t3170\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2085,\n\t\t\t\t3153\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2039,\n\t\t\t\t3272\n\t\t\t],\n\t\t\t[\n\t\t\t\t92,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t31\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2232,\n\t\t\t\t3344\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1965,\n\t\t\t\t1859\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1796,\n\t\t\t\t1815\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t88\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1670,\n\t\t\t\t1962\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1772,\n\t\t\t\t1982\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1819,\n\t\t\t\t1990\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1821,\n\t\t\t\t2035\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9768,\n\t\t\t\t2805\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-8\n\t\t\t],\n\t\t\t[\n\t\t\t\t90,\n\t\t\t\t-151\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-126\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-78\n\t\t\t],\n\t\t\t[\n\t\t\t\t106,\n\t\t\t\t24\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t-82\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-48\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-144\n\t\t\t],\n\t\t\t[\n\t\t\t\t144,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-107,\n\t\t\t\t-38\n\t\t\t],\n\t\t\t[\n\t\t\t\t-52,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t-104,\n\t\t\t\t31\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t114,\n\t\t\t\t8\n\t\t\t],\n\t\t\t[\n\t\t\t\t113,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10029,\n\t\t\t\t1528\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9995,\n\t\t\t\t1502\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-189\n\t\t\t],\n\t\t\t[\n\t\t\t\t-82,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9413,\n\t\t\t\t1475\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9349,\n\t\t\t\t1432\n\t\t\t],\n\t\t\t[\n\t\t\t\t-50,\n\t\t\t\t60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-41\n\t\t\t],\n\t\t\t[\n\t\t\t\t-68,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-99,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-176,\n\t\t\t\t0\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t89\n\t\t\t],\n\t\t\t[\n\t\t\t\t-108,\n\t\t\t\t-9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9020,\n\t\t\t\t1878\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9316,\n\t\t\t\t2598\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9380,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t0\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9532,\n\t\t\t\t2778\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t67\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9593,\n\t\t\t\t2896\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t124,\n\t\t\t\t-114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2893,\n\t\t\t\t1329\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t-101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-102,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t23\n\t\t\t],\n\t\t\t[\n\t\t\t\t-118,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-92,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-81,\n\t\t\t\t22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-187\n\t\t\t],\n\t\t\t[\n\t\t\t\t-167,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t9\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2112,\n\t\t\t\t980\n\t\t\t],\n\t\t\t[\n\t\t\t\t46,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2179,\n\t\t\t\t1071\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2162,\n\t\t\t\t1100\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2093,\n\t\t\t\t1117\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2042,\n\t\t\t\t1173\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2011,\n\t\t\t\t1143\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t23\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1898,\n\t\t\t\t867\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2133,\n\t\t\t\t841\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-77\n\t\t\t],\n\t\t\t[\n\t\t\t\t-122,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-70\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-84,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t-114,\n\t\t\t\t-18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1719,\n\t\t\t\t586\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1659,\n\t\t\t\t665\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1598,\n\t\t\t\t949\n\t\t\t],\n\t\t\t[\n\t\t\t\t63,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1665,\n\t\t\t\t1097\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1619,\n\t\t\t\t1138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t63\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1614,\n\t\t\t\t1201\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1886,\n\t\t\t\t1244\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1857,\n\t\t\t\t1306\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t56\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1939,\n\t\t\t\t1323\n\t\t\t],\n\t\t\t[\n\t\t\t\t35,\n\t\t\t\t4\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t25\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2287,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2367,\n\t\t\t\t1560\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2431,\n\t\t\t\t1608\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2481,\n\t\t\t\t1647\n\t\t\t],\n\t\t\t[\n\t\t\t\t83,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2261,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-9,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t-114\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t2455\n\t\t\t],\n\t\t\t[\n\t\t\t\t17,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2350,\n\t\t\t\t2422\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-65\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2328,\n\t\t\t\t2357\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2311,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2271,\n\t\t\t\t2354\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t2382\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2238,\n\t\t\t\t2397\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2219,\n\t\t\t\t2398\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2170,\n\t\t\t\t2362\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2154,\n\t\t\t\t2373\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2107,\n\t\t\t\t2359\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t-99\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2087,\n\t\t\t\t2260\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2017,\n\t\t\t\t2301\n\t\t\t],\n\t\t\t[\n\t\t\t\t-29,\n\t\t\t\t83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1913,\n\t\t\t\t2349\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1861,\n\t\t\t\t2451\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2110,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2133,\n\t\t\t\t2599\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2204,\n\t\t\t\t2625\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4388,\n\t\t\t\t4796\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4402,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t-107\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4506,\n\t\t\t\t4668\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4524,\n\t\t\t\t4572\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4498,\n\t\t\t\t4332\n\t\t\t],\n\t\t\t[\n\t\t\t\t-111,\n\t\t\t\t-48\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4387,\n\t\t\t\t4284\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t81\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-70,\n\t\t\t\t60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4102,\n\t\t\t\t4414\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4138,\n\t\t\t\t4421\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t68\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t127\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4247,\n\t\t\t\t4749\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4262,\n\t\t\t\t4784\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4294,\n\t\t\t\t4795\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10476,\n\t\t\t\t2587\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11124,\n\t\t\t\t2047\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11218,\n\t\t\t\t1964\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11260,\n\t\t\t\t1997\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t33,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11375,\n\t\t\t\t1956\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-69\n\t\t\t],\n\t\t\t[\n\t\t\t\t22,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10877,\n\t\t\t\t1468\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t13\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10616,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10469,\n\t\t\t\t1475\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-62\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10438,\n\t\t\t\t1413\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10416,\n\t\t\t\t1239\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10475,\n\t\t\t\t1155\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-64\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10422,\n\t\t\t\t1102\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9995,\n\t\t\t\t1502\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9768,\n\t\t\t\t2805\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t71,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-67\n\t\t\t],\n\t\t\t[\n\t\t\t\t91,\n\t\t\t\t-19\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t73,\n\t\t\t\t2\n\t\t\t],\n\t\t\t[\n\t\t\t\t21,\n\t\t\t\t53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2259,\n\t\t\t\t2382\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2311,\n\t\t\t\t2356\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2325,\n\t\t\t\t2318\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2340,\n\t\t\t\t2300\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-60\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2323,\n\t\t\t\t2196\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2265,\n\t\t\t\t2185\n\t\t\t],\n\t\t\t[\n\t\t\t\t-69,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2139,\n\t\t\t\t2209\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2097,\n\t\t\t\t2208\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2059,\n\t\t\t\t2211\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2107,\n\t\t\t\t2359\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2170,\n\t\t\t\t2362\n\t\t\t],\n\t\t\t[\n\t\t\t\t49,\n\t\t\t\t36\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2219,\n\t\t\t\t2398\n\t\t\t],\n\t\t\t[\n\t\t\t\t19,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t637,\n\t\t\t\t2276\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t-35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t887,\n\t\t\t\t2020\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t937,\n\t\t\t\t2031\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-83\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t952,\n\t\t\t\t1953\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t-15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t981,\n\t\t\t\t1938\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t943,\n\t\t\t\t1912\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-33\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-1\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t792,\n\t\t\t\t1831\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t691,\n\t\t\t\t1829\n\t\t\t],\n\t\t\t[\n\t\t\t\t-173,\n\t\t\t\t-132\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t531,\n\t\t\t\t1658\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t381,\n\t\t\t\t1544\n\t\t\t],\n\t\t\t[\n\t\t\t\t-152,\n\t\t\t\t64\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t132\n\t\t\t],\n\t\t\t[\n\t\t\t\t-117,\n\t\t\t\t14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-37\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t79\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t-86\n\t\t\t],\n\t\t\t[\n\t\t\t\t118,\n\t\t\t\t152\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t16\n\t\t\t],\n\t\t\t[\n\t\t\t\t89,\n\t\t\t\t104\n\t\t\t],\n\t\t\t[\n\t\t\t\t117,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t67\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t610,\n\t\t\t\t2302\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11586,\n\t\t\t\t2877\n\t\t\t],\n\t\t\t[\n\t\t\t\t38,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t-118\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t-154\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11698,\n\t\t\t\t2538\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11457,\n\t\t\t\t2547\n\t\t\t],\n\t\t\t[\n\t\t\t\t-72,\n\t\t\t\t-4\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t5\n\t\t\t],\n\t\t\t[\n\t\t\t\t15,\n\t\t\t\t69\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11413,\n\t\t\t\t2827\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t54\n\t\t\t],\n\t\t\t[\n\t\t\t\t162,\n\t\t\t\t-4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t943,\n\t\t\t\t1912\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t986,\n\t\t\t\t1879\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1102,\n\t\t\t\t1380\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1310,\n\t\t\t\t1172\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1166,\n\t\t\t\t994\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t890,\n\t\t\t\t752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t864,\n\t\t\t\t714\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t690,\n\t\t\t\t878\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t32\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t531,\n\t\t\t\t1633\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t518,\n\t\t\t\t1650\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t691,\n\t\t\t\t1829\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9886,\n\t\t\t\t4493\n\t\t\t],\n\t\t\t[\n\t\t\t\t44,\n\t\t\t\t4\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9746,\n\t\t\t\t3581\n\t\t\t],\n\t\t\t[\n\t\t\t\t-51,\n\t\t\t\t-63\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t-145,\n\t\t\t\t-40\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t-14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9351,\n\t\t\t\t3445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t18\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9324,\n\t\t\t\t3463\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9331,\n\t\t\t\t3473\n\t\t\t],\n\t\t\t[\n\t\t\t\t-66,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t118\n\t\t\t],\n\t\t\t[\n\t\t\t\t-96,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9111,\n\t\t\t\t3648\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9069,\n\t\t\t\t3690\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t-65,\n\t\t\t\t-3\n\t\t\t],\n\t\t\t[\n\t\t\t\t-85,\n\t\t\t\t-27\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-14\n\t\t\t],\n\t\t\t[\n\t\t\t\t-63,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8802,\n\t\t\t\t3699\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9097,\n\t\t\t\t4924\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9064,\n\t\t\t\t4957\n\t\t\t],\n\t\t\t[\n\t\t\t\t87,\n\t\t\t\t105\n\t\t\t],\n\t\t\t[\n\t\t\t\t105,\n\t\t\t\t51\n\t\t\t],\n\t\t\t[\n\t\t\t\t-5,\n\t\t\t\t55\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t42\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9745,\n\t\t\t\t4352\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10975,\n\t\t\t\t4245\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-57\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t36,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-18\n\t\t\t],\n\t\t\t[\n\t\t\t\t100,\n\t\t\t\t-116\n\t\t\t],\n\t\t\t[\n\t\t\t\t119,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t134,\n\t\t\t\t-190\n\t\t\t],\n\t\t\t[\n\t\t\t\t125,\n\t\t\t\t-109\n\t\t\t],\n\t\t\t[\n\t\t\t\t142,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-98\n\t\t\t],\n\t\t\t[\n\t\t\t\t-56,\n\t\t\t\t-117\n\t\t\t],\n\t\t\t[\n\t\t\t\t51,\n\t\t\t\t-106\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t-138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-43\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t-91\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11291,\n\t\t\t\t2827\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11180,\n\t\t\t\t2923\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t11185,\n\t\t\t\t2965\n\t\t\t],\n\t\t\t[\n\t\t\t\t-24,\n\t\t\t\t66\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10174,\n\t\t\t\t3099\n\t\t\t],\n\t\t\t[\n\t\t\t\t-43,\n\t\t\t\t15\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t176\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10157,\n\t\t\t\t3362\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10252,\n\t\t\t\t3458\n\t\t\t],\n\t\t\t[\n\t\t\t\t3,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10439,\n\t\t\t\t3508\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10446,\n\t\t\t\t3542\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t10923,\n\t\t\t\t4265\n\t\t\t],\n\t\t\t[\n\t\t\t\t9,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1725,\n\t\t\t\t3314\n\t\t\t],\n\t\t\t[\n\t\t\t\t45,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1804,\n\t\t\t\t3269\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1827,\n\t\t\t\t3227\n\t\t\t],\n\t\t\t[\n\t\t\t\t-10,\n\t\t\t\t-59\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1817,\n\t\t\t\t3168\n\t\t\t],\n\t\t\t[\n\t\t\t\t-94,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t3142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t90\n\t\t\t],\n\t\t\t[\n\t\t\t\t-86,\n\t\t\t\t118\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1563,\n\t\t\t\t3361\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1620,\n\t\t\t\t3501\n\t\t\t],\n\t\t\t[\n\t\t\t\t53,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t3537\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t-27\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1723,\n\t\t\t\t3142\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1706,\n\t\t\t\t3135\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t-53\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1664,\n\t\t\t\t3082\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1625,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1554,\n\t\t\t\t3006\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1524,\n\t\t\t\t3025\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t138\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1472,\n\t\t\t\t3206\n\t\t\t],\n\t\t\t[\n\t\t\t\t13,\n\t\t\t\t39\n\t\t\t],\n\t\t\t[\n\t\t\t\t-6,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1488,\n\t\t\t\t3282\n\t\t\t],\n\t\t\t[\n\t\t\t\t57,\n\t\t\t\t40\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1533,\n\t\t\t\t3346\n\t\t\t],\n\t\t\t[\n\t\t\t\t30,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1483,\n\t\t\t\t3235\n\t\t\t],\n\t\t\t[\n\t\t\t\t-11,\n\t\t\t\t-29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1524,\n\t\t\t\t3025\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1517,\n\t\t\t\t3001\n\t\t\t],\n\t\t\t[\n\t\t\t\t23,\n\t\t\t\t-22\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-172\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1547,\n\t\t\t\t2787\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-43\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1539,\n\t\t\t\t2744\n\t\t\t],\n\t\t\t[\n\t\t\t\t-39,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1486,\n\t\t\t\t2723\n\t\t\t],\n\t\t\t[\n\t\t\t\t-73,\n\t\t\t\t14\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1370,\n\t\t\t\t2691\n\t\t\t],\n\t\t\t[\n\t\t\t\t-91,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t30\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1274,\n\t\t\t\t2822\n\t\t\t],\n\t\t\t[\n\t\t\t\t-20,\n\t\t\t\t16\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1243,\n\t\t\t\t2834\n\t\t\t],\n\t\t\t[\n\t\t\t\t5,\n\t\t\t\t35\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1301,\n\t\t\t\t2988\n\t\t\t],\n\t\t\t[\n\t\t\t\t-4,\n\t\t\t\t46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1345,\n\t\t\t\t3211\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t97\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1323,\n\t\t\t\t3308\n\t\t\t],\n\t\t\t[\n\t\t\t\t34,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1953,\n\t\t\t\t3104\n\t\t\t],\n\t\t\t[\n\t\t\t\t54,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2023,\n\t\t\t\t3067\n\t\t\t],\n\t\t\t[\n\t\t\t\t12,\n\t\t\t\t-45\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2038,\n\t\t\t\t2966\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t-58\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t2908\n\t\t\t],\n\t\t\t[\n\t\t\t\t-19,\n\t\t\t\t-51\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2030,\n\t\t\t\t2857\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1712,\n\t\t\t\t2755\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1700,\n\t\t\t\t2804\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t141\n\t\t\t],\n\t\t\t[\n\t\t\t\t-67,\n\t\t\t\t61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1702,\n\t\t\t\t3043\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1706,\n\t\t\t\t3135\n\t\t\t],\n\t\t\t[\n\t\t\t\t111,\n\t\t\t\t33\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1827,\n\t\t\t\t3227\n\t\t\t],\n\t\t\t[\n\t\t\t\t7,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1834,\n\t\t\t\t3236\n\t\t\t],\n\t\t\t[\n\t\t\t\t86,\n\t\t\t\t-61\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4274,\n\t\t\t\t5224\n\t\t\t],\n\t\t\t[\n\t\t\t\t134,\n\t\t\t\t-32\n\t\t\t],\n\t\t\t[\n\t\t\t\t104,\n\t\t\t\t20\n\t\t\t],\n\t\t\t[\n\t\t\t\t192,\n\t\t\t\t-76\n\t\t\t],\n\t\t\t[\n\t\t\t\t55,\n\t\t\t\t-102\n\t\t\t],\n\t\t\t[\n\t\t\t\t-27,\n\t\t\t\t-71\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4732,\n\t\t\t\t4963\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4790,\n\t\t\t\t4961\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t68\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4886,\n\t\t\t\t5029\n\t\t\t],\n\t\t\t[\n\t\t\t\t25,\n\t\t\t\t-3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4911,\n\t\t\t\t5026\n\t\t\t],\n\t\t\t[\n\t\t\t\t28,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4939,\n\t\t\t\t5028\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4965,\n\t\t\t\t5029\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4991,\n\t\t\t\t5004\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-49\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4948,\n\t\t\t\t4851\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t-44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4933,\n\t\t\t\t4807\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4568,\n\t\t\t\t4723\n\t\t\t],\n\t\t\t[\n\t\t\t\t-62,\n\t\t\t\t-55\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4402,\n\t\t\t\t4775\n\t\t\t],\n\t\t\t[\n\t\t\t\t-14,\n\t\t\t\t21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4294,\n\t\t\t\t4795\n\t\t\t],\n\t\t\t[\n\t\t\t\t-32,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4262,\n\t\t\t\t4784\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4245,\n\t\t\t\t4777\n\t\t\t],\n\t\t\t[\n\t\t\t\t-41,\n\t\t\t\t15\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4204,\n\t\t\t\t4792\n\t\t\t],\n\t\t\t[\n\t\t\t\t-60,\n\t\t\t\t78\n\t\t\t],\n\t\t\t[\n\t\t\t\t137,\n\t\t\t\t86\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t50\n\t\t\t],\n\t\t\t[\n\t\t\t\t-93,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t-3,\n\t\t\t\t170\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t5081,\n\t\t\t\t5017\n\t\t\t],\n\t\t\t[\n\t\t\t\t-37,\n\t\t\t\t-21\n\t\t\t],\n\t\t\t[\n\t\t\t\t-53,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4965,\n\t\t\t\t5029\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t-1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4911,\n\t\t\t\t5026\n\t\t\t],\n\t\t\t[\n\t\t\t\t-25,\n\t\t\t\t3\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4790,\n\t\t\t\t4961\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4274,\n\t\t\t\t5224\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t44\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t101\n\t\t\t],\n\t\t\t[\n\t\t\t\t-34,\n\t\t\t\t120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-76,\n\t\t\t\t59\n\t\t\t],\n\t\t\t[\n\t\t\t\t-130,\n\t\t\t\t57\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t56\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t48\n\t\t\t],\n\t\t\t[\n\t\t\t\t115,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t40,\n\t\t\t\t37\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t83\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t62\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-42\n\t\t\t],\n\t\t\t[\n\t\t\t\t157,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t75,\n\t\t\t\t-62\n\t\t\t],\n\t\t\t[\n\t\t\t\t32,\n\t\t\t\t-215\n\t\t\t],\n\t\t\t[\n\t\t\t\t-12,\n\t\t\t\t-58\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t-55\n\t\t\t],\n\t\t\t[\n\t\t\t\t66,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t112,\n\t\t\t\t-25\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t41\n\t\t\t],\n\t\t\t[\n\t\t\t\t56,\n\t\t\t\t-6\n\t\t\t],\n\t\t\t[\n\t\t\t\t101,\n\t\t\t\t150\n\t\t\t],\n\t\t\t[\n\t\t\t\t29,\n\t\t\t\t7\n\t\t\t],\n\t\t\t[\n\t\t\t\t59,\n\t\t\t\t109\n\t\t\t],\n\t\t\t[\n\t\t\t\t76,\n\t\t\t\t-7\n\t\t\t],\n\t\t\t[\n\t\t\t\t61,\n\t\t\t\t-60\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-50\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-120\n\t\t\t],\n\t\t\t[\n\t\t\t\t-49,\n\t\t\t\t-71\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-84\n\t\t\t],\n\t\t\t[\n\t\t\t\t-95,\n\t\t\t\t-28\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-53\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-128\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-45\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t-35\n\t\t\t],\n\t\t\t[\n\t\t\t\t67,\n\t\t\t\t-56\n\t\t\t],\n\t\t\t[\n\t\t\t\t-46,\n\t\t\t\t-49\n\t\t\t],\n\t\t\t[\n\t\t\t\t0,\n\t\t\t\t-74\n\t\t\t],\n\t\t\t[\n\t\t\t\t-98,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8445,\n\t\t\t\t3957\n\t\t\t],\n\t\t\t[\n\t\t\t\t58,\n\t\t\t\t8\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8546,\n\t\t\t\t3902\n\t\t\t],\n\t\t\t[\n\t\t\t\t79,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8809,\n\t\t\t\t3662\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9069,\n\t\t\t\t3690\n\t\t\t],\n\t\t\t[\n\t\t\t\t42,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9331,\n\t\t\t\t3473\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9351,\n\t\t\t\t3445\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-122\n\t\t\t],\n\t\t\t[\n\t\t\t\t-22,\n\t\t\t\t-107\n\t\t\t],\n\t\t\t[\n\t\t\t\t60,\n\t\t\t\t-42\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9181,\n\t\t\t\t3064\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t9119,\n\t\t\t\t3158\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t52\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8993,\n\t\t\t\t3182\n\t\t\t],\n\t\t\t[\n\t\t\t\t-23,\n\t\t\t\t-50\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8899,\n\t\t\t\t3071\n\t\t\t],\n\t\t\t[\n\t\t\t\t6,\n\t\t\t\t-37\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8720,\n\t\t\t\t3067\n\t\t\t],\n\t\t\t[\n\t\t\t\t-55,\n\t\t\t\t-10\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8618,\n\t\t\t\t3238\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t17\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8620,\n\t\t\t\t3275\n\t\t\t],\n\t\t\t[\n\t\t\t\t10,\n\t\t\t\t-2\n\t\t\t],\n\t\t\t[\n\t\t\t\t1,\n\t\t\t\t7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8181,\n\t\t\t\t3112\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8162,\n\t\t\t\t3068\n\t\t\t],\n\t\t\t[\n\t\t\t\t-33,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8089,\n\t\t\t\t3028\n\t\t\t],\n\t\t\t[\n\t\t\t\t-97,\n\t\t\t\t-24\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t11\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t45\n\t\t\t],\n\t\t\t[\n\t\t\t\t16,\n\t\t\t\t12\n\t\t\t],\n\t\t\t[\n\t\t\t\t-45,\n\t\t\t\t87\n\t\t\t],\n\t\t\t[\n\t\t\t\t-101,\n\t\t\t\t75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-75\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t88\n\t\t\t],\n\t\t\t[\n\t\t\t\t52,\n\t\t\t\t146\n\t\t\t],\n\t\t\t[\n\t\t\t\t-2,\n\t\t\t\t119\n\t\t\t],\n\t\t\t[\n\t\t\t\t96,\n\t\t\t\t10\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t114\n\t\t\t],\n\t\t\t[\n\t\t\t\t-58,\n\t\t\t\t113\n\t\t\t],\n\t\t\t[\n\t\t\t\t27,\n\t\t\t\t209\n\t\t\t],\n\t\t\t[\n\t\t\t\t81,\n\t\t\t\t29\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t8103,\n\t\t\t\t3892\n\t\t\t],\n\t\t\t[\n\t\t\t\t18,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4245,\n\t\t\t\t4777\n\t\t\t],\n\t\t\t[\n\t\t\t\t2,\n\t\t\t\t-28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4138,\n\t\t\t\t4421\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-7\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4387,\n\t\t\t\t4284\n\t\t\t],\n\t\t\t[\n\t\t\t\t93,\n\t\t\t\t29\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t-24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4651,\n\t\t\t\t4209\n\t\t\t],\n\t\t\t[\n\t\t\t\t47,\n\t\t\t\t-90\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4603,\n\t\t\t\t4115\n\t\t\t],\n\t\t\t[\n\t\t\t\t-61,\n\t\t\t\t24\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4240,\n\t\t\t\t3937\n\t\t\t],\n\t\t\t[\n\t\t\t\t-83,\n\t\t\t\t-87\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4133,\n\t\t\t\t3740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-28,\n\t\t\t\t-5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t4012,\n\t\t\t\t3752\n\t\t\t],\n\t\t\t[\n\t\t\t\t-15,\n\t\t\t\t6\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t3597,\n\t\t\t\t4532\n\t\t\t],\n\t\t\t[\n\t\t\t\t39,\n\t\t\t\t131\n\t\t\t],\n\t\t\t[\n\t\t\t\t85,\n\t\t\t\t47\n\t\t\t],\n\t\t\t[\n\t\t\t\t68,\n\t\t\t\t-10\n\t\t\t],\n\t\t\t[\n\t\t\t\t26,\n\t\t\t\t66\n\t\t\t],\n\t\t\t[\n\t\t\t\t95,\n\t\t\t\t96\n\t\t\t],\n\t\t\t[\n\t\t\t\t94,\n\t\t\t\t-17\n\t\t\t],\n\t\t\t[\n\t\t\t\t80,\n\t\t\t\t-44\n\t\t\t],\n\t\t\t[\n\t\t\t\t120,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1700,\n\t\t\t\t2804\n\t\t\t],\n\t\t\t[\n\t\t\t\t-40,\n\t\t\t\t-9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1591,\n\t\t\t\t2765\n\t\t\t],\n\t\t\t[\n\t\t\t\t-31,\n\t\t\t\t-25\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1560,\n\t\t\t\t2740\n\t\t\t],\n\t\t\t[\n\t\t\t\t-13,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1517,\n\t\t\t\t3001\n\t\t\t],\n\t\t\t[\n\t\t\t\t37,\n\t\t\t\t5\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t1625,\n\t\t\t\t3031\n\t\t\t],\n\t\t\t[\n\t\t\t\t77,\n\t\t\t\t12\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2530,\n\t\t\t\t2962\n\t\t\t],\n\t\t\t[\n\t\t\t\t74,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2598,\n\t\t\t\t2916\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-19\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2580,\n\t\t\t\t2897\n\t\t\t],\n\t\t\t[\n\t\t\t\t-30,\n\t\t\t\t-41\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2549,\n\t\t\t\t2847\n\t\t\t],\n\t\t\t[\n\t\t\t\t-47,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2482,\n\t\t\t\t2749\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t-46\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2476,\n\t\t\t\t2711\n\t\t\t],\n\t\t\t[\n\t\t\t\t8,\n\t\t\t\t-38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2527,\n\t\t\t\t2685\n\t\t\t],\n\t\t\t[\n\t\t\t\t4,\n\t\t\t\t-30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2626,\n\t\t\t\t2546\n\t\t\t],\n\t\t\t[\n\t\t\t\t43,\n\t\t\t\t-21\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2669,\n\t\t\t\t2525\n\t\t\t],\n\t\t\t[\n\t\t\t\t14,\n\t\t\t\t-20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2683,\n\t\t\t\t2505\n\t\t\t],\n\t\t\t[\n\t\t\t\t-8,\n\t\t\t\t-2\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2578,\n\t\t\t\t2411\n\t\t\t],\n\t\t\t[\n\t\t\t\t-38,\n\t\t\t\t-39\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2540,\n\t\t\t\t2372\n\t\t\t],\n\t\t\t[\n\t\t\t\t-26,\n\t\t\t\t34\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2514,\n\t\t\t\t2386\n\t\t\t],\n\t\t\t[\n\t\t\t\t-17,\n\t\t\t\t1\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2497,\n\t\t\t\t2387\n\t\t\t],\n\t\t\t[\n\t\t\t\t-1,\n\t\t\t\t47\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2496,\n\t\t\t\t2434\n\t\t\t],\n\t\t\t[\n\t\t\t\t-21,\n\t\t\t\t22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2475,\n\t\t\t\t2456\n\t\t\t],\n\t\t\t[\n\t\t\t\t-18,\n\t\t\t\t-13\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2450,\n\t\t\t\t2457\n\t\t\t],\n\t\t\t[\n\t\t\t\t-36,\n\t\t\t\t-22\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2405,\n\t\t\t\t2440\n\t\t\t],\n\t\t\t[\n\t\t\t\t-42,\n\t\t\t\t9\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2339,\n\t\t\t\t2435\n\t\t\t],\n\t\t\t[\n\t\t\t\t-16,\n\t\t\t\t20\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2261,\n\t\t\t\t2636\n\t\t\t],\n\t\t\t[\n\t\t\t\t-57,\n\t\t\t\t-11\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2204,\n\t\t\t\t2625\n\t\t\t],\n\t\t\t[\n\t\t\t\t-71,\n\t\t\t\t-26\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2037,\n\t\t\t\t2813\n\t\t\t],\n\t\t\t[\n\t\t\t\t-7,\n\t\t\t\t44\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2049,\n\t\t\t\t2908\n\t\t\t],\n\t\t\t[\n\t\t\t\t24,\n\t\t\t\t28\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2210,\n\t\t\t\t2902\n\t\t\t],\n\t\t\t[\n\t\t\t\t50,\n\t\t\t\t30\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2296,\n\t\t\t\t2982\n\t\t\t],\n\t\t\t[\n\t\t\t\t11,\n\t\t\t\t38\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t2396,\n\t\t\t\t3024\n\t\t\t],\n\t\t\t[\n\t\t\t\t20,\n\t\t\t\t77\n\t\t\t]\n\t\t]\n\t],\n\t\"transform\": {\n\t\t\"scale\": [\n\t\t\t0.0006109149400179856,\n\t\t\t0.00036802637671194373\n\t\t],\n\t\t\"translate\": [\n\t\t\t5.878025523533186,\n\t\t\t50.3427905656316\n\t\t]\n\t},\n\t\"objects\": {\n\t\t\"nrw-bb\": {\n\t\t\t\"type\": \"GeometryCollection\",\n\t\t\t\"geometries\": [\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12070\",\n\t\t\t\t\t\t\"GEN\": \"Prignitz\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t3,\n\t\t\t\t\t\t\t4,\n\t\t\t\t\t\t\t5,\n\t\t\t\t\t\t\t6,\n\t\t\t\t\t\t\t7,\n\t\t\t\t\t\t\t8,\n\t\t\t\t\t\t\t9,\n\t\t\t\t\t\t\t10\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12073\",\n\t\t\t\t\t\t\"GEN\": \"Uckermark\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t11,\n\t\t\t\t\t\t\t12,\n\t\t\t\t\t\t\t13,\n\t\t\t\t\t\t\t14,\n\t\t\t\t\t\t\t15,\n\t\t\t\t\t\t\t16,\n\t\t\t\t\t\t\t17,\n\t\t\t\t\t\t\t18,\n\t\t\t\t\t\t\t19,\n\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t21,\n\t\t\t\t\t\t\t22,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t23\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12068\",\n\t\t\t\t\t\t\"GEN\": \"Ostprignitz-Ruppin\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t24,\n\t\t\t\t\t\t\t25,\n\t\t\t\t\t\t\t26,\n\t\t\t\t\t\t\t27,\n\t\t\t\t\t\t\t28,\n\t\t\t\t\t\t\t29,\n\t\t\t\t\t\t\t30,\n\t\t\t\t\t\t\t31,\n\t\t\t\t\t\t\t32,\n\t\t\t\t\t\t\t33,\n\t\t\t\t\t\t\t34,\n\t\t\t\t\t\t\t35,\n\t\t\t\t\t\t\t36,\n\t\t\t\t\t\t\t37,\n\t\t\t\t\t\t\t38,\n\t\t\t\t\t\t\t39,\n\t\t\t\t\t\t\t40,\n\t\t\t\t\t\t\t41,\n\t\t\t\t\t\t\t42,\n\t\t\t\t\t\t\t43,\n\t\t\t\t\t\t\t44,\n\t\t\t\t\t\t\t45,\n\t\t\t\t\t\t\t46,\n\t\t\t\t\t\t\t47,\n\t\t\t\t\t\t\t48,\n\t\t\t\t\t\t\t49,\n\t\t\t\t\t\t\t50,\n\t\t\t\t\t\t\t51,\n\t\t\t\t\t\t\t52,\n\t\t\t\t\t\t\t53,\n\t\t\t\t\t\t\t54,\n\t\t\t\t\t\t\t55,\n\t\t\t\t\t\t\t56,\n\t\t\t\t\t\t\t57,\n\t\t\t\t\t\t\t58\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05562\",\n\t\t\t\t\t\t\"GEN\": \"Recklinghausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t59,\n\t\t\t\t\t\t\t60,\n\t\t\t\t\t\t\t61,\n\t\t\t\t\t\t\t62,\n\t\t\t\t\t\t\t63,\n\t\t\t\t\t\t\t64,\n\t\t\t\t\t\t\t65,\n\t\t\t\t\t\t\t66,\n\t\t\t\t\t\t\t67,\n\t\t\t\t\t\t\t68,\n\t\t\t\t\t\t\t69,\n\t\t\t\t\t\t\t70,\n\t\t\t\t\t\t\t71,\n\t\t\t\t\t\t\t72,\n\t\t\t\t\t\t\t73,\n\t\t\t\t\t\t\t74,\n\t\t\t\t\t\t\t75,\n\t\t\t\t\t\t\t76,\n\t\t\t\t\t\t\t77,\n\t\t\t\t\t\t\t78\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t79,\n\t\t\t\t\t\t\t80,\n\t\t\t\t\t\t\t81\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12071\",\n\t\t\t\t\t\t\"GEN\": \"Spree-Neiße\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t82,\n\t\t\t\t\t\t\t83,\n\t\t\t\t\t\t\t84,\n\t\t\t\t\t\t\t85,\n\t\t\t\t\t\t\t86,\n\t\t\t\t\t\t\t87,\n\t\t\t\t\t\t\t88,\n\t\t\t\t\t\t\t89,\n\t\t\t\t\t\t\t90,\n\t\t\t\t\t\t\t91,\n\t\t\t\t\t\t\t92,\n\t\t\t\t\t\t\t93,\n\t\t\t\t\t\t\t94,\n\t\t\t\t\t\t\t95,\n\t\t\t\t\t\t\t96,\n\t\t\t\t\t\t\t97,\n\t\t\t\t\t\t\t98,\n\t\t\t\t\t\t\t99,\n\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t101,\n\t\t\t\t\t\t\t102,\n\t\t\t\t\t\t\t103,\n\t\t\t\t\t\t\t104,\n\t\t\t\t\t\t\t105,\n\t\t\t\t\t\t\t106\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05774\",\n\t\t\t\t\t\t\"GEN\": \"Paderborn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t107,\n\t\t\t\t\t\t\t108,\n\t\t\t\t\t\t\t-75,\n\t\t\t\t\t\t\t109,\n\t\t\t\t\t\t\t-73,\n\t\t\t\t\t\t\t110,\n\t\t\t\t\t\t\t-71,\n\t\t\t\t\t\t\t111,\n\t\t\t\t\t\t\t-69,\n\t\t\t\t\t\t\t112,\n\t\t\t\t\t\t\t-67,\n\t\t\t\t\t\t\t113,\n\t\t\t\t\t\t\t114,\n\t\t\t\t\t\t\t-64,\n\t\t\t\t\t\t\t115,\n\t\t\t\t\t\t\t-62,\n\t\t\t\t\t\t\t116,\n\t\t\t\t\t\t\t117,\n\t\t\t\t\t\t\t118,\n\t\t\t\t\t\t\t119,\n\t\t\t\t\t\t\t120,\n\t\t\t\t\t\t\t121,\n\t\t\t\t\t\t\t122,\n\t\t\t\t\t\t\t123,\n\t\t\t\t\t\t\t124,\n\t\t\t\t\t\t\t125,\n\t\t\t\t\t\t\t126,\n\t\t\t\t\t\t\t127,\n\t\t\t\t\t\t\t128,\n\t\t\t\t\t\t\t129,\n\t\t\t\t\t\t\t130,\n\t\t\t\t\t\t\t131\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12066\",\n\t\t\t\t\t\t\"GEN\": \"Oberspreewald-Lausitz\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t132,\n\t\t\t\t\t\t\t133,\n\t\t\t\t\t\t\t134,\n\t\t\t\t\t\t\t135,\n\t\t\t\t\t\t\t136,\n\t\t\t\t\t\t\t137,\n\t\t\t\t\t\t\t138,\n\t\t\t\t\t\t\t139,\n\t\t\t\t\t\t\t140,\n\t\t\t\t\t\t\t141,\n\t\t\t\t\t\t\t142,\n\t\t\t\t\t\t\t143,\n\t\t\t\t\t\t\t144\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05314\",\n\t\t\t\t\t\t\"GEN\": \"Bonn\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t145,\n\t\t\t\t\t\t\t146,\n\t\t\t\t\t\t\t147,\n\t\t\t\t\t\t\t148,\n\t\t\t\t\t\t\t149,\n\t\t\t\t\t\t\t150,\n\t\t\t\t\t\t\t151,\n\t\t\t\t\t\t\t152,\n\t\t\t\t\t\t\t153,\n\t\t\t\t\t\t\t154,\n\t\t\t\t\t\t\t155,\n\t\t\t\t\t\t\t156,\n\t\t\t\t\t\t\t157,\n\t\t\t\t\t\t\t158,\n\t\t\t\t\t\t\t159,\n\t\t\t\t\t\t\t160,\n\t\t\t\t\t\t\t161,\n\t\t\t\t\t\t\t162,\n\t\t\t\t\t\t\t163,\n\t\t\t\t\t\t\t164,\n\t\t\t\t\t\t\t165,\n\t\t\t\t\t\t\t166,\n\t\t\t\t\t\t\t167,\n\t\t\t\t\t\t\t168,\n\t\t\t\t\t\t\t169,\n\t\t\t\t\t\t\t170,\n\t\t\t\t\t\t\t171,\n\t\t\t\t\t\t\t172,\n\t\t\t\t\t\t\t173,\n\t\t\t\t\t\t\t174,\n\t\t\t\t\t\t\t175,\n\t\t\t\t\t\t\t176,\n\t\t\t\t\t\t\t177,\n\t\t\t\t\t\t\t178\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05374\",\n\t\t\t\t\t\t\"GEN\": \"Oberbergischer Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t179,\n\t\t\t\t\t\t\t180,\n\t\t\t\t\t\t\t181,\n\t\t\t\t\t\t\t182,\n\t\t\t\t\t\t\t183,\n\t\t\t\t\t\t\t184,\n\t\t\t\t\t\t\t185,\n\t\t\t\t\t\t\t186,\n\t\t\t\t\t\t\t187,\n\t\t\t\t\t\t\t188,\n\t\t\t\t\t\t\t189,\n\t\t\t\t\t\t\t190,\n\t\t\t\t\t\t\t191,\n\t\t\t\t\t\t\t192,\n\t\t\t\t\t\t\t193,\n\t\t\t\t\t\t\t194,\n\t\t\t\t\t\t\t195,\n\t\t\t\t\t\t\t196,\n\t\t\t\t\t\t\t197,\n\t\t\t\t\t\t\t198,\n\t\t\t\t\t\t\t199,\n\t\t\t\t\t\t\t200,\n\t\t\t\t\t\t\t201,\n\t\t\t\t\t\t\t202,\n\t\t\t\t\t\t\t203,\n\t\t\t\t\t\t\t204,\n\t\t\t\t\t\t\t205,\n\t\t\t\t\t\t\t206,\n\t\t\t\t\t\t\t207,\n\t\t\t\t\t\t\t208,\n\t\t\t\t\t\t\t209,\n\t\t\t\t\t\t\t210,\n\t\t\t\t\t\t\t211,\n\t\t\t\t\t\t\t212,\n\t\t\t\t\t\t\t213,\n\t\t\t\t\t\t\t214,\n\t\t\t\t\t\t\t215,\n\t\t\t\t\t\t\t216\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12069\",\n\t\t\t\t\t\t\"GEN\": \"Potsdam-Mittelmark\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-97,\n\t\t\t\t\t\t\t217,\n\t\t\t\t\t\t\t-95,\n\t\t\t\t\t\t\t218,\n\t\t\t\t\t\t\t219,\n\t\t\t\t\t\t\t220,\n\t\t\t\t\t\t\t221,\n\t\t\t\t\t\t\t222,\n\t\t\t\t\t\t\t223,\n\t\t\t\t\t\t\t224,\n\t\t\t\t\t\t\t225,\n\t\t\t\t\t\t\t226,\n\t\t\t\t\t\t\t227,\n\t\t\t\t\t\t\t228,\n\t\t\t\t\t\t\t229,\n\t\t\t\t\t\t\t230,\n\t\t\t\t\t\t\t231,\n\t\t\t\t\t\t\t232,\n\t\t\t\t\t\t\t233,\n\t\t\t\t\t\t\t234,\n\t\t\t\t\t\t\t235,\n\t\t\t\t\t\t\t236,\n\t\t\t\t\t\t\t237,\n\t\t\t\t\t\t\t238,\n\t\t\t\t\t\t\t239,\n\t\t\t\t\t\t\t240,\n\t\t\t\t\t\t\t241,\n\t\t\t\t\t\t\t242,\n\t\t\t\t\t\t\t243,\n\t\t\t\t\t\t\t244,\n\t\t\t\t\t\t\t-101,\n\t\t\t\t\t\t\t245,\n\t\t\t\t\t\t\t-99,\n\t\t\t\t\t\t\t246\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05958\",\n\t\t\t\t\t\t\"GEN\": \"Hochsauerlandkreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t247,\n\t\t\t\t\t\t\t248,\n\t\t\t\t\t\t\t249,\n\t\t\t\t\t\t\t250,\n\t\t\t\t\t\t\t251,\n\t\t\t\t\t\t\t252,\n\t\t\t\t\t\t\t253,\n\t\t\t\t\t\t\t254,\n\t\t\t\t\t\t\t255,\n\t\t\t\t\t\t\t256,\n\t\t\t\t\t\t\t-102,\n\t\t\t\t\t\t\t-245,\n\t\t\t\t\t\t\t257,\n\t\t\t\t\t\t\t-243,\n\t\t\t\t\t\t\t258,\n\t\t\t\t\t\t\t259,\n\t\t\t\t\t\t\t260,\n\t\t\t\t\t\t\t261,\n\t\t\t\t\t\t\t262,\n\t\t\t\t\t\t\t263,\n\t\t\t\t\t\t\t264,\n\t\t\t\t\t\t\t265,\n\t\t\t\t\t\t\t266,\n\t\t\t\t\t\t\t267\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05974\",\n\t\t\t\t\t\t\"GEN\": \"Soest\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t268,\n\t\t\t\t\t\t\t269,\n\t\t\t\t\t\t\t270,\n\t\t\t\t\t\t\t271,\n\t\t\t\t\t\t\t272,\n\t\t\t\t\t\t\t273,\n\t\t\t\t\t\t\t274,\n\t\t\t\t\t\t\t275,\n\t\t\t\t\t\t\t276,\n\t\t\t\t\t\t\t277,\n\t\t\t\t\t\t\t278,\n\t\t\t\t\t\t\t279,\n\t\t\t\t\t\t\t280,\n\t\t\t\t\t\t\t281,\n\t\t\t\t\t\t\t282,\n\t\t\t\t\t\t\t283,\n\t\t\t\t\t\t\t284,\n\t\t\t\t\t\t\t285\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05914\",\n\t\t\t\t\t\t\"GEN\": \"Hagen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t286,\n\t\t\t\t\t\t\t-260,\n\t\t\t\t\t\t\t287,\n\t\t\t\t\t\t\t-241,\n\t\t\t\t\t\t\t288,\n\t\t\t\t\t\t\t-239,\n\t\t\t\t\t\t\t289,\n\t\t\t\t\t\t\t-237,\n\t\t\t\t\t\t\t290,\n\t\t\t\t\t\t\t-235,\n\t\t\t\t\t\t\t291,\n\t\t\t\t\t\t\t292,\n\t\t\t\t\t\t\t293,\n\t\t\t\t\t\t\t294,\n\t\t\t\t\t\t\t295,\n\t\t\t\t\t\t\t296,\n\t\t\t\t\t\t\t297,\n\t\t\t\t\t\t\t298,\n\t\t\t\t\t\t\t-158,\n\t\t\t\t\t\t\t299,\n\t\t\t\t\t\t\t-156,\n\t\t\t\t\t\t\t300,\n\t\t\t\t\t\t\t301,\n\t\t\t\t\t\t\t302,\n\t\t\t\t\t\t\t-272,\n\t\t\t\t\t\t\t303,\n\t\t\t\t\t\t\t-270,\n\t\t\t\t\t\t\t304,\n\t\t\t\t\t\t\t305,\n\t\t\t\t\t\t\t306,\n\t\t\t\t\t\t\t307,\n\t\t\t\t\t\t\t308,\n\t\t\t\t\t\t\t309,\n\t\t\t\t\t\t\t310,\n\t\t\t\t\t\t\t311\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05962\",\n\t\t\t\t\t\t\"GEN\": \"Märkischer Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t312,\n\t\t\t\t\t\t\t313,\n\t\t\t\t\t\t\t314,\n\t\t\t\t\t\t\t315,\n\t\t\t\t\t\t\t316,\n\t\t\t\t\t\t\t317,\n\t\t\t\t\t\t\t318,\n\t\t\t\t\t\t\t319,\n\t\t\t\t\t\t\t320,\n\t\t\t\t\t\t\t321,\n\t\t\t\t\t\t\t322,\n\t\t\t\t\t\t\t-60,\n\t\t\t\t\t\t\t323,\n\t\t\t\t\t\t\t-78,\n\t\t\t\t\t\t\t324,\n\t\t\t\t\t\t\t325,\n\t\t\t\t\t\t\t326,\n\t\t\t\t\t\t\t327,\n\t\t\t\t\t\t\t328,\n\t\t\t\t\t\t\t329,\n\t\t\t\t\t\t\t330,\n\t\t\t\t\t\t\t331,\n\t\t\t\t\t\t\t332,\n\t\t\t\t\t\t\t333\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12067\",\n\t\t\t\t\t\t\"GEN\": \"Oder-Spree\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t334,\n\t\t\t\t\t\t\t335,\n\t\t\t\t\t\t\t336,\n\t\t\t\t\t\t\t337,\n\t\t\t\t\t\t\t338,\n\t\t\t\t\t\t\t339,\n\t\t\t\t\t\t\t340,\n\t\t\t\t\t\t\t341,\n\t\t\t\t\t\t\t342,\n\t\t\t\t\t\t\t343,\n\t\t\t\t\t\t\t344\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05111\",\n\t\t\t\t\t\t\"GEN\": \"Düsseldorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t345,\n\t\t\t\t\t\t\t346,\n\t\t\t\t\t\t\t347,\n\t\t\t\t\t\t\t348,\n\t\t\t\t\t\t\t349,\n\t\t\t\t\t\t\t350,\n\t\t\t\t\t\t\t351,\n\t\t\t\t\t\t\t352,\n\t\t\t\t\t\t\t353,\n\t\t\t\t\t\t\t354,\n\t\t\t\t\t\t\t355,\n\t\t\t\t\t\t\t356,\n\t\t\t\t\t\t\t357,\n\t\t\t\t\t\t\t358,\n\t\t\t\t\t\t\t359,\n\t\t\t\t\t\t\t360,\n\t\t\t\t\t\t\t361,\n\t\t\t\t\t\t\t362,\n\t\t\t\t\t\t\t363,\n\t\t\t\t\t\t\t364\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05911\",\n\t\t\t\t\t\t\"GEN\": \"Bochum\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t365,\n\t\t\t\t\t\t\t366,\n\t\t\t\t\t\t\t367,\n\t\t\t\t\t\t\t368,\n\t\t\t\t\t\t\t369,\n\t\t\t\t\t\t\t370,\n\t\t\t\t\t\t\t371,\n\t\t\t\t\t\t\t372,\n\t\t\t\t\t\t\t-346,\n\t\t\t\t\t\t\t373,\n\t\t\t\t\t\t\t374,\n\t\t\t\t\t\t\t-35,\n\t\t\t\t\t\t\t375,\n\t\t\t\t\t\t\t376,\n\t\t\t\t\t\t\t377\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05913\",\n\t\t\t\t\t\t\"GEN\": \"Dortmund\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t378,\n\t\t\t\t\t\t\t379,\n\t\t\t\t\t\t\t380,\n\t\t\t\t\t\t\t381,\n\t\t\t\t\t\t\t382,\n\t\t\t\t\t\t\t383,\n\t\t\t\t\t\t\t384,\n\t\t\t\t\t\t\t385,\n\t\t\t\t\t\t\t386,\n\t\t\t\t\t\t\t387\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05154\",\n\t\t\t\t\t\t\"GEN\": \"Kleve\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t388,\n\t\t\t\t\t\t\t389,\n\t\t\t\t\t\t\t390,\n\t\t\t\t\t\t\t391,\n\t\t\t\t\t\t\t392,\n\t\t\t\t\t\t\t393,\n\t\t\t\t\t\t\t394,\n\t\t\t\t\t\t\t395,\n\t\t\t\t\t\t\t396,\n\t\t\t\t\t\t\t397,\n\t\t\t\t\t\t\t398,\n\t\t\t\t\t\t\t399,\n\t\t\t\t\t\t\t400,\n\t\t\t\t\t\t\t401,\n\t\t\t\t\t\t\t-386,\n\t\t\t\t\t\t\t402\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05166\",\n\t\t\t\t\t\t\"GEN\": \"Viersen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t403,\n\t\t\t\t\t\t\t404,\n\t\t\t\t\t\t\t405,\n\t\t\t\t\t\t\t406,\n\t\t\t\t\t\t\t407,\n\t\t\t\t\t\t\t408,\n\t\t\t\t\t\t\t-89,\n\t\t\t\t\t\t\t409,\n\t\t\t\t\t\t\t-87,\n\t\t\t\t\t\t\t410,\n\t\t\t\t\t\t\t-85,\n\t\t\t\t\t\t\t411,\n\t\t\t\t\t\t\t412,\n\t\t\t\t\t\t\t413,\n\t\t\t\t\t\t\t414,\n\t\t\t\t\t\t\t415,\n\t\t\t\t\t\t\t416,\n\t\t\t\t\t\t\t417,\n\t\t\t\t\t\t\t418,\n\t\t\t\t\t\t\t419,\n\t\t\t\t\t\t\t420,\n\t\t\t\t\t\t\t421,\n\t\t\t\t\t\t\t422,\n\t\t\t\t\t\t\t423,\n\t\t\t\t\t\t\t424\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05766\",\n\t\t\t\t\t\t\"GEN\": \"Lippe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-395,\n\t\t\t\t\t\t\t425,\n\t\t\t\t\t\t\t426,\n\t\t\t\t\t\t\t427,\n\t\t\t\t\t\t\t428,\n\t\t\t\t\t\t\t429,\n\t\t\t\t\t\t\t430,\n\t\t\t\t\t\t\t431,\n\t\t\t\t\t\t\t432,\n\t\t\t\t\t\t\t433,\n\t\t\t\t\t\t\t-397,\n\t\t\t\t\t\t\t434\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05116\",\n\t\t\t\t\t\t\"GEN\": \"Mönchengladbach\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-406,\n\t\t\t\t\t\t\t435,\n\t\t\t\t\t\t\t-404,\n\t\t\t\t\t\t\t436,\n\t\t\t\t\t\t\t-220,\n\t\t\t\t\t\t\t437,\n\t\t\t\t\t\t\t-93,\n\t\t\t\t\t\t\t438,\n\t\t\t\t\t\t\t-91,\n\t\t\t\t\t\t\t439,\n\t\t\t\t\t\t\t-408,\n\t\t\t\t\t\t\t440\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05762\",\n\t\t\t\t\t\t\"GEN\": \"Höxter\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t441,\n\t\t\t\t\t\t\t442,\n\t\t\t\t\t\t\t443,\n\t\t\t\t\t\t\t-122,\n\t\t\t\t\t\t\t444,\n\t\t\t\t\t\t\t-120,\n\t\t\t\t\t\t\t445,\n\t\t\t\t\t\t\t-118,\n\t\t\t\t\t\t\t446,\n\t\t\t\t\t\t\t447,\n\t\t\t\t\t\t\t448\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12062\",\n\t\t\t\t\t\t\"GEN\": \"Elbe-Elster\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-222,\n\t\t\t\t\t\t\t449,\n\t\t\t\t\t\t\t450,\n\t\t\t\t\t\t\t451,\n\t\t\t\t\t\t\t452,\n\t\t\t\t\t\t\t453,\n\t\t\t\t\t\t\t454,\n\t\t\t\t\t\t\t455,\n\t\t\t\t\t\t\t456,\n\t\t\t\t\t\t\t457,\n\t\t\t\t\t\t\t-226,\n\t\t\t\t\t\t\t458,\n\t\t\t\t\t\t\t-224,\n\t\t\t\t\t\t\t459\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05970\",\n\t\t\t\t\t\t\"GEN\": \"Siegen-Wittgenstein\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t460,\n\t\t\t\t\t\t\t461,\n\t\t\t\t\t\t\t462,\n\t\t\t\t\t\t\t-266,\n\t\t\t\t\t\t\t463,\n\t\t\t\t\t\t\t464,\n\t\t\t\t\t\t\t465,\n\t\t\t\t\t\t\t466,\n\t\t\t\t\t\t\t467,\n\t\t\t\t\t\t\t468,\n\t\t\t\t\t\t\t469,\n\t\t\t\t\t\t\t470,\n\t\t\t\t\t\t\t471,\n\t\t\t\t\t\t\t472\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05915\",\n\t\t\t\t\t\t\"GEN\": \"Hamm\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t473,\n\t\t\t\t\t\t\t474,\n\t\t\t\t\t\t\t475,\n\t\t\t\t\t\t\t476,\n\t\t\t\t\t\t\t-186,\n\t\t\t\t\t\t\t477,\n\t\t\t\t\t\t\t478,\n\t\t\t\t\t\t\t479,\n\t\t\t\t\t\t\t480,\n\t\t\t\t\t\t\t481\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12054\",\n\t\t\t\t\t\t\"GEN\": \"Potsdam\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t482,\n\t\t\t\t\t\t\t483,\n\t\t\t\t\t\t\t484,\n\t\t\t\t\t\t\t485,\n\t\t\t\t\t\t\t486,\n\t\t\t\t\t\t\t487,\n\t\t\t\t\t\t\t488,\n\t\t\t\t\t\t\t489,\n\t\t\t\t\t\t\t-54,\n\t\t\t\t\t\t\t490,\n\t\t\t\t\t\t\t491,\n\t\t\t\t\t\t\t492,\n\t\t\t\t\t\t\t493,\n\t\t\t\t\t\t\t494,\n\t\t\t\t\t\t\t495,\n\t\t\t\t\t\t\t496,\n\t\t\t\t\t\t\t497,\n\t\t\t\t\t\t\t498,\n\t\t\t\t\t\t\t499,\n\t\t\t\t\t\t\t500,\n\t\t\t\t\t\t\t501,\n\t\t\t\t\t\t\t502,\n\t\t\t\t\t\t\t503,\n\t\t\t\t\t\t\t504,\n\t\t\t\t\t\t\t505,\n\t\t\t\t\t\t\t506,\n\t\t\t\t\t\t\t507,\n\t\t\t\t\t\t\t-383,\n\t\t\t\t\t\t\t508,\n\t\t\t\t\t\t\t-381,\n\t\t\t\t\t\t\t509,\n\t\t\t\t\t\t\t510,\n\t\t\t\t\t\t\t511\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05170\",\n\t\t\t\t\t\t\"GEN\": \"Wesel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t512,\n\t\t\t\t\t\t\t513,\n\t\t\t\t\t\t\t514,\n\t\t\t\t\t\t\t515,\n\t\t\t\t\t\t\t516,\n\t\t\t\t\t\t\t517,\n\t\t\t\t\t\t\t518,\n\t\t\t\t\t\t\t519,\n\t\t\t\t\t\t\t520,\n\t\t\t\t\t\t\t521,\n\t\t\t\t\t\t\t522,\n\t\t\t\t\t\t\t523,\n\t\t\t\t\t\t\t524,\n\t\t\t\t\t\t\t-339,\n\t\t\t\t\t\t\t525,\n\t\t\t\t\t\t\t-337,\n\t\t\t\t\t\t\t526,\n\t\t\t\t\t\t\t527,\n\t\t\t\t\t\t\t528,\n\t\t\t\t\t\t\t529,\n\t\t\t\t\t\t\t530,\n\t\t\t\t\t\t\t531,\n\t\t\t\t\t\t\t532,\n\t\t\t\t\t\t\t533\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05158\",\n\t\t\t\t\t\t\"GEN\": \"Mettmann\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t534,\n\t\t\t\t\t\t\t535,\n\t\t\t\t\t\t\t536,\n\t\t\t\t\t\t\t537,\n\t\t\t\t\t\t\t538,\n\t\t\t\t\t\t\t539,\n\t\t\t\t\t\t\t540,\n\t\t\t\t\t\t\t541,\n\t\t\t\t\t\t\t542,\n\t\t\t\t\t\t\t543,\n\t\t\t\t\t\t\t544,\n\t\t\t\t\t\t\t545,\n\t\t\t\t\t\t\t546,\n\t\t\t\t\t\t\t547,\n\t\t\t\t\t\t\t548,\n\t\t\t\t\t\t\t549,\n\t\t\t\t\t\t\t550\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05366\",\n\t\t\t\t\t\t\"GEN\": \"Euskirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t551,\n\t\t\t\t\t\t\t552,\n\t\t\t\t\t\t\t553,\n\t\t\t\t\t\t\t554,\n\t\t\t\t\t\t\t555,\n\t\t\t\t\t\t\t556,\n\t\t\t\t\t\t\t557,\n\t\t\t\t\t\t\t558,\n\t\t\t\t\t\t\t559,\n\t\t\t\t\t\t\t-391,\n\t\t\t\t\t\t\t560,\n\t\t\t\t\t\t\t-389,\n\t\t\t\t\t\t\t561,\n\t\t\t\t\t\t\t-506\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05114\",\n\t\t\t\t\t\t\"GEN\": \"Krefeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t562,\n\t\t\t\t\t\t\t\t563,\n\t\t\t\t\t\t\t\t564,\n\t\t\t\t\t\t\t\t565,\n\t\t\t\t\t\t\t\t566,\n\t\t\t\t\t\t\t\t567,\n\t\t\t\t\t\t\t\t-543,\n\t\t\t\t\t\t\t\t568,\n\t\t\t\t\t\t\t\t569,\n\t\t\t\t\t\t\t\t570,\n\t\t\t\t\t\t\t\t571\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t572\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05334\",\n\t\t\t\t\t\t\"GEN\": \"Städteregion Aachen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-6,\n\t\t\t\t\t\t\t573,\n\t\t\t\t\t\t\t-4,\n\t\t\t\t\t\t\t574,\n\t\t\t\t\t\t\t575,\n\t\t\t\t\t\t\t576,\n\t\t\t\t\t\t\t577,\n\t\t\t\t\t\t\t578,\n\t\t\t\t\t\t\t579,\n\t\t\t\t\t\t\t580,\n\t\t\t\t\t\t\t581,\n\t\t\t\t\t\t\t582,\n\t\t\t\t\t\t\t583,\n\t\t\t\t\t\t\t584,\n\t\t\t\t\t\t\t585,\n\t\t\t\t\t\t\t586,\n\t\t\t\t\t\t\t587,\n\t\t\t\t\t\t\t588,\n\t\t\t\t\t\t\t-8,\n\t\t\t\t\t\t\t589\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12060\",\n\t\t\t\t\t\t\"GEN\": \"Barnim\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-342,\n\t\t\t\t\t\t\t592,\n\t\t\t\t\t\t\t593,\n\t\t\t\t\t\t\t594,\n\t\t\t\t\t\t\t595,\n\t\t\t\t\t\t\t596,\n\t\t\t\t\t\t\t597,\n\t\t\t\t\t\t\t598,\n\t\t\t\t\t\t\t599,\n\t\t\t\t\t\t\t600,\n\t\t\t\t\t\t\t601,\n\t\t\t\t\t\t\t602,\n\t\t\t\t\t\t\t603,\n\t\t\t\t\t\t\t604,\n\t\t\t\t\t\t\t605,\n\t\t\t\t\t\t\t-431,\n\t\t\t\t\t\t\t606,\n\t\t\t\t\t\t\t-429,\n\t\t\t\t\t\t\t607,\n\t\t\t\t\t\t\t-427,\n\t\t\t\t\t\t\t608,\n\t\t\t\t\t\t\t-393,\n\t\t\t\t\t\t\t609,\n\t\t\t\t\t\t\t-559,\n\t\t\t\t\t\t\t610,\n\t\t\t\t\t\t\t611,\n\t\t\t\t\t\t\t612\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05162\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Kreis Neuss\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t-206,\n\t\t\t\t\t\t\t\t613,\n\t\t\t\t\t\t\t\t-204,\n\t\t\t\t\t\t\t\t614,\n\t\t\t\t\t\t\t\t615,\n\t\t\t\t\t\t\t\t-201,\n\t\t\t\t\t\t\t\t616,\n\t\t\t\t\t\t\t\t-199,\n\t\t\t\t\t\t\t\t617,\n\t\t\t\t\t\t\t\t618,\n\t\t\t\t\t\t\t\t619,\n\t\t\t\t\t\t\t\t620,\n\t\t\t\t\t\t\t\t621,\n\t\t\t\t\t\t\t\t-212,\n\t\t\t\t\t\t\t\t622,\n\t\t\t\t\t\t\t\t-210,\n\t\t\t\t\t\t\t\t623,\n\t\t\t\t\t\t\t\t-208,\n\t\t\t\t\t\t\t\t624\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t625,\n\t\t\t\t\t\t\t\t626,\n\t\t\t\t\t\t\t\t627\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"MultiPolygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12051\",\n\t\t\t\t\t\t\"GEN\": \"Brandenburg an der Havel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t628,\n\t\t\t\t\t\t\t629,\n\t\t\t\t\t\t\t630,\n\t\t\t\t\t\t\t631,\n\t\t\t\t\t\t\t-468,\n\t\t\t\t\t\t\t632,\n\t\t\t\t\t\t\t633,\n\t\t\t\t\t\t\t-465,\n\t\t\t\t\t\t\t634,\n\t\t\t\t\t\t\t635,\n\t\t\t\t\t\t\t-263,\n\t\t\t\t\t\t\t636,\n\t\t\t\t\t\t\t-311,\n\t\t\t\t\t\t\t637,\n\t\t\t\t\t\t\t-309,\n\t\t\t\t\t\t\t638,\n\t\t\t\t\t\t\t-307,\n\t\t\t\t\t\t\t639,\n\t\t\t\t\t\t\t-305,\n\t\t\t\t\t\t\t-269,\n\t\t\t\t\t\t\t-368,\n\t\t\t\t\t\t\t640,\n\t\t\t\t\t\t\t-366,\n\t\t\t\t\t\t\t641,\n\t\t\t\t\t\t\t-377,\n\t\t\t\t\t\t\t642,\n\t\t\t\t\t\t\t-33,\n\t\t\t\t\t\t\t643,\n\t\t\t\t\t\t\t-31,\n\t\t\t\t\t\t\t644,\n\t\t\t\t\t\t\t645,\n\t\t\t\t\t\t\t646,\n\t\t\t\t\t\t\t647,\n\t\t\t\t\t\t\t648\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05978\",\n\t\t\t\t\t\t\"GEN\": \"Unna\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t649,\n\t\t\t\t\t\t\t650,\n\t\t\t\t\t\t\t651,\n\t\t\t\t\t\t\t652,\n\t\t\t\t\t\t\t653,\n\t\t\t\t\t\t\t654,\n\t\t\t\t\t\t\t655,\n\t\t\t\t\t\t\t656,\n\t\t\t\t\t\t\t657,\n\t\t\t\t\t\t\t658,\n\t\t\t\t\t\t\t-519,\n\t\t\t\t\t\t\t659,\n\t\t\t\t\t\t\t-517,\n\t\t\t\t\t\t\t660\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05122\",\n\t\t\t\t\t\t\"GEN\": \"Solingen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t661,\n\t\t\t\t\t\t\t-168,\n\t\t\t\t\t\t\t662,\n\t\t\t\t\t\t\t-166,\n\t\t\t\t\t\t\t663,\n\t\t\t\t\t\t\t-164,\n\t\t\t\t\t\t\t664,\n\t\t\t\t\t\t\t665,\n\t\t\t\t\t\t\t666,\n\t\t\t\t\t\t\t667,\n\t\t\t\t\t\t\t668,\n\t\t\t\t\t\t\t669,\n\t\t\t\t\t\t\t670,\n\t\t\t\t\t\t\t671,\n\t\t\t\t\t\t\t672,\n\t\t\t\t\t\t\t673,\n\t\t\t\t\t\t\t674,\n\t\t\t\t\t\t\t675,\n\t\t\t\t\t\t\t676,\n\t\t\t\t\t\t\t677,\n\t\t\t\t\t\t\t-658,\n\t\t\t\t\t\t\t678,\n\t\t\t\t\t\t\t-656,\n\t\t\t\t\t\t\t679,\n\t\t\t\t\t\t\t680,\n\t\t\t\t\t\t\t681\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05378\",\n\t\t\t\t\t\t\"GEN\": \"Rheinisch-Bergischer Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t682,\n\t\t\t\t\t\t\t-228,\n\t\t\t\t\t\t\t683,\n\t\t\t\t\t\t\t-457,\n\t\t\t\t\t\t\t684,\n\t\t\t\t\t\t\t-455,\n\t\t\t\t\t\t\t685,\n\t\t\t\t\t\t\t-453,\n\t\t\t\t\t\t\t686,\n\t\t\t\t\t\t\t-451,\n\t\t\t\t\t\t\t687,\n\t\t\t\t\t\t\t-160,\n\t\t\t\t\t\t\t688,\n\t\t\t\t\t\t\t-298,\n\t\t\t\t\t\t\t689,\n\t\t\t\t\t\t\t690,\n\t\t\t\t\t\t\t-295,\n\t\t\t\t\t\t\t691,\n\t\t\t\t\t\t\t-293,\n\t\t\t\t\t\t\t692,\n\t\t\t\t\t\t\t-233,\n\t\t\t\t\t\t\t693,\n\t\t\t\t\t\t\t694,\n\t\t\t\t\t\t\t-230\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05966\",\n\t\t\t\t\t\t\"GEN\": \"Olpe\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t695,\n\t\t\t\t\t\t\t696,\n\t\t\t\t\t\t\t697,\n\t\t\t\t\t\t\t698,\n\t\t\t\t\t\t\t699,\n\t\t\t\t\t\t\t700,\n\t\t\t\t\t\t\t701,\n\t\t\t\t\t\t\t702,\n\t\t\t\t\t\t\t703,\n\t\t\t\t\t\t\t704,\n\t\t\t\t\t\t\t705,\n\t\t\t\t\t\t\t706,\n\t\t\t\t\t\t\t707,\n\t\t\t\t\t\t\t708\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05515\",\n\t\t\t\t\t\t\"GEN\": \"Münster\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t709,\n\t\t\t\t\t\t\t710,\n\t\t\t\t\t\t\t711,\n\t\t\t\t\t\t\t712,\n\t\t\t\t\t\t\t-254,\n\t\t\t\t\t\t\t713,\n\t\t\t\t\t\t\t-252,\n\t\t\t\t\t\t\t714,\n\t\t\t\t\t\t\t-250,\n\t\t\t\t\t\t\t715,\n\t\t\t\t\t\t\t-248,\n\t\t\t\t\t\t\t716,\n\t\t\t\t\t\t\t717,\n\t\t\t\t\t\t\t718,\n\t\t\t\t\t\t\t-461,\n\t\t\t\t\t\t\t719,\n\t\t\t\t\t\t\t-472,\n\t\t\t\t\t\t\t720,\n\t\t\t\t\t\t\t721,\n\t\t\t\t\t\t\t722,\n\t\t\t\t\t\t\t-700,\n\t\t\t\t\t\t\t723,\n\t\t\t\t\t\t\t-698,\n\t\t\t\t\t\t\t724,\n\t\t\t\t\t\t\t725,\n\t\t\t\t\t\t\t726,\n\t\t\t\t\t\t\t727\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05570\",\n\t\t\t\t\t\t\"GEN\": \"Warendorf\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t728,\n\t\t\t\t\t\t\t729,\n\t\t\t\t\t\t\t-673,\n\t\t\t\t\t\t\t730,\n\t\t\t\t\t\t\t731,\n\t\t\t\t\t\t\t732,\n\t\t\t\t\t\t\t733,\n\t\t\t\t\t\t\t734,\n\t\t\t\t\t\t\t-598,\n\t\t\t\t\t\t\t735,\n\t\t\t\t\t\t\t-596,\n\t\t\t\t\t\t\t736\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05315\",\n\t\t\t\t\t\t\"GEN\": \"Köln\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t737,\n\t\t\t\t\t\t\t-734,\n\t\t\t\t\t\t\t738,\n\t\t\t\t\t\t\t739,\n\t\t\t\t\t\t\t740,\n\t\t\t\t\t\t\t741,\n\t\t\t\t\t\t\t742,\n\t\t\t\t\t\t\t-550,\n\t\t\t\t\t\t\t743,\n\t\t\t\t\t\t\t744,\n\t\t\t\t\t\t\t745,\n\t\t\t\t\t\t\t746,\n\t\t\t\t\t\t\t747,\n\t\t\t\t\t\t\t-600\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05362\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Erft-Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t748,\n\t\t\t\t\t\t\t749,\n\t\t\t\t\t\t\t750,\n\t\t\t\t\t\t\t751,\n\t\t\t\t\t\t\t752,\n\t\t\t\t\t\t\t753,\n\t\t\t\t\t\t\t754,\n\t\t\t\t\t\t\t755,\n\t\t\t\t\t\t\t756,\n\t\t\t\t\t\t\t757,\n\t\t\t\t\t\t\t-58,\n\t\t\t\t\t\t\t758,\n\t\t\t\t\t\t\t-56,\n\t\t\t\t\t\t\t759,\n\t\t\t\t\t\t\t-489,\n\t\t\t\t\t\t\t760,\n\t\t\t\t\t\t\t-487,\n\t\t\t\t\t\t\t761,\n\t\t\t\t\t\t\t-485,\n\t\t\t\t\t\t\t762,\n\t\t\t\t\t\t\t-483,\n\t\t\t\t\t\t\t763,\n\t\t\t\t\t\t\t-511,\n\t\t\t\t\t\t\t764,\n\t\t\t\t\t\t\t-379,\n\t\t\t\t\t\t\t765\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05554\",\n\t\t\t\t\t\t\"GEN\": \"Borken\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t766,\n\t\t\t\t\t\t\t767,\n\t\t\t\t\t\t\t768,\n\t\t\t\t\t\t\t769,\n\t\t\t\t\t\t\t-706,\n\t\t\t\t\t\t\t770,\n\t\t\t\t\t\t\t-704,\n\t\t\t\t\t\t\t771,\n\t\t\t\t\t\t\t-702,\n\t\t\t\t\t\t\t772,\n\t\t\t\t\t\t\t-722,\n\t\t\t\t\t\t\t773,\n\t\t\t\t\t\t\t-470,\n\t\t\t\t\t\t\t774,\n\t\t\t\t\t\t\t-631,\n\t\t\t\t\t\t\t775,\n\t\t\t\t\t\t\t-629,\n\t\t\t\t\t\t\t776,\n\t\t\t\t\t\t\t-648,\n\t\t\t\t\t\t\t777,\n\t\t\t\t\t\t\t-646,\n\t\t\t\t\t\t\t778,\n\t\t\t\t\t\t\t-29,\n\t\t\t\t\t\t\t779,\n\t\t\t\t\t\t\t-27,\n\t\t\t\t\t\t\t780,\n\t\t\t\t\t\t\t-25,\n\t\t\t\t\t\t\t781,\n\t\t\t\t\t\t\t782,\n\t\t\t\t\t\t\t-756,\n\t\t\t\t\t\t\t783,\n\t\t\t\t\t\t\t-754,\n\t\t\t\t\t\t\t784,\n\t\t\t\t\t\t\t-752,\n\t\t\t\t\t\t\t785,\n\t\t\t\t\t\t\t-750,\n\t\t\t\t\t\t\t786,\n\t\t\t\t\t\t\t787\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05558\",\n\t\t\t\t\t\t\"GEN\": \"Coesfeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-710,\n\t\t\t\t\t\t\t788,\n\t\t\t\t\t\t\t-727,\n\t\t\t\t\t\t\t789,\n\t\t\t\t\t\t\t790,\n\t\t\t\t\t\t\t-696,\n\t\t\t\t\t\t\t791,\n\t\t\t\t\t\t\t-708,\n\t\t\t\t\t\t\t792,\n\t\t\t\t\t\t\t-769,\n\t\t\t\t\t\t\t793,\n\t\t\t\t\t\t\t-767,\n\t\t\t\t\t\t\t794,\n\t\t\t\t\t\t\t-787,\n\t\t\t\t\t\t\t-749,\n\t\t\t\t\t\t\t795\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05566\",\n\t\t\t\t\t\t\"GEN\": \"Steinfurt\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-43,\n\t\t\t\t\t\t\t796,\n\t\t\t\t\t\t\t797,\n\t\t\t\t\t\t\t798,\n\t\t\t\t\t\t\t799,\n\t\t\t\t\t\t\t-357,\n\t\t\t\t\t\t\t800,\n\t\t\t\t\t\t\t801,\n\t\t\t\t\t\t\t802,\n\t\t\t\t\t\t\t-45,\n\t\t\t\t\t\t\t803\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05513\",\n\t\t\t\t\t\t\"GEN\": \"Gelsenkirchen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-81,\n\t\t\t\t\t\t\t804,\n\t\t\t\t\t\t\t805\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12052\",\n\t\t\t\t\t\t\"GEN\": \"Cottbus\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-38,\n\t\t\t\t\t\t\t806,\n\t\t\t\t\t\t\t-364,\n\t\t\t\t\t\t\t807,\n\t\t\t\t\t\t\t-362,\n\t\t\t\t\t\t\t808,\n\t\t\t\t\t\t\t809,\n\t\t\t\t\t\t\t-359,\n\t\t\t\t\t\t\t810,\n\t\t\t\t\t\t\t-799,\n\t\t\t\t\t\t\t811,\n\t\t\t\t\t\t\t-40,\n\t\t\t\t\t\t\t812\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05916\",\n\t\t\t\t\t\t\"GEN\": \"Herne\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-675,\n\t\t\t\t\t\t\t813,\n\t\t\t\t\t\t\t-729,\n\t\t\t\t\t\t\t814,\n\t\t\t\t\t\t\t815,\n\t\t\t\t\t\t\t-523,\n\t\t\t\t\t\t\t816,\n\t\t\t\t\t\t\t817,\n\t\t\t\t\t\t\t818\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05316\",\n\t\t\t\t\t\t\"GEN\": \"Leverkusen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t819,\n\t\t\t\t\t\t\t820,\n\t\t\t\t\t\t\t821,\n\t\t\t\t\t\t\t-442,\n\t\t\t\t\t\t\t822,\n\t\t\t\t\t\t\t-448,\n\t\t\t\t\t\t\t823,\n\t\t\t\t\t\t\t-196,\n\t\t\t\t\t\t\t824,\n\t\t\t\t\t\t\t-194,\n\t\t\t\t\t\t\t825,\n\t\t\t\t\t\t\t-192,\n\t\t\t\t\t\t\t826,\n\t\t\t\t\t\t\t-190,\n\t\t\t\t\t\t\t827,\n\t\t\t\t\t\t\t-188,\n\t\t\t\t\t\t\t828\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12072\",\n\t\t\t\t\t\t\"GEN\": \"Teltow-Fläming\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-162,\n\t\t\t\t\t\t\t829,\n\t\t\t\t\t\t\t-138,\n\t\t\t\t\t\t\t830,\n\t\t\t\t\t\t\t-136,\n\t\t\t\t\t\t\t831,\n\t\t\t\t\t\t\t832,\n\t\t\t\t\t\t\t-133,\n\t\t\t\t\t\t\t833,\n\t\t\t\t\t\t\t834,\n\t\t\t\t\t\t\t835,\n\t\t\t\t\t\t\t-142,\n\t\t\t\t\t\t\t836,\n\t\t\t\t\t\t\t-140,\n\t\t\t\t\t\t\t837,\n\t\t\t\t\t\t\t838,\n\t\t\t\t\t\t\t-540,\n\t\t\t\t\t\t\t839,\n\t\t\t\t\t\t\t-538,\n\t\t\t\t\t\t\t840,\n\t\t\t\t\t\t\t-536,\n\t\t\t\t\t\t\t841,\n\t\t\t\t\t\t\t842,\n\t\t\t\t\t\t\t843,\n\t\t\t\t\t\t\t-741,\n\t\t\t\t\t\t\t844,\n\t\t\t\t\t\t\t845,\n\t\t\t\t\t\t\t-732,\n\t\t\t\t\t\t\t846,\n\t\t\t\t\t\t\t-671,\n\t\t\t\t\t\t\t847,\n\t\t\t\t\t\t\t848,\n\t\t\t\t\t\t\t-668,\n\t\t\t\t\t\t\t849,\n\t\t\t\t\t\t\t-666,\n\t\t\t\t\t\t\t850\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05382\",\n\t\t\t\t\t\t\"GEN\": \"Rhein-Sieg-Kreis\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t851,\n\t\t\t\t\t\t\t852,\n\t\t\t\t\t\t\t-176,\n\t\t\t\t\t\t\t853,\n\t\t\t\t\t\t\t854,\n\t\t\t\t\t\t\t855,\n\t\t\t\t\t\t\t856,\n\t\t\t\t\t\t\t857,\n\t\t\t\t\t\t\t858,\n\t\t\t\t\t\t\t859,\n\t\t\t\t\t\t\t860,\n\t\t\t\t\t\t\t861,\n\t\t\t\t\t\t\t862,\n\t\t\t\t\t\t\t863,\n\t\t\t\t\t\t\t-651,\n\t\t\t\t\t\t\t864,\n\t\t\t\t\t\t\t-661,\n\t\t\t\t\t\t\t865,\n\t\t\t\t\t\t\t-515,\n\t\t\t\t\t\t\t866,\n\t\t\t\t\t\t\t-513,\n\t\t\t\t\t\t\t867,\n\t\t\t\t\t\t\t868,\n\t\t\t\t\t\t\t869\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05124\",\n\t\t\t\t\t\t\"GEN\": \"Wuppertal\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t870,\n\t\t\t\t\t\t\t871,\n\t\t\t\t\t\t\t872,\n\t\t\t\t\t\t\t-417,\n\t\t\t\t\t\t\t873,\n\t\t\t\t\t\t\t-415,\n\t\t\t\t\t\t\t874,\n\t\t\t\t\t\t\t875,\n\t\t\t\t\t\t\t876,\n\t\t\t\t\t\t\t877,\n\t\t\t\t\t\t\t878,\n\t\t\t\t\t\t\t879,\n\t\t\t\t\t\t\t880\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05711\",\n\t\t\t\t\t\t\"GEN\": \"Bielefeld\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-332,\n\t\t\t\t\t\t\t881,\n\t\t\t\t\t\t\t-330,\n\t\t\t\t\t\t\t882,\n\t\t\t\t\t\t\t-328,\n\t\t\t\t\t\t\t883,\n\t\t\t\t\t\t\t884,\n\t\t\t\t\t\t\t885,\n\t\t\t\t\t\t\t-77,\n\t\t\t\t\t\t\t886,\n\t\t\t\t\t\t\t-108,\n\t\t\t\t\t\t\t887,\n\t\t\t\t\t\t\t-131,\n\t\t\t\t\t\t\t888,\n\t\t\t\t\t\t\t889,\n\t\t\t\t\t\t\t-128,\n\t\t\t\t\t\t\t890,\n\t\t\t\t\t\t\t-126,\n\t\t\t\t\t\t\t891,\n\t\t\t\t\t\t\t-124,\n\t\t\t\t\t\t\t892,\n\t\t\t\t\t\t\t-443,\n\t\t\t\t\t\t\t-822,\n\t\t\t\t\t\t\t893,\n\t\t\t\t\t\t\t-820,\n\t\t\t\t\t\t\t894\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12061\",\n\t\t\t\t\t\t\"GEN\": \"Dahme-Spreewald\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-858,\n\t\t\t\t\t\t\t895,\n\t\t\t\t\t\t\t-856,\n\t\t\t\t\t\t\t896,\n\t\t\t\t\t\t\t897,\n\t\t\t\t\t\t\t-172,\n\t\t\t\t\t\t\t898,\n\t\t\t\t\t\t\t-170,\n\t\t\t\t\t\t\t899,\n\t\t\t\t\t\t\t900,\n\t\t\t\t\t\t\t-681,\n\t\t\t\t\t\t\t901,\n\t\t\t\t\t\t\t902,\n\t\t\t\t\t\t\t-653,\n\t\t\t\t\t\t\t903,\n\t\t\t\t\t\t\t-863,\n\t\t\t\t\t\t\t904,\n\t\t\t\t\t\t\t-861,\n\t\t\t\t\t\t\t905,\n\t\t\t\t\t\t\t906\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05120\",\n\t\t\t\t\t\t\"GEN\": \"Remscheid\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t907,\n\t\t\t\t\t\t\t-433,\n\t\t\t\t\t\t\t908,\n\t\t\t\t\t\t\t909,\n\t\t\t\t\t\t\t-604,\n\t\t\t\t\t\t\t910,\n\t\t\t\t\t\t\t911,\n\t\t\t\t\t\t\t912,\n\t\t\t\t\t\t\t913,\n\t\t\t\t\t\t\t914,\n\t\t\t\t\t\t\t915,\n\t\t\t\t\t\t\t-570,\n\t\t\t\t\t\t\t916,\n\t\t\t\t\t\t\t-400,\n\t\t\t\t\t\t\t917\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05370\",\n\t\t\t\t\t\t\"GEN\": \"Heinsberg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t918,\n\t\t\t\t\t\t\t-322,\n\t\t\t\t\t\t\t919,\n\t\t\t\t\t\t\t-320,\n\t\t\t\t\t\t\t920,\n\t\t\t\t\t\t\t-318,\n\t\t\t\t\t\t\t921\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12053\",\n\t\t\t\t\t\t\"GEN\": \"Frankfurt (Oder)\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t922,\n\t\t\t\t\t\t\t923,\n\t\t\t\t\t\t\t-747,\n\t\t\t\t\t\t\t924,\n\t\t\t\t\t\t\t-745,\n\t\t\t\t\t\t\t925,\n\t\t\t\t\t\t\t-548,\n\t\t\t\t\t\t\t926,\n\t\t\t\t\t\t\t-546,\n\t\t\t\t\t\t\t927,\n\t\t\t\t\t\t\t928,\n\t\t\t\t\t\t\t-565,\n\t\t\t\t\t\t\t929,\n\t\t\t\t\t\t\t-563,\n\t\t\t\t\t\t\t930,\n\t\t\t\t\t\t\t931,\n\t\t\t\t\t\t\t-915,\n\t\t\t\t\t\t\t932,\n\t\t\t\t\t\t\t-913\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05358\",\n\t\t\t\t\t\t\"GEN\": \"Düren\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-10,\n\t\t\t\t\t\t\t933,\n\t\t\t\t\t\t\t-588,\n\t\t\t\t\t\t\t934,\n\t\t\t\t\t\t\t935,\n\t\t\t\t\t\t\t936,\n\t\t\t\t\t\t\t937,\n\t\t\t\t\t\t\t938,\n\t\t\t\t\t\t\t939,\n\t\t\t\t\t\t\t940,\n\t\t\t\t\t\t\t-14,\n\t\t\t\t\t\t\t941,\n\t\t\t\t\t\t\t-12,\n\t\t\t\t\t\t\t942\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12065\",\n\t\t\t\t\t\t\"GEN\": \"Oberhavel\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-577,\n\t\t\t\t\t\t\t944,\n\t\t\t\t\t\t\t-922,\n\t\t\t\t\t\t\t-317,\n\t\t\t\t\t\t\t945,\n\t\t\t\t\t\t\t-315,\n\t\t\t\t\t\t\t946,\n\t\t\t\t\t\t\t947,\n\t\t\t\t\t\t\t-334,\n\t\t\t\t\t\t\t948,\n\t\t\t\t\t\t\t-586,\n\t\t\t\t\t\t\t949,\n\t\t\t\t\t\t\t-584,\n\t\t\t\t\t\t\t950,\n\t\t\t\t\t\t\t-582,\n\t\t\t\t\t\t\t951,\n\t\t\t\t\t\t\t952,\n\t\t\t\t\t\t\t-579,\n\t\t\t\t\t\t\t953\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12064\",\n\t\t\t\t\t\t\"GEN\": \"Märkisch-Oderland\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-50,\n\t\t\t\t\t\t\t954,\n\t\t\t\t\t\t\t-48,\n\t\t\t\t\t\t\t955,\n\t\t\t\t\t\t\t956,\n\t\t\t\t\t\t\t957,\n\t\t\t\t\t\t\t958,\n\t\t\t\t\t\t\t959,\n\t\t\t\t\t\t\t-493,\n\t\t\t\t\t\t\t960,\n\t\t\t\t\t\t\t961\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05512\",\n\t\t\t\t\t\t\"GEN\": \"Bottrop\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t962,\n\t\t\t\t\t\t\t963,\n\t\t\t\t\t\t\t964,\n\t\t\t\t\t\t\t965,\n\t\t\t\t\t\t\t966,\n\t\t\t\t\t\t\t967,\n\t\t\t\t\t\t\t968,\n\t\t\t\t\t\t\t-497,\n\t\t\t\t\t\t\t969,\n\t\t\t\t\t\t\t-495,\n\t\t\t\t\t\t\t970,\n\t\t\t\t\t\t\t-959\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05119\",\n\t\t\t\t\t\t\"GEN\": \"Oberhausen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-499,\n\t\t\t\t\t\t\t971,\n\t\t\t\t\t\t\t-968,\n\t\t\t\t\t\t\t972,\n\t\t\t\t\t\t\t973,\n\t\t\t\t\t\t\t974,\n\t\t\t\t\t\t\t975,\n\t\t\t\t\t\t\t-335,\n\t\t\t\t\t\t\t976,\n\t\t\t\t\t\t\t-344,\n\t\t\t\t\t\t\t977,\n\t\t\t\t\t\t\t-555,\n\t\t\t\t\t\t\t978,\n\t\t\t\t\t\t\t-553,\n\t\t\t\t\t\t\t979,\n\t\t\t\t\t\t\t-504,\n\t\t\t\t\t\t\t980,\n\t\t\t\t\t\t\t-502,\n\t\t\t\t\t\t\t981,\n\t\t\t\t\t\t\t982\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05112\",\n\t\t\t\t\t\t\"GEN\": \"Duisburg\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-802,\n\t\t\t\t\t\t\t983,\n\t\t\t\t\t\t\t-356,\n\t\t\t\t\t\t\t984,\n\t\t\t\t\t\t\t-354,\n\t\t\t\t\t\t\t985,\n\t\t\t\t\t\t\t986,\n\t\t\t\t\t\t\t987,\n\t\t\t\t\t\t\t-532,\n\t\t\t\t\t\t\t988,\n\t\t\t\t\t\t\t989,\n\t\t\t\t\t\t\t990,\n\t\t\t\t\t\t\t-964,\n\t\t\t\t\t\t\t991,\n\t\t\t\t\t\t\t-957,\n\t\t\t\t\t\t\t992,\n\t\t\t\t\t\t\t993\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05113\",\n\t\t\t\t\t\t\"GEN\": \"Essen\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t994,\n\t\t\t\t\t\t\t995,\n\t\t\t\t\t\t\t996,\n\t\t\t\t\t\t\t997,\n\t\t\t\t\t\t\t998,\n\t\t\t\t\t\t\t999,\n\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\t1001,\n\t\t\t\t\t\t\t-422,\n\t\t\t\t\t\t\t1002,\n\t\t\t\t\t\t\t1003,\n\t\t\t\t\t\t\t-419,\n\t\t\t\t\t\t\t1004,\n\t\t\t\t\t\t\t-872,\n\t\t\t\t\t\t\t1005,\n\t\t\t\t\t\t\t-881,\n\t\t\t\t\t\t\t1006,\n\t\t\t\t\t\t\t1007,\n\t\t\t\t\t\t\t1008,\n\t\t\t\t\t\t\t1009\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05758\",\n\t\t\t\t\t\t\"GEN\": \"Herford\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-424,\n\t\t\t\t\t\t\t1010,\n\t\t\t\t\t\t\t-1001,\n\t\t\t\t\t\t\t1011,\n\t\t\t\t\t\t\t-999,\n\t\t\t\t\t\t\t1012,\n\t\t\t\t\t\t\t-997,\n\t\t\t\t\t\t\t1013,\n\t\t\t\t\t\t\t-995,\n\t\t\t\t\t\t\t1014\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05770\",\n\t\t\t\t\t\t\"GEN\": \"Minden-Lübbecke\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t1015,\n\t\t\t\t\t\t\t-18,\n\t\t\t\t\t\t\t1016,\n\t\t\t\t\t\t\t-16,\n\t\t\t\t\t\t\t1017,\n\t\t\t\t\t\t\t-940,\n\t\t\t\t\t\t\t1018,\n\t\t\t\t\t\t\t-938,\n\t\t\t\t\t\t\t1019,\n\t\t\t\t\t\t\t-936,\n\t\t\t\t\t\t\t1020,\n\t\t\t\t\t\t\t-476,\n\t\t\t\t\t\t\t1021,\n\t\t\t\t\t\t\t-474,\n\t\t\t\t\t\t\t1022,\n\t\t\t\t\t\t\t-481,\n\t\t\t\t\t\t\t1023,\n\t\t\t\t\t\t\t-479,\n\t\t\t\t\t\t\t1024,\n\t\t\t\t\t\t\t-184,\n\t\t\t\t\t\t\t1025,\n\t\t\t\t\t\t\t-182,\n\t\t\t\t\t\t\t1026,\n\t\t\t\t\t\t\t-626,\n\t\t\t\t\t\t\t1027,\n\t\t\t\t\t\t\t-217,\n\t\t\t\t\t\t\t1028,\n\t\t\t\t\t\t\t-215,\n\t\t\t\t\t\t\t1029,\n\t\t\t\t\t\t\t-620,\n\t\t\t\t\t\t\t1030,\n\t\t\t\t\t\t\t-22,\n\t\t\t\t\t\t\t1031,\n\t\t\t\t\t\t\t-20\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"12063\",\n\t\t\t\t\t\t\"GEN\": \"Havelland\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-1009,\n\t\t\t\t\t\t\t1032,\n\t\t\t\t\t\t\t-878,\n\t\t\t\t\t\t\t1033,\n\t\t\t\t\t\t\t-876,\n\t\t\t\t\t\t\t1034,\n\t\t\t\t\t\t\t-413,\n\t\t\t\t\t\t\t1035,\n\t\t\t\t\t\t\t-83,\n\t\t\t\t\t\t\t1036,\n\t\t\t\t\t\t\t-106,\n\t\t\t\t\t\t\t1037,\n\t\t\t\t\t\t\t-104,\n\t\t\t\t\t\t\t1038,\n\t\t\t\t\t\t\t-256,\n\t\t\t\t\t\t\t1039,\n\t\t\t\t\t\t\t-712,\n\t\t\t\t\t\t\t1040\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05754\",\n\t\t\t\t\t\t\"GEN\": \"Gütersloh\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-990,\n\t\t\t\t\t\t\t1041,\n\t\t\t\t\t\t\t-530,\n\t\t\t\t\t\t\t1042,\n\t\t\t\t\t\t\t1043,\n\t\t\t\t\t\t\t-974,\n\t\t\t\t\t\t\t1044,\n\t\t\t\t\t\t\t-966,\n\t\t\t\t\t\t\t1045\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05117\",\n\t\t\t\t\t\t\"GEN\": \"Mülheim an der Ruhr\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"arcs\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-372,\n\t\t\t\t\t\t\t1046,\n\t\t\t\t\t\t\t-370,\n\t\t\t\t\t\t\t1047,\n\t\t\t\t\t\t\t1048,\n\t\t\t\t\t\t\t-284,\n\t\t\t\t\t\t\t1049,\n\t\t\t\t\t\t\t-282,\n\t\t\t\t\t\t\t1050,\n\t\t\t\t\t\t\t-280,\n\t\t\t\t\t\t\t1051,\n\t\t\t\t\t\t\t-278,\n\t\t\t\t\t\t\t1052,\n\t\t\t\t\t\t\t-276,\n\t\t\t\t\t\t\t1053,\n\t\t\t\t\t\t\t1054,\n\t\t\t\t\t\t\t1055,\n\t\t\t\t\t\t\t-302,\n\t\t\t\t\t\t\t1056,\n\t\t\t\t\t\t\t1057,\n\t\t\t\t\t\t\t-153,\n\t\t\t\t\t\t\t1058,\n\t\t\t\t\t\t\t1059,\n\t\t\t\t\t\t\t1060,\n\t\t\t\t\t\t\t1061,\n\t\t\t\t\t\t\t-148,\n\t\t\t\t\t\t\t1062,\n\t\t\t\t\t\t\t-146,\n\t\t\t\t\t\t\t1063,\n\t\t\t\t\t\t\t-178,\n\t\t\t\t\t\t\t1064,\n\t\t\t\t\t\t\t-852,\n\t\t\t\t\t\t\t1065,\n\t\t\t\t\t\t\t1066,\n\t\t\t\t\t\t\t-868,\n\t\t\t\t\t\t\t-534,\n\t\t\t\t\t\t\t1067,\n\t\t\t\t\t\t\t-987,\n\t\t\t\t\t\t\t1068,\n\t\t\t\t\t\t\t-352,\n\t\t\t\t\t\t\t1069,\n\t\t\t\t\t\t\t-350,\n\t\t\t\t\t\t\t1070,\n\t\t\t\t\t\t\t-348,\n\t\t\t\t\t\t\t1071\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"type\": \"Polygon\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"AGS\": \"05954\",\n\t\t\t\t\t\t\"GEN\": \"Ennepe-Ruhr-Kreis\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"crs\": {\n\t\t\"type\": \"name\",\n\t\t\"properties\": {\n\t\t\t\"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\"\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./src/data/nrw-bb.topo.json\n// module id = 32\n// module chunks = 0","module.exports = \"f_mean,f_o5,f_sum,f_u1,f_u2,f_u5,m_mean,m_o5,m_sum,m_u1,m_u2,m_u5,t_mean,t_o5,t_sum,t_u1,t_u2,t_u5,state,name,ags,f_o5_rel\\n834,2302,19699,8174,3898,5325,692,1223,14122,6703,3085,3111,775,3525,33821,14877,6983,8436,05,Bielefeld,05711,11.7\\n929,2594,18469,7084,3399,5392,750,1322,12907,5875,2615,3095,855,3916,31376,12959,6014,8487,05,Bochum,05911,14.0\\n879,2588,20145,8105,3967,5485,787,1640,14519,6472,2853,3554,840,4228,34664,14577,6820,9039,05,Bonn,05314,12.8\\n1050,935,5689,1797,1068,1889,859,490,3747,1481,731,1045,974,1425,9436,3278,1799,2934,05,Bottrop,05512,16.4\\n885,5363,40959,16411,7981,11204,784,3226,28889,12933,5583,7147,843,8589,69848,29344,13564,18351,05,Düsseldorf,05111,13.1\\n902,3879,30263,11560,6114,8710,765,2334,20892,9871,3980,4707,846,6213,51155,21431,10094,13417,05,Dortmund,05913,12.8\\n979,3028,20617,7193,3855,6541,810,1695,14141,6295,2610,3541,910,4723,34758,13488,6465,10082,05,Duisburg,05112,14.7\\n922,4246,31846,11848,6111,9641,778,2399,22044,9868,4258,5519,863,6645,53890,21716,10369,15160,05,Essen,05113,13.3\\n976,1932,12975,4658,2467,3918,813,1117,9582,4126,1914,2425,907,3049,22557,8784,4381,6343,05,Gelsenkirchen,05513,14.9\\n973,1535,9986,3491,2028,2932,836,826,6808,2701,1405,1876,917,2361,16794,6192,3433,4808,05,Hagen,05914,15.4\\n989,1282,8922,3035,1612,2993,850,670,6281,2470,1192,1949,931,1952,15203,5505,2804,4942,05,Hamm,05915,14.4\\n1106,1080,5743,1831,1090,1742,864,547,4021,1555,887,1032,1006,1627,9764,3386,1977,2774,05,Herne,05916,18.8\\n1007,1827,11510,4062,2176,3445,901,1074,7590,3094,1392,2030,965,2901,19100,7156,3568,5475,05,Krefeld,05114,15.9\\n844,7515,61128,25803,11839,15971,736,4579,44928,21157,8706,10486,798,12094,106056,46960,20545,26457,05,Köln,05315,12.3\\n988,1103,7105,2543,1319,2140,851,556,4356,1934,753,1113,936,1659,11461,4477,2072,3253,05,Leverkusen,05316,15.5\\n1061,4702,27861,8674,5331,9154,862,2177,17482,6879,3639,4787,984,6879,45343,15553,8970,13941,05,Borken,05554,16.9\\n1051,2133,12386,4088,2425,3740,877,958,7452,2990,1469,2035,986,3091,19838,7078,3894,5775,05,Coesfeld,05558,17.2\\n1024,2387,15675,5037,2985,5266,882,1228,9269,3739,1721,2581,972,3615,24944,8776,4706,7847,05,Düren,05358,15.2\\n1029,2508,15254,5172,2904,4670,883,1261,9281,3754,1771,2495,974,3769,24535,8926,4675,7165,05,Ennepe-Ruhr-Kreis,05954,16.4\\n1022,1519,10354,3285,1932,3618,895,801,6141,2394,1148,1798,974,2320,16495,5679,3080,5416,05,Euskirchen,05366,14.7\\n958,3125,22634,7771,4433,7305,802,1470,14172,5885,2856,3961,898,4595,36806,13656,7289,11266,05,Gütersloh,05754,13.8\\n1018,2309,14208,4748,2680,4471,896,1183,8358,3278,1599,2298,973,3492,22566,8026,4279,6769,05,Heinsberg,05370,16.3\\n984,1766,11886,4172,2258,3690,814,895,7822,3346,1572,2009,917,2661,19708,7518,3830,5699,05,Herford,05758,14.9\\n997,2867,18835,6990,3286,5692,852,1384,11207,4713,2158,2952,943,4251,30042,11703,5444,8644,05,Hochsauerlandkreis,05958,15.2\\n1068,1342,7841,2640,1328,2531,885,516,3934,1638,729,1051,1007,1858,11775,4278,2057,3582,05,Höxter,05762,17.1\\n1036,2983,18798,6115,3524,6176,900,1571,11625,4591,2205,3258,984,4554,30423,10706,5729,9434,05,Kleve,05154,15.9\\n987,2437,15886,5715,2860,4874,771,1092,10113,4840,1723,2458,903,3529,25999,10555,4583,7332,05,Lippe,05766,15.3\\n983,3517,23760,8331,4594,7318,828,1666,14399,6053,2907,3773,925,5183,38159,14384,7501,11091,05,Märkischer Kreis,05962,14.8\\n1021,3638,22645,7720,4095,7192,871,2118,15981,6578,2980,4305,959,5756,38626,14298,7075,11497,05,Mettmann,05158,16.1\\n946,2282,16232,5756,3219,4975,789,1071,9664,4157,2021,2415,887,3353,25896,9913,5240,7390,05,Minden-Lübbecke,05770,14.1\\n1011,2576,16614,5553,3169,5316,876,1319,10192,4047,1995,2831,959,3895,26806,9600,5164,8147,05,Oberbergischer Kreis,05374,15.5\\n1091,1508,9165,2693,1734,3230,933,726,5237,2067,956,1488,1034,2234,14402,4760,2690,4718,05,Olpe,05966,16.5\\n978,2706,18918,6651,3546,6015,790,1307,12268,5394,2460,3107,904,4013,31186,12045,6006,9122,05,Paderborn,05774,14.3\\n1076,4952,29438,9282,5357,9847,944,2809,18978,7182,3487,5500,1024,7761,48416,16464,8844,15347,05,Recklinghausen,05562,16.8\\n959,3553,24147,8539,4629,7426,811,1882,15910,6691,3466,3871,900,5435,40057,15230,8095,11297,05,Rhein-Erft-Kreis,05362,14.7\\n1022,3289,20487,6966,3712,6520,875,1691,12978,5199,2516,3572,965,4980,33465,12165,6228,10092,05,Rhein-Kreis Neuss,05162,16.1\\n927,4262,30461,11374,5996,8829,804,2352,19840,8727,3953,4808,878,6614,50301,20101,9949,13637,05,Rhein-Sieg-Kreis,05382,14.0\\n1024,2349,14224,4773,2767,4335,849,1140,9341,3779,1783,2639,954,3489,23565,8552,4550,6974,05,Rheinisch-Bergischer Kreis,05378,16.5\\n963,2528,18519,6300,3633,6058,803,1209,11012,4611,2173,3019,903,3737,29531,10911,5806,9077,05,Siegen-Wittgenstein,05970,13.7\\n1000,2671,17835,5906,3335,5923,849,1239,10600,4325,2033,3003,944,3910,28435,10231,5368,8926,05,Soest,05974,15.0\\n1020,4311,27839,9188,5205,9135,862,2265,18646,7447,3654,5280,957,6576,46485,16635,8859,14415,05,Steinfurt,05566,15.5\\n1039,3196,18943,6132,3555,6060,887,1743,12538,4928,2275,3592,979,4939,31481,11060,5830,9652,05,Unna,05978,16.9\\n1041,2620,15590,5027,2948,4995,882,1355,10055,4072,1818,2810,978,3975,25645,9099,4766,7805,05,Viersen,05166,16.8\\n1058,2629,15542,4838,2945,5130,891,1347,9937,3801,1937,2852,993,3976,25479,8639,4882,7982,05,Warendorf,05570,16.9\\n1003,3978,26412,8812,4867,8755,868,2019,16139,6377,3106,4637,952,5997,42551,15189,7973,13392,05,Wesel,05170,15.1\\n1025,1308,8097,2754,1494,2541,899,752,5480,2165,1077,1486,974,2060,13577,4919,2571,4027,05,Mülheim an der Ruhr,05117,16.2\\n808,2493,21353,9315,4149,5396,711,1444,14882,7195,2918,3325,768,3937,36235,16510,7067,8721,05,Münster,05515,11.7\\n922,2318,16323,6535,3020,4450,798,1177,9971,4586,1850,2358,875,3495,26294,11121,4870,6808,05,Mönchengladbach,05116,14.2\\n933,1551,11833,4092,2712,3478,800,755,6878,2825,1522,1776,884,2306,18711,6917,4234,5254,05,Oberhausen,05119,13.1\\n1018,979,6655,2223,1235,2218,875,515,4040,1602,793,1130,964,1494,10695,3825,2028,3348,05,Remscheid,05120,14.7\\n1033,1238,7440,2575,1386,2241,877,701,5215,2148,1005,1361,969,1939,12655,4723,2391,3602,05,Solingen,05122,16.6\\n921,4506,32250,12602,5924,9218,734,2597,26158,12396,5112,6053,837,7103,58408,24998,11036,15271,05,Städteregion Aachen,05334,14.0\\n953,2631,18176,6457,3591,5497,822,1490,12675,5360,2485,3340,900,4121,30851,11817,6076,8837,05,Wuppertal,05124,14.5\\n864,473,3824,1477,766,1108,751,333,3412,1484,689,906,811,806,7236,2961,1455,2014,12,Barnim,12060,12.4\\n824,210,1746,632,423,481,796,201,1692,652,386,453,810,411,3438,1284,809,934,12,Brandenburg an der Havel,12051,12.0\\n819,610,4475,1978,931,956,722,431,3951,1897,787,836,774,1041,8426,3875,1718,1792,12,Cottbus,12052,13.6\\n783,246,2229,960,489,534,713,161,1784,792,397,434,752,407,4013,1752,886,968,12,Frankfurt (Oder),12053,11.0\\n851,472,3568,1426,775,895,778,364,3203,1468,645,726,816,836,6771,2894,1420,1621,12,Dahme-Spreewald,12061,13.2\\n1038,474,2592,832,468,818,913,280,1768,683,328,477,987,754,4360,1515,796,1295,12,Elbe-Elster,12062,18.3\\n871,499,3654,1439,693,1023,859,415,2965,1248,548,754,866,914,6619,2687,1241,1777,12,Havelland,12063,13.7\\n920,553,3972,1467,769,1183,761,379,3458,1549,656,874,846,932,7430,3016,1425,2057,12,Märkisch-Oderland,12064,13.9\\n887,636,4544,1727,955,1226,765,426,4079,1727,849,1077,829,1062,8623,3454,1804,2303,12,Oberhavel,12065,14.0\\n945,412,2796,966,572,846,837,249,1865,774,365,477,902,661,4661,1740,937,1323,12,Oberspreewald-Lausitz,12066,14.7\\n894,479,3687,1317,763,1128,787,315,3221,1294,680,932,844,794,6908,2611,1443,2060,12,Oder-Spree,12067,13.0\\n862,299,2159,826,486,548,775,183,1729,702,384,460,823,482,3888,1528,870,1008,12,Ostprignitz-Ruppin,12068,13.8\\n743,615,8031,3304,1674,2438,749,470,4735,2158,886,1221,745,1085,12766,5462,2560,3659,12,Potsdam-Mittelmark,12069,7.7\\n940,295,1946,711,365,575,857,200,1562,605,296,461,903,495,3508,1316,661,1036,12,Prignitz,12070,15.2\\n998,439,2508,881,464,724,876,233,1765,697,338,497,948,672,4273,1578,802,1221,12,Spree-Neiße,12071,17.5\\n934,496,3323,1219,648,960,815,363,3108,1266,637,842,877,859,6431,2485,1285,1802,12,Teltow-Fläming,12072,14.9\\n649,437,6277,2971,1366,1503,644,334,5142,2401,1063,1344,647,771,11419,5372,2429,2847,12,Potsdam,12054,7.0\\n878,406,2875,1140,575,754,804,269,2132,924,423,516,846,675,5007,2064,998,1270,12,Uckermark,12073,14.1\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/data/nrw_bb.csv\n// module id = 33\n// module chunks = 0","// https://github.com/topojson/topojson Version 3.0.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nvar identity = function(x) {\n  return x;\n};\n\nvar transform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar bbox = function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n};\n\nvar reverse = function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n};\n\nvar feature = function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature$1(topology, o); })}\n      : feature$1(topology, o);\n};\n\nfunction feature$1(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nfunction object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n\nvar stitch = function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n};\n\nvar mesh = function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n};\n\nfunction meshArcs(topology, object$$1, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object$$1, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object$$1, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object$$1);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nvar merge = function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n};\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nvar bisect = function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n};\n\nvar neighbors = function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n};\n\nvar untransform = function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n};\n\nvar quantize = function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \\u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n};\n\n// Computes the bounding box of the specified hash of GeoJSON objects.\nvar bounds = function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n};\n\nvar hashset = function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n};\n\nvar hashmap = function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n};\n\nvar equalPoint = function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n};\n\n// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16);\nvar floats = new Float64Array(buffer);\nvar uints = new Uint32Array(buffer);\n\nvar hashPoint = function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n};\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nvar join = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n};\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nvar cut = function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n};\n\nfunction rotateArray(array, start, end, offset) {\n  reverse$1(array, start, end);\n  reverse$1(array, start, start + offset);\n  reverse$1(array, start + offset, end);\n}\n\nfunction reverse$1(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n\n// Given a cut topology, combines duplicate arcs.\nvar dedup = function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n};\n\n// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nvar delta = function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n};\n\n// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nvar extract = function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n};\n\n// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nvar geometry = function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n};\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nvar prequantize = function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n};\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nvar topology = function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry$$1) {\n    if (geometry$$1 && indexGeometryType.hasOwnProperty(geometry$$1.type)) indexGeometryType[geometry$$1.type](geometry$$1);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n};\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n\nvar prune = function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      newArcs = [],\n      newArcIndex = -1,\n      newIndexByOldIndex = new Array(oldArcs.length),\n      key;\n\n  function pruneGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(pruneGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: pruneArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(pruneArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(pruneMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function pruneArc(oldIndex) {\n    var oldReverse = oldIndex < 0 && (oldIndex = ~oldIndex, true), newIndex;\n\n    // If this is the first instance of this arc, record it under its new index.\n    if ((newIndex = newIndexByOldIndex[oldIndex]) == null) {\n      newIndexByOldIndex[oldIndex] = newIndex = ++newArcIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n\n    return oldReverse ? ~newIndex : newIndex;\n  }\n\n  function pruneArcs(arcs) {\n    return arcs.map(pruneArc);\n  }\n\n  function pruneMultiArcs(arcs) {\n    return arcs.map(pruneArcs);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = pruneGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n};\n\nvar filter = function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n};\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n\nvar filterAttached = function(topology) {\n  var uniqueRingByArc = {}, // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ringIndex = 0,\n      name;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ringIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var uniqueRing = uniqueRingByArc[arc];\n        if (uniqueRing >= 0 && uniqueRing !== ringIndex) uniqueRingByArc[arc] = -1;\n        else uniqueRingByArc[arc] = ringIndex;\n      }\n    }\n  }\n\n  for (name in topology.objects) {\n    testGeometry(topology.objects[name]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (arc = ring[j], uniqueRingByArc[arc < 0 ? ~arc : arc] < 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\nfunction planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nfunction planarRingArea$1(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n\nvar filterWeight = function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea$1;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n};\n\nvar filterAttachedWeight = function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n};\n\nfunction compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nvar newHeap = function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n};\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nvar presimplify = function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar quantile = function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile$1(array.sort(descending), p);\n};\n\nfunction quantile$1(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n\nvar simplify = function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n};\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar quarterPi = pi / 4;\nvar radians = pi / 180;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nfunction sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nfunction sphericalTriangleArea(t) {\n  var sum = halfArea(t, false);\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexports.bbox = bbox;\nexports.feature = feature;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.neighbors = neighbors;\nexports.quantize = quantize;\nexports.transform = transform;\nexports.untransform = untransform;\nexports.topology = topology;\nexports.filter = filter;\nexports.filterAttached = filterAttached;\nexports.filterAttachedWeight = filterAttachedWeight;\nexports.filterWeight = filterWeight;\nexports.planarRingArea = planarRingArea$1;\nexports.planarTriangleArea = planarTriangleArea;\nexports.presimplify = presimplify;\nexports.quantile = quantile;\nexports.simplify = simplify;\nexports.sphericalRingArea = sphericalRingArea;\nexports.sphericalTriangleArea = sphericalTriangleArea;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/topojson/dist/topojson.js\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}